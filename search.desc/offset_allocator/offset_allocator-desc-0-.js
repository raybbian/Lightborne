searchState.loadedDescShard("offset_allocator", 0, "<code>offset-allocator</code>\nA single allocation.\nAn allocator that manages a single contiguous chunk of …\nThe maximum value representable in this type.\nDetermines the number of allocations that the allocator …\nThe <code>NonMax</code> version of the <code>NodeIndex</code>.\nThe <code>NonMax</code> version of this type.\nProvides a summary of the state of the allocator, …\nProvides a detailed accounting of each bin within the …\nA detailed accounting of each allocator bin.\nAllocates a block of <code>size</code> elements and returns its …\nReturns the <em>used</em> size of an allocation.\nThe number of allocations in the bin.\nExtension functions not present in the original C++ …\nFrees an allocation, returning the data to the heap.\nEach bin within the allocator.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts from a unsigned 32-bit integer to an instance of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum potential size of a single contiguous …\nCreates a new allocator, managing a contiguous block of …\nThe location of this allocation within the buffer.\nClears out all allocations.\nThe size of the bin, in units.\nReturns a structure containing the amount of free space …\nReturns detailed information about the number of …\nConverts this type to an unsigned machine word.\nConverts this type to an unsigned machine word.\nThe amount of free space left.\nCreates a new allocator, managing a contiguous block of …\nReturns the minimum allocator size needed to hold an …")