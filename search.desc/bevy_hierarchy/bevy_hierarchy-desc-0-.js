searchState.loadedDescShard("bevy_hierarchy", 0, "Parent-child relationships for Bevy entities.\nCommand that adds a child to an entity.\nCommand that pushes children to the end of the entity’s …\nAn <code>Iterator</code> of <code>Entity</code>s over the ancestors of an <code>Entity</code>.\nTrait for removing, adding and replacing children and …\nChild builder type.\nFired whenever an <code>Entity</code> is added as a child to a parent.\nTrait for building children entities and adding them to a …\nStruct for building children entities and adding them to a …\nFired whenever a child <code>Entity</code> is moved to a new parent.\nFired whenever a child <code>Entity</code> is removed from its parent.\nContains references to the child entities of this entity.\nCommand that clears all children from an entity and …\nAn <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.\nAn <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.\nDespawns the given entity’s children recursively\nDespawns the given entity and all its children recursively\nTrait that holds functions for despawning recursively down …\nAn <code>Event</code> that is fired whenever there is a change in the …\nProvides hierarchy functionality to a Bevy app.\nAn extension trait for <code>Query</code> that adds hierarchy related …\nCommand that inserts a child at a given index of a parent…\nHolds a reference to the parent entity of this entity. …\nCommand that removes children from an entity, and removes …\nCommand that removes the parent of an entity, and removes …\nCommand that clear all children from an entity, replacing …\nWhen enabled, runs …\nSpawn output type. Both <code>spawn</code> and <code>spawn_empty</code> return an …\nPrint a warning for each <code>Entity</code> with a <code>T</code> component whose …\nStruct for adding children to an entity directly through …\nAdds a single child.\nPushes children to the back of the builder’s children. …\nGets the parent <code>Entity</code> as a slice of length 1.\nSystem to print a warning for each <code>Entity</code> with a <code>T</code> …\n<code>Entity</code> whose parent must be removed.\nChild entity to add.\nReturns a slice over the <code>Children</code> of the given <code>entity</code>.\nRemoves all children from this entity. The <code>Children</code> …\nDespawns all descendants of the given entity.\nDespawns the provided entity alongside all descendants.\nFunction for despawning an entity and all its children\nWhether to run …\nAdds a command to be executed, like <code>Commands::queue</code>.\nTarget entity\nTarget entity\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nGets the <code>Entity</code> ID of the parent.\nInserts children at the given index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an <code>Iterator</code> of <code>Entity</code>s over the leaves of the …\nReturns an <code>Iterator</code> of <code>Entity</code>s over the <code>entity</code>s immediate …\nReturns a new <code>DescendantIter</code>.\nReturns a new <code>DescendantDepthFirstIter</code>.\nReturns a new <code>AncestorIter</code>.\nConstructs a new object\nRun criteria that only allows running when …\nReturns the parent <code>Entity</code> of the given <code>entity</code>, if any.\nParent entity to add the child to.\nReturns the parent entity.\nThe hierarchy prelude.\nRemoves the given children\nRemoves the <code>Parent</code> of this entity.\nRemoves all current children from this entity, replacing …\nReturns the topmost ancestor of the given <code>entity</code>.\nSets the parent of this entity.\nSorts children stably in place using the provided …\nSorts children stably in place using the provided key …\nSorts children stably in place using the provided key …\nSorts children unstably in place using the provided …\nSorts children unstably in place using the provided key …\nSpawns an entity with the given bundle and inserts it into …\nSpawns an <code>Entity</code> with no components and inserts it into …\nSwaps the child at <code>a_index</code> with the child at <code>b_index</code>.\nSimilar to <code>Self::despawn_descendants</code> but does not emit …\nSimilar to <code>Self::despawn_recursive</code> but does not emit …\nWhether or not this command should output a warning if the …\nWhether or not this command should output a warning if the …\nSpawns the passed bundle and adds it to this entity as a …\nTakes a closure which builds children for this entity …\nThe child that was added\nThe child that was removed\nThe child that was moved\nThe parent the child was added to\nThe parent the child was added to\nThe parent the child was removed from\nThe parent the child was removed from\nContains references to the child entities of this entity.\nHolds a reference to the parent entity of this entity. …")