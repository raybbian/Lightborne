searchState.loadedDescShard("bevy_rapier2d", 0, "Official integration of Rapier to the Bevy game engine\nComponents related to character control.\nComponents related to physics dynamics (rigid-bodies, …\nComponents related to physics geometry (colliders, …\nType aliases to select the right vector/rotation types …\nComponents and resources related to the physics simulation …\nThe physics plugin and systems.\nGroups the most often used types.\nThe debug-renderer.\nMiscellaneous helper functions.\nThe length is specified as an absolute value, independent …\nConfiguration for the auto-stepping character controller …\nA collision between the character and its environment …\nA length measure used for various options of a character …\nA character controller for kinematic bodies and …\nThe output of a character control.\nOptions for moving a shape using <code>RapierContext::move_shape</code>.\nThe allowed movement computed by <code>RapierContext::move_shape</code>.\nThe length is specified relative to some of the character …\nShould the character apply forces to dynamic bodies in its …\nShould the character apply forces to dynamic bodies in its …\nShould the character automatically step over small …\nShould the character automatically step over small …\nThe rotation of the character when the collider was hit.\nThe position of the character when the collider was hit.\nCollisions between the character and obstacles found in …\nThe mass to be used for impulse of dynamic bodies. This …\nThe shape, and its position, to be used instead of the …\nThe initial desired movement of the character if there …\nThe translation calculated by the last character control …\nThe translation calculated by the last character control …\nThe entity hit by the character.\nFlags for filtering-out some categories of entities from …\nGroups for filtering-out some colliders from the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nIndicates whether the shape is grounded after its …\nIndicates whether the shape is grounded after its …\nGeometric information about the hit.\nCan the character automatically step over dynamic bodies …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIndicates whether the shape is sliding down a slope after …\nIndicates whether the shape is sliding down a slope after …\nReturns <code>self</code> with its value changed by the closure <code>f</code> if …\nReturns <code>self</code> with its value changed by the closure <code>f</code> if …\nThe maximum step height a character can automatically step …\nThe maximum angle (radians) between the floor’s normal …\nThe maximum angle (radians) between the floor’s normal …\nThe minimum angle (radians) between the floor’s normal …\nThe minimum angle (radians) between the floor’s normal …\nThe minimum width of free space that must be available …\nIncrease this number if your character appears to get …\nIncrease this number if your character appears to get …\nA small gap to preserve between the character and its …\nA small gap to preserve between the character and its …\nShould the character try to slide against the floor if it …\nShould the character try to slide against the floor if it …\nShould the character be automatically snapped to the …\nShould the character be automatically snapped to the …\nThe translations we desire the character to move by if it …\nThe translation that was already applied to the character …\nThe translations that was still waiting to be applied to …\nThe direction that goes “up”. Used to determine where …\nThe direction that goes “up”. Used to determine where …\nThe set of all angular degrees of freedom.\nThe angular degree of freedom of a joint.\nThe solved spring-like equation is: …\nMass-properties of a <code>RigidBody</code>, added to the contributions …\nSet the additional number of solver iterations run for a …\nThe rotational degree of freedom along the joint’s local …\nThe two coefficients are averaged.\nInformation used for Continuous-Collision-Detection.\nRules used to combine two coefficients.\nDamping factors to gradually slow down a <code>RigidBody</code>.\nThe dominance groups of a <code>RigidBody</code>.\nA <code>RigidBody::Dynamic</code> body can be affected by all external …\nConstant external forces applied continuously to a …\nInstantaneous external impulse applied continuously to a …\nThe set of degrees of freedom left free by a fixed joint.\nThe set of degrees of freedom left free by a prismatic …\nThe set of degrees of freedom left free by a revolute …\nA <code>RigidBody::Fixed</code> body cannot be affected by external …\nA fixed joint, locks all relative motion between two …\nSee <code>FixedJoint</code>\nCreate fixed joints using the builder pattern.\nThe solved spring-like equation is: …\nThe description of any joint.\nSee <code>GenericJoint</code>\nCreate generic joints using the builder pattern.\nGravity is multiplied by this scaling factor before it’s …\nAn impulse-based joint attached to two entities.\nA bit mask identifying multiple degrees of freedom of a …\nIdentifiers of degrees of freedoms of a joint.\nA <code>RigidBody::KinematicPositionBased</code> body cannot be …\nA <code>RigidBody::KinematicVelocityBased</code> body cannot be …\nThe set of all translational degrees of freedom.\nThe linear (translational) degree of freedom along the …\nThe linear (translational) degree of freedom along the …\nThe set of degrees of freedom locked by a fixed joint.\nThe set of degrees of freedom locked by a prismatic joint.\nThe set of degrees of freedom locked by a revolute joint.\nThe linear (translational) degree of freedom along the …\nThe linear (translational) degree of freedom along the …\nFlags affecting the behavior of the constraints solver for …\nThis mass will be added to the <code>RigidBody</code>. The …\nEntity that likely had their mass properties changed this …\nCenter-of-mass, mass, and angular inertia.\nThese mass properties will be added to the <code>RigidBody</code>.\nThe greatest coefficient is chosen.\nThe smallest coefficient is chosen.\nThe spring-like model used for constraints resolution.\nAn joint based on generalized coordinates, attached to two …\nThe two coefficients are multiplied.\nA prismatic joint, locks all relative motion between two …\nSee <code>PrismaticJoint</code>\nCreate prismatic joints using the builder pattern.\nCombination of flags indicating that the <code>RigidBody</code> cannot …\nFlag indicating that the <code>RigidBody</code> cannot rotate along the …\nFlag indicating that the <code>RigidBody</code> cannot rotate along the …\nFlag indicating that the <code>RigidBody</code> cannot rotate along the …\nThe handle of an impulse joint added to the physics scene.\nThe handle of a multibody joint added to the physics scene.\nThe Rapier handle of a <code>RigidBody</code> that was inserted to the …\nCenter-of-mass, mass, and angular inertia.\nA revolute joint, locks all relative motion except for …\nSee <code>RevoluteJoint</code>\nCreate revolute joints using the builder pattern.\nA <code>RigidBody</code>.\nIndicates whether or not the <code>RigidBody</code> is disabled …\nA rope joint, limits the maximum distance between two …\nSee <code>RopeJoint</code>\nCreate rope joints using the builder pattern.\nThe activation status of a body.\nSets the maximum prediction distance Soft Continuous …\nA spring-damper joint, applies a force proportional to the …\nSee <code>SpringJoint</code>\nA SpringJoint joint using the builder pattern.\nFlag indicating that the <code>RigidBody</code> cannot translate along …\nFlag indicating that the <code>RigidBody</code> cannot translate along …\nFlag indicating that the <code>RigidBody</code> cannot translate along …\nFlag indicating that the <code>RigidBody</code> cannot translate along …\nIf the <code>TimestepMode::Interpolated</code> mode is set and this …\nWrapper enum over a specific joint.\nThe velocity of a <code>RigidBody</code>.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe angle along the free degree of freedom of this …\nThe angle along the free degree of freedom of this …\nInitialize a velocity with the given angular velocity, and …\nDamping factor for gradually slowing down the angular …\nThe angular velocity below which the body can fall asleep.\nThe angular velocity of the <code>RigidBody</code> in radian per second.\nConverts the joint to its specific variant, if it is one.\nConverts the joint to its specific mutable variant, if it …\nConverts the joint to its specific variant, if it is one.\nConverts the joint to its specific mutable variant, if it …\nConverts the joint to its specific variant, if it is one.\nConverts the joint to its specific mutable variant, if it …\nConverts the joint to its specific variant, if it is one.\nConverts the joint to its specific mutable variant, if it …\nA force applied at a specific world-space point of a …\nAn impulse applied at a specific world-space point of a …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nBuilds the generic joint.\nBuild the fixed joint.\nBuilds the prismatic joint.\nBuilds the revolute joint.\nBuilds the rope joint.\nBuilds the spring joint.\nCombines the coefficients used for solving the spring …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nAre contacts between the attached rigid-bodies enabled?\nAre contacts between the attached rigid-bodies enabled?\nAre contacts between the attached rigid-bodies enabled?\nAre contacts between the attached rigid-bodies enabled?\nAre contacts between the attached rigid-bodies enabled?\nAre contacts between the attached rigid-bodies enabled?\nSets whether contacts between the attached rigid-bodies …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nSets the coupled degrees of freedom for this joint’s …\nThe joint’s description.\nThe joint’s description.\nThe underlying joint data.\nThe underlying joint data.\nThe underlying joint data.\nThe underlying joint data.\nThe underlying joint data.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nDisable CCD for a <code>RigidBody</code>.\nCreates a components that disables sleeping for the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nEnable CCD for a <code>RigidBody</code>.\nIs CCD enabled for this <code>RigidBody</code>?\nThe end point of the interpolation.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe linear force applied to the <code>RigidBody</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nConverts Rapier’s <code>MassProperties</code> structure to <code>Self</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nGet the <code>MassProperties</code> of this <code>RigidBody</code>.\nInitialize the dominance to the given group.\nThe dominance groups of a <code>RigidBody</code>.\nThe linear impulse applied to the <code>RigidBody</code>.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this joint into a Rapier joint.\nConverts these mass-properties to Rapier’s <code>MassProperties</code>…\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nInterpolates between the start and end positions with <code>t</code> in …\nThe joint limits along the specified axis.\nSets the joint limits along the specified axis.\nThe limit distance attached bodies can translate along the …\nSets the <code>[min,max]</code> limit distances attached bodies can …\nThe limit angle attached bodies can translate along the …\nSets the <code>[min,max]</code> limit angles attached bodies can rotate …\nThe limit distance attached bodies can translate along the …\nInitialize a velocity with the given linear velocity, and …\nDamping factor for gradually slowing down the …\nGet linear velocity of specific world-space point of a …\nThe linear velocity of the <code>RigidBody</code>.\nThe anchor of this joint, expressed in the first …\nSets the anchor of this joint, expressed in the first …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe anchor of this joint, expressed in the second …\nSets the anchor of this joint, expressed in the second …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe principal (local X) axis of this joint, expressed in …\nSets the principal (local X) axis of this joint, expressed …\nThe principal axis of the joint, expressed in the …\nSets the principal axis of the joint, expressed in the …\nThe principal axis of the joint, expressed in the …\nSets the principal axis of the joint, expressed in the …\nThe principal (local X) axis of this joint, expressed in …\nSets the principal (local X) axis of this joint, expressed …\nThe principal axis of the joint, expressed in the …\nSets the principal axis of the joint, expressed in the …\nThe principal axis of the joint, expressed in the …\nSets the principal axis of the joint, expressed in the …\nThe basis of this joint, expressed in the first …\nSets the joint’s frame, expressed in the first …\nThe joint’s basis, expressed in the first rigid-body’s …\nSets the joint’s basis, expressed in the first …\nThe basis of this joint, expressed in the second …\nSets the joint’s frame, expressed in the second …\nThe joint’s basis, expressed in the second …\nSets joint’s basis, expressed in the second …\nThe center of mass of a <code>RigidBody</code> expressed in its …\nAdd the specified axes to the set of axes locked by this …\nThe set of axes locked by this joint.\nSets the degrees of freedom locked by the joint.\nThe mass of a <code>RigidBody</code>.\nThe maximum distance between the attached bodies.\nSets the maximum allowed distance between the attached …\nThe motor affecting the joint’s degree of freedom along …\nThe motor affecting the joint’s translational degree of …\nThe motor affecting the joint’s rotational degree of …\nConfigure both the target angle and target velocity of the …\nThe motor affecting the joint’s translational degree of …\nSets the maximum force the motor can deliver along the …\nSets the maximum force the motor can deliver.\nSets the maximum force the motor can deliver.\nSets the maximum force the motor can deliver.\nThe spring-like motor model along the specified axis of …\nSet the spring-like model used by the motor to reach the …\nSet the spring-like model used by the motor to reach the …\nSet the spring-like model used by the motor to reach the …\nSet the spring-like model used by the motor to reach the …\nSets the target angle this motor needs to reach.\nSets the target angle this motor needs to reach.\nSets the target angle this motor needs to reach.\nSets the target angle this motor needs to reach.\nSets the target velocity this motor needs to reach.\nSets the target velocity this motor needs to reach.\nSets the target velocity this motor needs to reach.\nSets the target velocity this motor needs to reach.\nCreates a new generic joint that locks the specified …\nCreates a new generic joint builder.\nInitializes an impulse-based joint from its first endpoint …\nInitializes an joint based on reduced coordinates from its …\nCreates a new fixed joint.\nCreates a new builder for fixed joints.\nCreates a new prismatic joint allowing only relative …\nCreates a new builder for prismatic joints.\nCreates a new revolute joint allowing only relative …\nCreates a new revolute joint builder.\nCreates a new rope joint limiting the max distance between …\nCreates a new builder for rope joints.\nCreates a new spring joint limiting the max distance …\nCreates a new builder for spring joints.\nThe linear velocity below which the body can fall asleep.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe entity containing the rigid-body used as the first …\nThe entity containing the rigid-body used as the first …\nThe soft CCD prediction distance.\nThe principal angular inertia of the <code>RigidBody</code>.\nThe raw Rapier description of the joint.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nReset the external impulses to zero.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSets whether contacts between the attached rigid-bodies …\nSets whether contacts between the attached rigid-bodies …\nSets whether contacts between the attached rigid-bodies …\nSets whether contacts between the attached rigid-bodies …\nSets whether contacts between the attached rigid-bodies …\nSets whether contacts between the attached rigid-bodies …\nSets the coupled degrees of freedom for this joint’s …\nSets the joint limits along the specified axis.\nSets the <code>[min,max]</code> limit distances attached bodies can …\nSets the <code>[min,max]</code> limit angle attached bodies can …\nSets anchor of this joint, expressed in the first …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets anchor of this joint, expressed in the second …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the principal (local X) axis of this joint, expressed …\nSets the principal axis of the joint, expressed in the …\nSets the principal axis of the joint, expressed in the …\nSets the principal (local X) axis of this joint, expressed …\nSets the principal axis of the joint, expressed in the …\nSets the principal axis of the joint, expressed in the …\nSets the joint’s frame, expressed in the first …\nSets the joint’s basis, expressed in the first …\nSets the joint’s frame, expressed in the second …\nSets joint’s basis, expressed in the second …\nSets the maximum allowed distance between the attached …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nSets the maximum force the motor can deliver along the …\nSets the maximum force the motor can deliver.\nSets the maximum force the motor can deliver.\nSets the maximum force the motor can deliver.\nSet the spring-like model used by the motor to reach the …\nSet the spring-like model used by the motor to reach the …\nSet the spring-like model used by the motor to reach the …\nSet the spring-like model used by the motor to reach the …\nSets the target angle this motor needs to reach.\nSets the target angle this motor needs to reach.\nSets the target angle this motor needs to reach.\nSets the target angle this motor needs to reach.\nSets the target velocity this motor needs to reach.\nSets the target velocity this motor needs to reach.\nSets the target velocity this motor needs to reach.\nSets the target velocity this motor needs to reach.\nSet the spring model used by this joint to reach the …\nIs this body sleeping?\nSet the spring used by this joint to reach the desired …\nThe starting point of the interpolation.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe angular torque applied to the <code>RigidBody</code>.\nThe angular impulse applied to the <code>RigidBody</code>.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nInitialize a velocity set to zero.\nAll of the groups.\nThis scale will replace the one specified in the …\nFlags affecting whether or not collision-detection happens …\nFlags affecting the events generated for this <code>Collider</code>.\nFlags affecting the behavior of the constraints solver for …\nIf set, Rapier will call …\nThe constraint solver will take this contact manifold into …\nIf set, the connected components of the trimesh will be …\nIf set, Rapier will call …\nA geometric entity that can be attached to a <code>RigidBody</code> so …\nIndicates whether or not the collider is disabled …\nCustom mass-properties of a <code>Collider</code>.\nOverwrites the default application of <code>GlobalTransform</code> …\nComponent which will be filled (if present) with a list of …\nPairwise collision filtering using bit masks.\nThe total force magnitude beyond which a <code>ContactForceEvent</code> …\nSets the contact skin of the collider.\nThe shape-casting algorithm converged successfully.\nIf set, any triangle that results in a failing half-hedge …\nIf set, the triangles sharing two vertices with identical …\nIf set, two triangles sharing three vertices with …\nEnable collision-detection between a collider attached to …\nEnable collision-detection between a collider attached to …\nEnable collision-detection between a collider attached to …\nThe mass-properties are computed automatically from the …\nIf set, Rapier will call <code>PhysicsHooks::filter_contact_pair</code> …\nIf set, Rapier will call …\nIf set, a special treatment will be applied to contact …\nSomething went wrong during the shape-casting, likely due …\nControls how the voxelization determines which voxel needs …\nUse a flood-fill technique to consider fill the voxels …\nThe friction affecting a <code>Collider</code>.\nThe group n°1.\nThe group n°10.\nThe group n°11.\nThe group n°12.\nThe group n°13.\nThe group n°14.\nThe group n°15.\nThe group n°16.\nThe group n°17.\nThe group n°18.\nThe group n°19.\nThe group n°2.\nThe group n°20.\nThe group n°21.\nThe group n°22.\nThe group n°23.\nThe group n°24.\nThe group n°25.\nThe group n°26.\nThe group n°27.\nThe group n°28.\nThe group n°29.\nThe group n°3.\nThe group n°30.\nThe group n°31.\nThe group n°32.\nThe group n°4.\nThe group n°5.\nThe group n°6.\nThe group n°7.\nThe group n°8.\nThe group n°9.\nA bit mask identifying groups for interaction.\nIf set, the half-edge topology of the trimesh will be …\nEnable collision-detection between a collider attached to …\nEnable collision-detection between a collider attached to …\nIf set, the duplicate vertices of the trimesh will be …\nIf set, Rapier will call …\nThe mass-properties are computed automatically from the …\nThe mass-properties of the collider are replaced by the …\nNone of the groups.\nIf set, the trimesh will be assumed to be oriented (with …\nThe shape-casting algorithm ran out of iterations before …\nThe two shape already overlap, or are separated by a …\nResult of the projection of a point on a shape.\nThe Rapier handle of a collider that was inserted to the …\nStructure containing the result of a successful ray cast.\nThis scale will be multiplied with the scale in the …\nThe restitution affecting a <code>Collider</code>.\nEnable collision-detection between a collider attached to …\nIndicates whether or not the <code>Collider</code> is a sensor.\nThe result of a shape cast.\nIn depth information about a shape-cast hit.\nConfiguration for controlling the behavior of …\nThe status of the time-of-impact computation algorithm.\nFlags affecting the behavior of the constraints solver for …\nPairwise constraints resolution filtering using bit masks.\nOnly consider full the voxels intersecting the surface of …\nThe status of the cell of an heightfield.\nParameters controlling the VHACD convex decomposition.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nControls the bias toward clipping along symmetry planes.\nDowncast this collider to a ball, if it is one.\nDowncast this collider to a mutable ball, if it is one.\nDowncast this collider to a capsule, if it is one.\nDowncast this collider to a mutable capsule, if it is one.\nDowncast this collider to a compound shape, if it is one.\nDowncast this collider to a convex polygon, if it is one.\nDowncast this collider to a cuboid, if it is one.\nDowncast this collider to a mutable cuboid, if it is one.\nDowncast this collider to a half-space, if it is one.\nDowncast this collider to a mutable half-space, if it is …\nDowncast this collider to a heightfield, if it is one.\nDowncast this collider to a mutable heightfield, if it is …\nDowncast this collider to a polyline, if it is one.\nDowncast this collider to a mutable polyline, if it is one.\nDowncast this collider to a segment, if it is one.\nDowncast this collider to a mutable segment, if it is one.\nDowncast this collider to a triangle, if it is one.\nDowncast this collider to a mutable triangle, if it is one.\nDowncast this collider to a triangle mesh, if it is one.\nDowncast this collider to a mutable triangle mesh, if it …\nTakes a strongly typed reference of this collider.\nTakes a strongly typed reference of the unscaled version …\nInitialize a new collider with a ball shape defined by its …\nControls the bias toward clipping along revolution planes.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nInitialize a new collider with a capsule shape.\nInitialize a new collider with a capsule shape aligned …\nInitialize a new collider with a capsule shape aligned …\nComputes the time of impact between this transform shape …\nComputes the time of impact, and normal between this …\nComputes the time of impact between this transform shape …\nComputes the time of impact, and normal between this …\nCreates a <code>Friction</code> component from the given friction …\nCreates a <code>Restitution</code> component from the given restitution …\nThe friction coefficient of a collider.\nThe restitution coefficient of a collider.\nThe rule applied to combine the friction coefficients of …\nThe rule applied to combine the friction coefficients of …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nInitialize a new collider with a compound shape.\nIf <code>true</code>, witness points and normals will be calculated …\nMaximum concavity.\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nReturns <code>true</code> if the collisions contains the specified …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nTests if the given point is inside of <code>self</code>.\nTests if the given point is inside of <code>self</code> transformed by <code>m</code>…\nInitializes a collider with a compound shape obtained from …\nInitializes a collider with a compound shape obtained from …\nInitializes a new collider with a 2D convex polygon or 3D …\nControls whether the convex-hull should be approximated …\nControls the precision of the convex-hull generation …\nCreates a new collider that is a convex polygon formed by …\nInitialize a new collider with a cuboid shape defined by …\nDetail about the impact points.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nComputes the minimal distance between a point and <code>self</code>.\nComputes the minimal distance between a point and <code>self</code> …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nFeature at the intersection point.\nControls the way the input mesh or polyline is being …\nGroups filter.\nGroups filter.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nConvert from internal <code>rapier::query::ShapeCastHit</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nWe restrict the scaling increment to 1.0e-4, to avoid …\nInitialize a new collider build with a half-space shape …\nInitializes a collider with a heightfield shape defined by …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nTests whether a ray intersects this transformed shape.\nTests whether a ray intersects this transformed shape.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nReturns <code>true</code> if there is no colliding entities.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether or not the point to project was inside of the …\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nAn iterator visiting all colliding entities in arbitrary …\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nReturns the number of colliding entities.\nControls the max number of convex-hull generated by the …\nThe maximum time-of-impacts that can be computed.\nGroups memberships.\nGroups memberships.\nCreates a <code>Friction</code> component from the given friction …\nCreates a <code>Restitution</code> component from the given restitution …\nCreates a new collision-groups with the given membership …\nCreates a new collision-groups with the given membership …\nThe normal at the intersection point.\nThe local-space outward normal on the first shape at the …\nThe local-space outward normal on the second shape at the …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nControls the granularity of the search for the best …\nThe projection result.\nThe intersection point between the ray and the object.\nInitializes a collider with a polyline shape defined by …\nProjects a point on <code>self</code>.\nProjects a point on the boundary of <code>self</code> and returns the …\nProjects a point on <code>self</code>, unless the projection lies …\nProjects a point on <code>self</code> transformed by <code>m</code>.\nProjects a point on the boundary of <code>self</code> transformed by <code>m</code> …\nProjects a point on <code>self</code> transformed by <code>m</code>, unless the …\nThis replaces the unscaled version of this collider by its …\nThe raw shape from Rapier.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nResolution used during the voxelization stage.\nInitializes a collider with a compound shape obtained from …\nInitializes a collider with a compound shape obtained from …\nInitializes a new collider with a round 2D convex polygon …\nCreates a new collider that is a round convex polygon …\nInitialize a new collider with a round cuboid shape …\nInitializes a collider with a triangle shape with round …\nThe scaling factor that was applied to this collider.\nInitializes a collider with a segment shape.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSet the scaling factor of this shape.\nWrappers around Rapier shapes to access their properties.\nThe way the time-of-impact computation algorithm …\nIf <code>false</code>, the time-of-impact algorithm will automatically …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe shapes will be considered as impacting as soon as …\nThe time of impact of the ray with the object.  The exact …\nThe time at which the objects touch.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nInitializes a collider with a triangle shape.\nInitializes a collider with a triangle mesh shape defined …\nInitializes a collider with a triangle mesh shape defined …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nCrates a <code>ShapeCastOptions</code> with the default values except …\nThe local-space closest point on the first shape at the …\nThe local-space closest point on the second shape at the …\nDetects holes inside of a solid contour.\nAttempts to properly handle self-intersections.\nA ball shape.\nRead-only access to the properties of a ball.\nRead-write access to the properties of a ball.\nA capsule shape.\nRead-only access to the properties of a capsule.\nRead-write access to the properties of a capsule.\nRead-only access to the properties of a collider.\nA Compound shape.\nRead-only access to the properties of a compound shape.\nA convex polygon.\nRead-only access to the properties of a convex polygon.\nRead-write access to the properties of a convex polygon.\nA cuboid shape.\nRead-only access to the properties of a cuboid.\nRead-write access to the properties of a cuboid.\nA shape representing a full half-space.\nRead-only access to the properties of a half-space.\nRead-write access to the properties of a half-space.\nA heightfield shape.\nIndicates if a cell of a heightfield is removed or not. …\nRead-only access to the properties of a heightfield.\nRead-write access to the properties of a heightfield.\nA set of segments.\nRead-only access to the properties of a polyline.\nRead-write access to the properties of a polyline.\nA convex polygon with rounded corners.\nRead-only access to the properties of a round shape.\nRead-write access to the properties of a round shape.\nA cuboid with rounded corners.\nRead-only access to the properties of a round shape.\nRead-write access to the properties of a round shape.\nA triangle with rounded corners.\nRead-only access to the properties of a round shape.\nRead-write access to the properties of a round shape.\nA segment shape.\nRead-only access to the properties of a segment.\nRead-write access to the properties of a segment.\nA triangle mesh shape.\nRead-only access to the properties of a triangle mesh.\nRead-write access to the properties of a triangle mesh.\nA triangle shape.\nRead-only access to the properties of a triangle.\nRead-write access to the properties of a triangle.\nThe segment first point.\nThe triangle first point.\nThe segment first point.\nThe triangle first point.\nThe area of this triangle.\nThe area of this triangle.\nConvert to <code>parry::shape::TypedShape</code>.\nThe segment second point.\nThe triangle second point.\nThe segment second point.\nThe triangle second point.\nThe radius of the round border of this shape.\nThe radius of the round border of this shape.\nThe radius of the round border of this shape.\nThe radius of the round border of this shape.\nThe radius of the round border of this shape.\nThe radius of the round border of this shape.\nThe triangle third point.\nThe triangle third point.\nThe transformation such that <code>t * Y</code> is collinear with <code>b - a</code> …\nThe transformation such that <code>t * Y</code> is collinear with <code>b - a</code> …\nIndex of the cell a point is on after vertical projection.\nIndex of the cell a point is on after vertical projection.\nThe width of a single cell of this heightfield.\nThe width of a single cell of this heightfield.\nThe center of this capsule.\nThe geometric center of this triangle.\nThe center of this capsule.\nThe geometric center of this triangle.\nThe circumcircle of this triangle.\nThe circumcircle of this triangle.\nThe unit direction of this segment.\nThe unit direction of this segment.\nA flat view of the index buffer of this mesh.\nA flat view of the index buffer of this mesh.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe half-extents of the cuboid.\nThe half-extents of the cuboid.\nThe half-height of this capsule.\nThe half-height of this capsule.\nThe height of this capsule.\nThe height of this capsule.\nThe height at each cell endpoint.\nThe height at each cell endpoint.\nThe index buffer, describing all the segments of this …\nThe index buffer of this mesh.\nThe index buffer, describing all the segments of this …\nThe index buffer of this mesh.\nThe underlying not-rounded shape.\nThe underlying not-rounded shape.\nThe underlying not-rounded shape.\nThe underlying not-rounded shape.\nThe underlying not-rounded shape.\nThe underlying not-rounded shape.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs the i-th segment of this heightfield removed?\nIs the i-th segment of this heightfield removed?\nThe length of this segment.\nThe length of this segment.\nThe halfspace planar boundary’s outward normal.\nIn 2D, the normalized counterclockwise normal of this …\nThe halfspace planar boundary’s outward normal.\nIn 2D, the normalized counterclockwise normal of this …\nThe normals of the edges of this convex polygon.\nThe normals of the edges of this convex polygon.\nThe number of cells of this heightfield.\nThe number of cells of this heightfield.\nThe number of segments forming this polyline.\nThe number of segments forming this polyline.\nThe number of triangles forming this mesh.\nThe number of triangles forming this mesh.\nThe perimeter of this triangle.\nThe perimeter of this triangle.\nThe vertices of this convex polygon.\nThe vertices of this convex polygon.\nThe radius of the ball.\nThe radius of the capsule.\nThe radius of the ball.\nThe radius of the capsule.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nThe raw shape from Rapier.\nCompute the scaled version of <code>self.raw</code>.\nReverse the orientation of this polyline by swapping the …\nThe rotation <code>r</code> such that <code>r * Y</code> is collinear with <code>b - a</code>.\nThe rotation <code>r</code> such that <code>r * Y</code> is collinear with <code>b - a</code>.\nThe scale factor applied to this heightfield.\nThe scale factor applied to this heightfield.\nThe direction of this segment scaled by its length.\nThe direction of this segment scaled by its length.\nIn 2D, the not-normalized counterclockwise normal of this …\nIn 2D, the not-normalized counterclockwise normal of this …\nThe axis and endpoint of the capsule.\nGet the <code>i</code>-th segment of this mesh.\nThe axis and endpoint of the capsule.\nGet the <code>i</code>-th segment of this mesh.\nThe i-th segment of the heightfield if it has not been …\nThe i-th segment of the heightfield if it has not been …\nIterator through all the segments of this heightfield.\nAn iterator through all the segments of this mesh.\nIterator through all the segments of this heightfield.\nAn iterator through all the segments of this mesh.\nSet the first point of the segment.\nSet the first point of the segment.\nSet the second point of the segment.\nSet the second point of the segment.\nSet the radius of the round border of this shape.\nSet the radius of the round border of this shape.\nSet the radius of the round border of this shape.\nSet the third point of the segment.\nSets the flags of this triangle mesh, controlling its …\nSet the half-extents of the cuboid.\nSet the normal of the half-space.\nSet the radius of the ball.\nSet the radius of this capsule.\nSet the segment of this capsule.\nSets whether or not the given cell of the heightfield is …\nThe shapes of this compound shape.\nConvert to <code>parry::shape::SharedShape</code>.\nThe transform <code>t</code> such that <code>t * Y</code> is collinear with <code>b - a</code> …\nThe transform <code>t</code> such that <code>t * Y</code> is collinear with <code>b - a</code> …\nGet the <code>i</code>-th triangle of this mesh.\nGet the <code>i</code>-th triangle of this mesh.\nAn iterator through all the triangles of this mesh.\nAn iterator through all the triangles of this mesh.\nThe width of a single cell of this heightfield, without …\nThe width of a single cell of this heightfield, without …\nThe vertex buffer, containing all the vertices of this …\nReference to an array containing the three vertices of …\nThe vertex buffer of this mesh.\nThe vertex buffer, containing all the vertices of this …\nReference to an array containing the three vertices of …\nThe vertex buffer of this mesh.\nThe real type (f32 or f64).\nThe rotation type (in 2D this is an angle in radians).\nThe vector type.\nUser-defined functions called by the physics engines …\nEvents occurring when two colliders start or stop colliding\nEvent occurring when the sum of the magnitudes of the …\nRead-write access to the properties of a contact …\nExclude from the query any collider attached to a dynamic …\nExclude from the query any collider attached to a fixed …\nExclude from the query any collider attached to a …\nExclude from the query any collider that is a sensor.\nExclude from the query any collider that is not a sensor.\nExcludes all colliders not attached to a dynamic …\nExclude all colliders attached to a non-fixed rigid-body …\nExcludes all colliders not attached to a kinematic …\nRead-only access to the properties of a collision pair …\nA filter that describes what collider should be included …\nFlags for excluding whole sets of colliders from a scene …\nEvent occurring when two colliders start colliding\nEvent occurring when two colliders stop colliding\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe entity of the first collider involved in the potential …\nThe entity of the first collider involved in the potential …\nThe first collider involved in the contact.\nThe entity of the second collider involved in the …\nThe entity of the second collider involved in the …\nThe second collider involved in the contact.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nSet the collider that will be excluded from the scene …\nIf set, the collider attached to that entity will be …\nExclude from the query any collider attached to a dynamic …\nExclude from the query any collider attached to a fixed …\nExclude from the query any collider attached to a …\nSet the rigid-body that will be excluded from the scene …\nIf set, any collider attached to the rigid-body attached …\nExclude from the query any collider that is a sensor.\nExclude from the query any collider that is not a sensor.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nApplies the contact pair filter.\nApplies the contact pair filter.\nApplies the intersection pair filter.\nApplies the intersection pair filter.\nFlags indicating what particular type of colliders should …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nOnly colliders with collision groups compatible with this …\nIf set, only colliders with collision groups compatible …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe world-space (unit) direction of the force with …\nThe magnitude of the largest force at a contact point of …\nModifies the set of contacts seen by the constraints …\nModifies the set of contacts seen by the constraints …\nA query filter that doesn’t exclude any collider.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nExcludes all colliders not attached to a dynamic …\nExclude all colliders attached to a non-fixed rigid-body …\nExcludes all colliders not attached to a kinematic …\nSet the predicate to apply a custom collider filtering …\nIf set, any collider for which this closure returns false.\nThe raw context from Rapier.\nThe raw context from Rapier.\nThe intersection of a source flags value with the …\nThe entity of the first rigid-body (if <code>self.collider1()</code> is …\nThe entity of the first rigid-body (if <code>self.collider1()</code> is …\nThe entity of the second rigid-body (if <code>self.collider1()</code> …\nThe entity of the second rigid-body (if <code>self.collider1()</code> …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nTests if the given collider should be taken into account …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe sum of all the forces between the two colliders.\nThe sum of the magnitudes of each force between the two …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nRead-only access to the properties of a contact manifold.\nRead-only access to the properties of a contact pair.\nRead-only access to the properties of a single contact.\nMarker component for to access the default <code>RapierContext</code>.\nUse a fixed timestep: the physics simulation will be …\n<code>RapierPhysicsPlugin</code> will spawn an entity containing a …\nUse a fixed timestep equal to <code>IntegrationParameters::dt</code>, …\n<code>RapierPhysicsPlugin</code> will not spawn any entity containing …\nNo specific user-data is associated to the hooks.\n<code>SystemSet</code> for each phase of the plugin.\nA component for specifying configuration information for …\nThe Rapier context, containing all the state of the …\nUtility <code>SystemParam</code> to easily access any <code>RapierContext</code> …\nThis is a component applied to any entity containing a …\nSpecifies a default configuration for the default …\nA plugin responsible for setting up a full Rapier physics …\nA set for rapier’s copy of Bevy’s transform …\nUtility <code>SystemParam</code> to easily access the single default …\nDifference between simulation and rendering time\nRead-only access to the properties of a single solver …\nThe systems responsible for advancing the physics …\nThis set runs the systems responsible for synchronizing …\nThe different ways of adjusting the timestep length each …\nUse a variable timestep: the physics simulation will be …\nUtility <code>SystemParam</code> to easily access the single default …\nUtility <code>SystemParam</code> to easily access any <code>RapierContext</code> …\nThe systems responsible for updating …\nThe set of rigid-bodies part of the simulation.\nThe broad-phase, which detects potential contact pairs.\nFind the closest intersection between a ray and a set of …\nFind the closest intersection between a ray and a set of …\nCasts a shape at a constant linear velocity and retrieve …\nThe solver, which handles Continuous Collision Detection …\nThe first collider involved in this contact pair.\nThe second collider involved in this contact pair.\nRetrieve the Bevy entity the given Rapier collider …\nIf the collider attached to <code>entity</code> is attached to a …\nThe set of colliders part of the simulation.\nFinds all entities of all the colliders with an Aabb …\nThe contact pair involving two specific colliders.\nAll the contact pairs detected during the last timestep.\nAll the contact pairs involving the non-sensor collider …\nRetrieves the rapier context responsible for the entity …\nRetrieves the rapier context responsible for the entity …\nUse this method if you only have one <code>RapierContext</code>.\nUse this method if you only have one <code>RapierContext</code>.\nUse this method if you only have one <code>RapierContext</code>.\nDifference between simulation and rendering time\nThe distance between the two contact points.\nThe distance between the two original contacts points …\nThe map from entities to rigid-body handles.\nThe map from entities to collider handles.\nThe map from entities to impulse joint handles.\nThe map from entities to multibody joint handles.\nThe feature ID of the first shape involved in the contact.\nThe feature ID of the second shape involved in the contact.\nReturns the contact with the smallest distance (i.e. the …\nFinds the contact with the smallest signed distance.\nSpecifies if backend sync should always accept transform …\nThe effective friction coefficient at this contact point.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nProvided for use when staging systems outside of this …\nSpecifying the gravity of the physics simulation.\nIs there any active contact in this contact pair?\nThe impulse, along the contact normal, applied by this …\nThe set of impulse joints part of the simulation.\nComputes the angle between the two bodies attached by the …\nAdds the physics systems to the <code>FixedUpdate</code> schedule …\nAdds the physics systems to the provided schedule rather …\nThe integration parameters, controlling various low-level …\nThe intersection pair involving two specific colliders (at …\nAll the intersection pairs detected during the last …\nAll the intersection pairs involving the collider attached …\nGets the handle of up to one collider intersecting the …\nFind all the colliders containing the given point.\nFind the all intersections between a ray and a set of …\nRetrieve all the colliders intersecting the given shape.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether or not this contact existed during the last …\nThe island manager, which detects what object is sleeping …\nThe contact normal of all the contacts of this manifold, …\nThe contact normal of all the contacts of this manifold, …\nThe contact point in the local-space of the first shape.\nThe contact point in the local-space of the second shape.\nGets the i-th contact manifold.\nIterate through all the contact manifolds of this contact …\nThe number of contact manifolds detected for this contact …\nAttempts to move shape, optionally sliding or climbing …\nThe set of multibody joints part of the simulation.\nThe narrow-phase, which computes contact points, tests …\nConfigures rapier with the specified length unit.\nThe world-space contact normal shared by all the contact …\nThe number of points on this contact manifold.\nThe contacts that will be seen by the constraints solver …\nSpecifies if the physics simulation is active and update …\nThe physics pipeline, which advance the simulation step by …\nSpecifies how many pixels on the 2D canvas equal one meter …\nRetrieves the i-th point of this contact manifold.\nThe world-space contact point.\nThe contacts points.\nFind the projection of a point on the closest collider.\nFind the projection of a point on the closest collider.\nThis method makes sure that the rigid-body positions have …\nThe query pipeline, which performs scene queries …\nSpecifies if the query pipeline is active and update the …\nQuery used to retrieve a <code>RapierContext</code>. It’s helpful to …\nQuery used to retrieve a <code>RapierContext</code>. It’s helpful to …\nThe raw contact manifold from Rapier.\nThe raw contact from Rapier.\nThe raw solver contact from Rapier.\nThe raw contact pair from Rapier.\nThe relative dominance of the bodies involved in this …\nThe effective restitution coefficient at this contact …\nThe first rigid-body involved in this contact manifold.\nThe second rigid-body involved in this contact manifold.\nIf entity is a rigid-body, this returns the collider <code>Entity</code>…\nRetrieve the Bevy entity the given Rapier rigid-body …\nSpecifies the number of subdivisions along each axes a …\nGenerates bevy events for any physics interactions that …\nUse this method if you only have one <code>RapierContext</code>.\nGets the i-th solver contact.\nThe contacts that will be seen by the constraints solver …\nFlags used to control some aspects of the constraints …\nAdvance the simulation, based on the given timestep mode.\nThe first subshape involved in this contact manifold.\nThe second subshape involved in this contact manifold.\nSystems responsible for interfacing our Bevy components …\nThe friction impulse along the vector orthonormal to the …\nThe desired tangent relative velocity at the contact point.\nRetrieves the rapier context responsible for the entity …\nRetrieves the rapier context responsible for the entity …\nRetrieves the rapier context component on this <code>Entity</code>.\nUpdates the state of the query pipeline, based on the …\nA user-defined piece of data.\nSpecifies a default world initialization strategy.\nSpecifies whether the plugin should setup each of its …\nSpecifies a scale ratio between the physics world and the …\nCalls the closure <code>f</code> once after converting the given …\nWithout borrowing the <code>RapierContext</code>, calls the closure <code>f</code> …\nSee <code>IntegrationParameters::length_unit</code>\nThe physics simulation will be advanced by this total …\nThe physics simulation will be advanced by this total …\nMaximum amount of time the physics simulation may be …\nThis number of substeps of length <code>dt / substeps</code> will be …\nThe number of substeps that will be performed at each tick.\nThe number of substeps that will be performed whenever the …\nMultiplier controlling if the physics simulation should …\nMultiplier controlling if the physics simulation should …\nComponents related to colliders.\nComponents related to rigid-bodies.\nComponents that will be updated after a physics step.\nSystem responsible for applying changes the user made to a …\nThis applies the initial impulse given to a rigid-body …\nSystem responsible for applying changes the user made to a …\nSystem responsible for applying changes the user made to a …\nSystem responsible for applying <code>GlobalTransform</code> scale …\nSystem responsible for creating new Rapier colliders from …\nSystem responsible for creating new Rapier joints from the …\nSystem responsible for creating new Rapier rigid-bodies …\nIf an entity is turned into the child of something with a …\nreacts to modifications to <code>RapierContextEntityLink</code> to move …\nSystem responsible for advancing the physics simulation, …\nSystem responsible for removing from Rapier the …\nSystem responsible for applying the character controller …\nAdds entity to <code>CollidingEntities</code> on starting collision and …\nSystem responsible for writing updated mass properties …\nSystem responsible for writing the result of the last …\nAlways render the debug gizmos for this collider, …\nIf this flag is set, the Aabbs of colliders will be …\nIf this flag is set, the collider shapes will be rendered.\nIf this flag is set, the geometric contacts will be …\nOverrides the global <code>DebugRenderContext</code> for a single …\nThe color of a collider when using the debug-renderer.\nContext to control some aspect of the debug-renderer after …\nFlags indicating what part of the physics engine should be …\nStyle used for computing colors when rendering the scene.\nIf this flag is set, the impulse joints will be rendered.\nIf this flag is set, all the joints will be rendered.\nIf this flag is set, the multibody joints will be rendered.\nNever render the debug gizmos for this collider, …\nIf this flag is set, the local coordinate axes of …\nPlugin rensponsible for rendering (using lines) what …\nIf this flag is set, the solver contacts will be rendered.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe number of subdivision used to approimate the curved …\nThe color of the colliders Aabbs.\nThe color of colliders attached to dynamic rigid-bodies.\nThe color of colliders attached to fixed rigid-bodies.\nThe color of colliders attached to kinematic rigid-bodies.\nThe color of colliders not attached to any rigid-body.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe collor for the segments joining the two contact points.\nThe color of the contact normals.\nThe length of the contact normals.\nWhether all set bits in a source flags value are also set …\nWhether to show debug gizmos for all colliders.\nWhether to show debug gizmos for all colliders.\nThe intersection of a source flags value with the …\nInitialize the render plugin such that it is initially …\nIf a rigid-body is disabled, its attached entities will …\nGet a flags value with all bits unset.\nIs the debug-rendering enabled?\nIs the debug-rendering currently enabled?\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nThe color of the line between a rigid-body’s …\nThe color of the line between the two anchors of an …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nFlags to select what part of physics scene is rendered (by …\nThe color of the line between a rigid-body’s …\nThe color of the line between the two anchors of a …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nPipeline responsible for rendering. Access <code>pipeline.mode</code> …\nThe intersection of a source flags value with the …\nThe length of the local coordinate axes rendered for a …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nIf a rigid-body is sleeping, its attached entities will …\nControl some aspects of the render coloring.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe number of subdivision used to approximate the curved …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nConverts a Rapier isometry to a Bevy transform.")