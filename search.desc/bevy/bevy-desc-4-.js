searchState.loadedDescShard("bevy", 4, "An unbounded plane in 3D space. It forms a separating …\nA torus with non-geometric properties like a minor or …\nAn invalid winding order indicating that it could not be …\nAn infinite line going through the origin along a …\nAn infinite line going through the origin along a …\nA trait for getting measurements of 2D shapes\nA trait for getting measurements of 3D shapes\nAn unbounded plane in 2D space. It forms a separating …\nA bounded plane in 3D space. It forms a surface starting …\nA polygon with N vertices.\nA series of connected line segments in 2D space.\nA series of connected line segments in 3D space.\nA marker trait for 2D primitives\nA marker trait for 3D primitives\nA rectangle primitive, which is like a square, except that …\nA polygon centered on the origin where all vertices lie on …\nA rhombus primitive, also known as a diamond shape. A four …\nA torus that has a ring. The major radius is greater than …\nA segment of a line going through the origin along a …\nA segment of a line going through the origin along a …\nA sphere primitive, representing the set of all points …\nA self-intersecting torus. The major radius is less than …\nA tetrahedron primitive.\nA torus primitive, often representing a ring or donut shape\nThe type of torus determined by the minor and major radii\nA triangle in 2D space\nA 3D triangle primitive.\nThe winding order for a set of points\nThe arc defining the sector\nThe arc defining the segment\nGet the area of the shape\nGet the surface area of the shape\nThe base shape of the extrusion\nThe circumcircle on which all vertices lie\nThe direction of the line. The line extends infinitely in …\nThe direction of the line segment\nThe direction of the line\nThe direction of the line\nHalf the angle defining the arc\nHalf of the depth of the extrusion\nSize of the horizontal and vertical diagonals of the …\nThe half height of the cylinder\nHalf the length of the line segment. The segment extends …\nHalf the height of the capsule, excluding the hemicircles\nHalf the length of the line segment. The segment extends …\nHalf the height of the capsule, excluding the hemispheres\nHalf of the width and height of the ellipse.\nHalf of the width and height of the rectangle\nHalf of the width and height of the plane\nHalf of the width, height and depth of the cuboid\nThe height of the cone\nThe height of the frustum\nThe inner circle of the annulus\nThe distance from the center of the torus to the center of …\nThe radius of the tube of the torus\nThe normal of the plane. The plane will be placed …\nThe normal of the plane. The plane will be placed …\nThe normal of the plane. The plane will be placed …\nThe outer circle of the annulus\nGet the perimeter of the shape\nThe radius of the circle\nThe radius of the circle\nThe radius of the capsule\nThe radius of the sphere\nThe radius of the cylinder\nThe radius of the capsule\nThe radius of the base\nThe radius of the base of the frustum\nThe radius of the top of the frustum\nThe number of sides\nThe vertices of the polyline\nThe vertices of the polyline\nThe vertices of the triangle\nThe vertices of the <code>Polygon</code>\nThe vertices of the <code>BoxedPolygon</code>\nThe vertices of the polyline\nThe vertices of the polyline\nThe vertices of the triangle.\nThe vertices of the tetrahedron.\nGet the volume of the shape\nA wrapper struct that allows boundary sampling from a …\nErgonomics trait for a type with a <code>Standard</code> distribution, …\nA wrapper struct that allows interior sampling from a …\nThe type of vector returned by the sample methods, <code>Vec2</code> …\nExposes methods to uniformly sample a variety of primitive …\nA distribution that caches data to allow fast sampling …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFunctionality related to random sampling from triangle …\nUniformly sample a point from the surface of this shape, …\nUniformly sample a point from inside the area/volume of …\nThe <code>ShapeSample</code> trait, allowing random sampling from …\nThis module holds local implementations of the <code>Distribution</code>…\nConstruct a new <code>UniformMeshSampler</code> from a list of triangles…\nA distribution that caches data to allow fast sampling …\nA wrapper struct that allows boundary sampling from a …\nA wrapper struct that allows interior sampling from a …\nThe type of vector returned by the sample methods, <code>Vec2</code> …\nExposes methods to uniformly sample a variety of primitive …\nUniformly sample a point from the surface of this shape, …\nUniformly sample a point from inside the area/volume of …\nErgonomics trait for a type with a <code>Standard</code> distribution, …\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nThe mesh can participate in automatic batching.\nAn ambient light, which lights the entire scene equally.\nHolds <code>AssetId</code>s of the texture or textures that this light …\nA more general form of the <code>FogFalloff::Exponential</code> mode. …\nAn atomic version of <code>MaterialBindGroupId</code> that can be read …\nControls how cascaded shadow mapping works. Prefer using …\nBuilder for <code>CascadeShadowConfig</code>.\nSystem order ambiguities between systems in this set are …\nConfiguration of the clustering strategy for clustered …\nConfigure the far z-plane mode used for the furthest depth …\nConfigure the depth-slicing strategy for clustered forward …\nConstant max z-depth\nInformation needed when using CPU mesh instance data …\nThe version of <code>RenderMeshInstanceGpuQueue</code> that omits the …\nDefault render method used for opaque materials.\nA Directional light.\nA component bundle for <code>DirectionalLight</code> entities.\nControls the resolution of <code>DirectionalLight</code> shadow maps.\nConfigures the “classic” computer graphics distance fog…\nThe uniform struct extracted from <code>EnvironmentMapLight</code>. …\nA GPU buffer that stores the environment map settings for …\nAn exponential fog falloff with a given <code>density</code>.\nA squared exponential fog falloff with a given <code>density</code>.\nA material that extends a base <code>Material</code> with additional …\nA <code>SystemSet</code> that encompasses both …\nHandle for the fog WGSL Shader internal asset\nFixed number of <code>Z</code> slices, <code>X</code> and <code>Y</code> calculated to give …\nAllows switching between different fog falloff modes, and …\nMetadata for fog\nA plugin that consolidates fog extraction, preparation and …\nA convenient <code>Bundle</code> that contains all components necessary …\nWhether GPU culling is in use.\nApproximates a fixed Gaussian blur, good when TAA isn’t …\nInformation needed when using GPU mesh instance data …\nThe version of <code>RenderMeshInstanceGpuQueue</code> that contains the\nThe GPU-side representation of the fog configuration that…\nA plugin that builds mesh uniforms on GPU.\nThe render node for the mesh uniform building pass.\nThe mesh had morph targets last frame and so they should …\nThe mesh had a skin last frame and so that skin should be …\nThe mesh had a transform last frame and so is eligible for …\nHardware 2x2.\nThe ID of the lightmap shader.\nBitmask for the 16-bit index into the LOD array.\nThe first bit of the LOD index.\nA marker component for a light probe, which is a cuboid …\nA trait implemented by all components that represent light …\nAdds support for light probes: cuboid bounding regions …\nA GPU buffer that stores information about all light …\nA per-view shader uniform that specifies all the light …\nComponent automatically attached to a light entity to …\nA component that applies baked indirect diffuse global …\nA plugin that provides an implementation of lightmaps.\nA linear fog falloff that grows in intensity between <code>start</code> …\nMaximum number of joints supported for skinned meshes.\nThe maximum number of each type of light probe that each …\nHow many textures are allowed in the view bind group …\nThe handle to the <code>mesh_preprocess.wgsl</code> compute shader.\nMaterials are used alongside <code>MaterialPlugin</code>, <code>Mesh3d</code>, and …\nA subset of the <code>Material</code> trait for defining extensions to …\nA component bundle for entities with a <code>Mesh3d</code> and a …\nRender pipeline data for a given <code>Material</code>.\nA key uniquely identifying a specialized <code>MaterialPipeline</code>.\nAdds the necessary ECS resources and render logic to …\nCommon <code>Material</code> properties, calculated for a specific …\nCalculate the required maximum z-depth based on currently …\nBind groups for meshes currently loaded.\nInformation about each mesh instance needed to cull it on …\nA GPU buffer that holds the information needed to cull …\nVarious flags and tightly-packed values on a mesh.\nInformation that has to be transferred from CPU to GPU in …\nAll possible <code>BindGroupLayout</code>s in bevy’s default mesh …\nA material used for rendering a <code>Mesh3d</code>.\nAll data needed to construct a pipeline for rendering 3D …\nMSAA uses the highest 3 bits for the MSAA log2(sample …\nA key that uniquely identifies a <code>MeshPipelineViewLayout</code>.\nStores the view layouts for every combination of pipeline …\nProvides support for rendering 3D meshes.\nDisable cluster calculations for this view\nThe default value.\nAdd this component to make a <code>Mesh3d</code> not cast shadows.\nAdd this component to make a <code>Mesh3d</code> not receive shadows.\nA simple linear interpolation, using a single texture …\nRender method used for opaque materials.\nThe parallax mapping method to use to compute depth based …\nA component bundle for PBR entities with a <code>Mesh3d</code> and a …\nSets up the entire PBR infrastructure of bevy.\n<code>CameraProjection</code> specific PBR functionality.\nA light that emits light in all directions from a central …\nA component bundle for <code>PointLight</code> entities.\nData prepared for a <code>Material</code> instance.\nSets up everything required to use the prepass pipeline.\nSets up the prepasses for a <code>Material</code>.\nThe compute shader bind group for the mesh uniform …\nThe pipeline for the GPU mesh preprocessing shader.\nSpecifies variants of the mesh preprocessing shader.\nThe compute shader pipelines for the mesh uniform building …\nDiscovers the best depth value based on binary search.\nStores data for all lightmaps in the render world.\nStores all extracted instances of a <code>Material</code> in the render …\nCPU data that the render world keeps for each entity, when …\nVarious useful flags for [<code>RenderMeshInstance</code>]s.\nCPU data that the render world needs to keep for each …\nInformation that is gathered during the parallel portion …\nThe per-thread queues used during …\nThe per-thread queues containing mesh instances, populated …\nCPU data that the render world needs to keep about each …\nInformation that the render world keeps about each entity …\nInformation that the render world keeps about each entity …\nInformation that the render world keeps about each entity …\nData that <code>crate::material::queue_material_meshes</code> and …\nA component, part of the render world, that stores the …\nThe mesh casts shadows.\nComponent to apply screen space ambient occlusion to a 3d …\nBundle to apply screen space ambient occlusion.\nPlugin for screen space ambient occlusion.\nAdd this component to a camera to enable <em>screen-space </em>…\nA GPU buffer that stores the screen space reflection …\nA convenient bundle to add screen space reflections to a …\nThe node in the render graph that traces screen space …\nInformation relating to the render pipeline for the screen …\nIdentifies which screen space reflections render pipeline …\nIdentifies a specific configuration of the SSR pipeline …\nEnables screen-space reflections for a camera.\nA version of <code>ScreenSpaceReflections</code> for upload to the GPU.\nSets the bind group for a given <code>Material</code> at the configured …\nData used to bin each object in the shadow map phase.\nAdd this component to a <code>Camera3d</code> to control how to …\nSystem sets used to run light-related systems.\nOne single cluster. Optimal for low-light complexity …\nMaps each skinned mesh to the applicable offset within the …\nThe GPU buffers containing joint matrices for all skinned …\nStops the <code>GpuPreprocessNode</code> attempting to generate the …\nA light that emits light in a given direction from a …\nA component bundle for spot light entities\nA material with “standard” properties used in PBR …\nBitflags info about the material a shader is currently …\nThe pipeline key for <code>StandardMaterial</code>, packed into 64 bits.\nThe GPU representation of the uniform data of a …\nA randomized filter that varies over time, good when TAA …\nAdd this component to make a <code>Mesh3d</code> using a PBR material …\nSystem order ambiguities between systems in this set are …\nAn enum to define which UV attribute to use for a texture.\nA component that stores the offset within the …\nInserted on each <code>Entity</code> with an <code>ExtractedView</code> to keep …\nIf the light probe can be attached to the view itself (as …\nA component attached to each camera in the render world …\nA component that stores the offset within the …\nCollection of mesh entities visible for 3D lighting.\nWhen placed on a <code>bevy_core_pipeline::core_3d::Camera3d</code>, …\nA plugin that implements volumetric fog.\nAdd this component to a <code>DirectionalLight</code> with a shadow map …\nA convenient alias for …\nExplicit <code>X</code>, <code>Y</code> and <code>Z</code> counts (may yield non-square <code>X/Y</code> …\nThe 3D center of the AABB in model space, padded with an …\nThe 3D extents of the AABB in model space, divided by two, …\nThe absorption coefficient, which measures what fraction …\nControls if <code>DeferredPbrLightingPlugin</code> is added.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nWhen the alpha mode mask flag is set, any base color alpha …\nThe <code>AlphaMode</code> of this material.\nHow to apply the alpha channel of the <code>base_color_texture</code>.\nColor of the ambient light.\nColor of the ambient light.\nThe brightness of the ambient light.\nThe brightness of the ambient light.\nThe direction of increased roughness, in radians relative …\nIncreases the roughness along a specific direction, so …\nThe object.\nThe resulting (non-absorbed) color after white light …\nColor white light takes after traveling through the …\nHow far, on average, light travels through the volume …\nHow far light travels through the volume underneath the …\nThe color of the surface of the material before lighting.\nDoubles as diffuse albedo for non-metallic, specular for …\nThe UV channel to use for the …\nThe texture component of the material’s color before …\nThe bind group layout for the compute shader.\nWhether binding arrays (a.k.a. bindless textures) are …\nNumber of steps in a bisection (binary search) to perform …\nNumber of steps in a bisection (binary search) to perform …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe (positive) distance to the far boundary of each …\nA direct scale factor multiplied with <code>color</code> before being …\nReturns the cascade config as specified by this builder.\nAn extra thin translucent layer on top of the main PBR …\nThe roughness of the clearcoat material. This is specified …\nCreates the <code>RenderMeshInstanceGpu</code>s and <code>MeshInputUniform</code>s …\nThe color of the fog effect.\nThe color of the fog effect.\nThe color of this light source.\nThe color of the light.\nThe color of the light.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nA constant estimated thickness of objects.\nA constant estimated thickness of objects.\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nCreates an instance of <code>RenderViewLightProbes</code> containing …\nWhether to cull the “front”, “back” or neither …\nMaps each skinned mesh to the applicable offset within …\nStores all the joint matrices for skinned meshes in the …\nThe index of the <code>MeshInputUniform</code> in the buffer.\nReturns this material’s prepass fragment shader. If …\nUsed for selecting the deferred lighting pass for deferred …\nID for specifying which deferred lighting pass should be …\nThe deferred prepass, needed for SSR.\nReturns this material’s deferred vertex shader. If …\nThe density of fog, which measures how dark the fog is.\nOptional 3D voxel density texture for the fog.\nConfigurable offset of the density texture in UVW …\nAdd a bias to the view depth of the mesh which can be used …\nAdjust rendered depth.\nThe depth map used for parallax mapping.\nThe depth prepass, needed for SSR.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe amount of light transmitted <em>diffusely</em> through the …\nAmount of diffuse light transmitted through the material\nThe pipeline used for CPU culling. This pipeline doesn’t …\nColor used to modulate the influence of directional light …\nColor used to modulate the influence of directional light …\nThe exponent applied to the directional light alignment …\nThe exponent applied to the directional light alignment …\nSupport two-sided lighting by automatically flipping the …\nThe function used to draw.\nColor the material “emits” to the camera.\nThe UV channel to use for the …\nThe weight in which the camera exposure influences the …\nThe emissive map, multiplies pixels with <code>emissive</code> to get …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nMap of view entity to the visible entities for each …\nMap of view entity to the visible entities for each …\nEnvironment maps and reflection probes.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nExtracts clusters from the main world from the render …\nExtracts meshes from the main world into the render world, …\nExtracts meshes from the main world into the render world …\nDetermines which falloff mode to use, and its parameters.\nDetermines which falloff mode to use, and its parameters.\nStrategy for how to evaluate the far <code>Z</code> plane of the …\nSets the far bound of the first cascade, relative to the …\nFar <code>Z</code> plane of the first depth slice\nThe index of this mesh’s first vertex in the vertex …\nThe index of this mesh’s first vertex in the vertex …\nVarious flags.\nThe <code>StandardMaterialFlags</code> accessible in the <code>wgsl</code> shader.\nVarious <code>MeshFlags</code>.\nNormal map textures authored for DirectX have their …\nThe color of the fog.\nWhether to enable fog for this material.\nThe actual fog volume.\nReturns this material’s fragment shader. If …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nGenerates all possible view layouts for the mesh pipeline, …\nLoads a value atomically. Uses <code>Ordering::Relaxed</code> so there …\nGet the <code>BindGroup</code> for <code>RenderMesh</code> with given <code>handle_id</code> and …\nThe global transform.\nThe pipeline used for GPU culling. This pipeline populates …\nReturns the asset ID or asset IDs of the texture or …\nIlluminance in lux (lumens per square meter), representing …\nThe lightmap texture.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility.\nAngle defining the distance from the spot light direction …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nReturns the intensity of this light probe.\nLuminous power in lumens, representing the amount of light …\nLuminous power in lumens, representing the amount of light …\nluminous intensity in lumens per steradian\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe index of refraction of the material.\nIndex of Refraction\nIrradiance volumes, also known as voxel global …\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe maximum distance to offset the ray origin randomly by, …\nThe maximum distance to offset the ray origin randomly by, …\nBuilds a unique label for each layout based on the flags\nScales the light by a fixed fraction.\nApplies a nonphysical color to the light.\nThe exposure (brightness) level of the lightmap, if …\nThe exposure (brightness) level of the lightmap, if …\nFour 16-bit unsigned normalized UV values packed into a …\nFour 16-bit unsigned normalized UV values packed into a …\nIncludes the lightmap texture and uniform.\nExponent to be applied in the linear part of the march.\nExponent to be applied in the linear part of the march.\nThe number of steps to be taken at regular intervals to …\nThe number of steps to be taken at regular intervals to …\nA slot for the material bind group ID.\nIn how many layers to split the depth maps for parallax …\nIn how many layers to split the depth maps for Steep …\nUsing <code>ParallaxMappingMethod::Relief</code>, how many additional …\nThe maximum shadow distance. Areas further from the camera …\nThe <code>AssetId</code> of the mesh.\nVarious flags.\nThe bits in the <code>MeshPipelineKey</code> for this material.\nHow “metallic” the material appears, within <code>[0.0, 1.0]</code>.\nFrom [0.0, 1.0], dielectric to pure metallic\nThe UV channel to use for the …\nMetallic and roughness maps, stored as a single texture.\nThe minimum shadow distance, which can help improve the …\nThe (positive) distance to the near boundary of the first …\nThe mesh model uniform (transform) and nothing else.\nCreates the bind group for meshes with no skins but morph …\nAlso includes the uniform and <code>MorphAttributes</code> for morph …\nCreates the bind group for meshes with no skins but morph …\nLike <code>MeshLayouts::morphed</code>, but includes a slot for the …\nCreates the bind group for meshes with skins and morph …\nAlso includes both uniforms for skinning and morph …\nCreates the bind group for meshes with skins and morph …\nLike <code>MeshLayouts::morphed_skinned</code>, but includes slots for …\nPrepare the layouts used by the default bevy <code>Mesh</code>.\nThe UV channel to use for the …\nUsed to fake the lighting of bumps and dents on a material.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe number of shadow cascades. More cascades increases …\nThe UV channel to use for the …\nSpecifies the level of exposure to ambient light.\nRender method used for opaque materials. (Where <code>alpha_mode</code> …\nAngle defining the distance from the spot light direction …\nSets the overlap proportion between cascades. The overlap …\nThe proportion of overlap each cascade has with the …\nPadding.\nPadding.\nPadding.\nPadding.\nPadding.\nPadding.\nHow deep the offset introduced by the depth map should be.\nThe depth of the <code>StandardMaterial::depth_map</code> to apply.\nWhich parallax mapping method to use.\n<code>MeshUniform</code>s are stored in arrays in buffers. If storage …\nLinear perceptual roughness, clamped to <code>[0.089, 1.0]</code> in …\nThe maximum PBR roughness level that will enable screen …\nThe maximum PBR roughness level that will enable screen …\nThe identifier of the render pipeline.\nThe pipeline ID for the compute shader.\nThe PBR prelude.\nGathers up environment map settings for each applicable …\nPrepares fog metadata and writes the fog-related uniform …\nA system that attaches the mesh uniform buffers to the …\nA system that specializes the <code>mesh_preprocess.wgsl</code> …\nSets up screen space reflection pipelines for each …\nGathers up screen space reflection settings for each …\nControls if the prepass is enabled for the Material. For …\nControls if the prepass is enabled for the <code>StandardMaterial</code>…\nReturns this material’s prepass fragment shader. If …\nReturns this material’s prepass vertex shader. If …\nMaps each skinned mesh to the applicable offset within …\nStores all the joint matrices for skinned meshes in the …\nThe index of the previous mesh input.\nThe index of this mesh’s <code>MeshInputUniform</code> in the …\nQuality of the SSAO effect.\nQuality of the SSAO effect.\nFor each view, iterates over all the meshes visible from …\nFor each shadow cascade, iterates over all the meshes “…\nSimulates a light source coming from a spherical volume …\nSimulates a light source coming from a spherical volume …\nCut-off for the light’s area-of-effect. Fragments …\nRange in meters that this light illuminates.\nWhether the material would like to read from …\nSpecular intensity for non-metals on a linear scale of …\nSpecular intensity for non-metals on a linear scale of […\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nConstructs <code>RenderMeshQueueData</code> for the given entity, if it …\nIs this material should be rendered by the deferred …\nLinear perceptual roughness, clamped to [0.089, 1.0] in …\nThe scattering coefficient, which measures the fraction of …\nMeasures the fraction of light that’s scattered <em>toward</em> …\nStores a value atomically. Uses <code>Ordering::Relaxed</code> so there …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe component that enables SSR.\nA bias used when sampling shadow maps to avoid “…\nA value that adjusts the tradeoff between self-shadowing …\nA value that adjusts the tradeoff between self-shadowing …\nThe distance from the light to near Z plane in the shadow …\nThe distance from the light to the near Z plane in the …\nA bias applied along the direction of the fragment’s …\nA bias applied along the direction of the fragment’s …\nA bias applied along the direction of the fragment’s …\nControls if shadows are enabled for the Material.\nWhether this light casts shadows.\nWhether this light casts shadows.\nWhether this light casts shadows.\nData that will be placed on the <code>RenderMeshInstanceGpu</code>.\nData shared between both the CPU mesh uniform building and …\nData shared between both the CPU mesh uniform building and …\nGeneral information about the mesh instance.\nReturns true if this entity is eligible to participate in …\nCreates the bind group for skinned meshes with no morph …\nAlso includes the uniform for skinning\nCreates the bind group for skinned meshes with no morph …\nLike <code>MeshLayouts::skinned</code>, but includes slots for the …\nCustomizes the default <code>RenderPipelineDescriptor</code> for a …\nThe amount of light transmitted <em>specularly</em> through the …\nAmount of specular light transmitted through the material\nThe number of raymarching steps to perform.\nThe number of raymarching steps to perform.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nMarker component that indicates that its entity needs to …\nMarker component that indicates that its entity needs to …\nMarker component that indicates that its entity needs to …\nWhen marching the depth buffer, we only have 2.5D …\nThickness of the volume beneath the material surface.\nThickness of the volume underneath the material surface\nWhen marching the depth buffer, we only have 2.5D …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe local transform. Set this to change the position, and …\nThe transform of the mesh.\nThe translation of the mesh.\nThe translation of the mesh instance.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nWhether to apply only the base color to this material.\nWhether we’re building <code>MeshUniform</code>s on GPU.\nControls if GPU <code>MeshUniform</code> building is enabled.\nWhether we’re building <code>MeshUniform</code>s on GPU.\nApproximate the root position using the secant method—by …\nApproximate the root position using the secant method—by …\nThe rectangle within the lightmap texture that the UVs are …\nThe transform applied to the UVs corresponding to …\nThe transform applied to the UVs corresponding to …\nReturns this material’s vertex shader. If …\nA reference to all the mesh pipeline view layouts.\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nView visibility.\nUser indication of whether an entity is visible\nUser indication of whether an entity is visible\nEnables or disables the light\nEnables or disables the light\nEnables or disables the light\nVisibility.\nThe current transform.\nAffine 4x3 matrix transposed to 3x4.\nWrites the information needed to do GPU mesh culling to …\nSpecify if clusters should automatically resize in <code>X/Y</code> if …\nSpecify if clusters should automatically resize in <code>X/Y</code> if …\nMultiplier applied to the world distance (within the …\nMultiplier applied to the world distance (within the …\nDistance from the camera where fog is completely opaque, …\nControls how much light is removed due to atmospheric …\nControls how much light is added due to light scattering …\nDistance from the camera where fog is completely …\nHow many additional steps to use at most to find the depth …\nSamples per slice side is also tweakable, but recommended …\nHigher slice count means less noise, but worse performance.\nComponent with a <code>depth_id</code> for specifying which …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA handle to the environment map helper shader.\nLike <code>EnvironmentMapLight</code>, but contains asset IDs instead …\nA pair of cubemap textures that represent the surroundings …\nInformation about the environment map attached to the …\nA bundle that contains everything needed to make an entity …\nThe blurry image that represents diffuse radiance …\nThe cubemaps that make up this environment map.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nScale factor applied to the diffuse and specular light …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMarks this environment map as a light probe.\nWorld space rotation applied to the environment light …\nContains a transform that specifies the position of this …\nThe typically-sharper, mipmapped image that represents …\nLabel for the compute shader instance data building pass.\nLabel for the screen space ambient occlusion render node.\nLabel for the screen space reflections pass.\nLabel for the shadow pass node.\nLabel for the volumetric lighting pass.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe component that defines an irradiance volume.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nScale factor applied to the diffuse and specular light …\nCalls <code>U::from(self)</code>.\nThe 3D texture that represents the ambient cubes, encoded …\nAn ambient light, which lights the entire scene equally.\nA more general form of the <code>FogFalloff::Exponential</code> mode. …\nA Directional light.\nA component bundle for <code>DirectionalLight</code> entities.\nConfigures the “classic” computer graphics distance fog…\nA pair of cubemap textures that represent the surroundings …\nAn exponential fog falloff with a given <code>density</code>.\nA squared exponential fog falloff with a given <code>density</code>.\nAllows switching between different fog falloff modes, and …\nA marker component for a light probe, which is a cuboid …\nA linear fog falloff that grows in intensity between <code>start</code> …\nMaterials are used alongside <code>MaterialPlugin</code>, <code>Mesh3d</code>, and …\nA component bundle for entities with a <code>Mesh3d</code> and a …\nAdds the necessary ECS resources and render logic to …\nA material used for rendering a <code>Mesh3d</code>.\nA simple linear interpolation, using a single texture …\nThe parallax mapping method to use to compute depth based …\nA component bundle for PBR entities with a <code>Mesh3d</code> and a …\nA light that emits light in all directions from a central …\nA component bundle for <code>PointLight</code> entities.\nA bundle that contains everything needed to make an entity …\nDiscovers the best depth value based on binary search.\nPlugin for screen space ambient occlusion.\nA light that emits light in a given direction from a …\nA component bundle for spot light entities\nA material with “standard” properties used in PBR …\nHow to apply the alpha channel of the <code>base_color_texture</code>.\nThe direction of increased roughness, in radians relative …\nIncreases the roughness along a specific direction, so …\nThe resulting (non-absorbed) color after white light …\nHow far, on average, light travels through the volume …\nThe color of the surface of the material before lighting.\nThe UV channel to use for the …\nThe texture component of the material’s color before …\nA direct scale factor multiplied with <code>color</code> before being …\nAn extra thin translucent layer on top of the main PBR …\nThe roughness of the clearcoat material. This is specified …\nThe color of the fog effect.\nThe color of this light source.\nThe color of the light.\nThe color of the light.\nWhether to cull the “front”, “back” or neither …\nUsed for selecting the deferred lighting pass for deferred …\nAdjust rendered depth.\nThe depth map used for parallax mapping.\nThe blurry image that represents diffuse radiance …\nThe amount of light transmitted <em>diffusely</em> through the …\nColor used to modulate the influence of directional light …\nThe exponent applied to the directional light alignment …\nSupport two-sided lighting by automatically flipping the …\nColor the material “emits” to the camera.\nThe UV channel to use for the …\nThe weight in which the camera exposure influences the …\nThe emissive map, multiplies pixels with <code>emissive</code> to get …\nThe cubemaps that make up this environment map.\nDetermines which falloff mode to use, and its parameters.\nNormal map textures authored for DirectX have their …\nWhether to enable fog for this material.\nIlluminance in lux (lumens per square meter), representing …\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nAngle defining the distance from the spot light direction …\nLuminous power in lumens, representing the amount of light …\nLuminous power in lumens, representing the amount of light …\nScale factor applied to the diffuse and specular light …\nThe index of refraction of the material.\nMarks this environment map as a light probe.\nThe exposure (brightness) level of the lightmap, if …\nIn how many layers to split the depth maps for parallax …\nHow “metallic” the material appears, within <code>[0.0, 1.0]</code>.\nThe UV channel to use for the …\nMetallic and roughness maps, stored as a single texture.\nThe UV channel to use for the …\nUsed to fake the lighting of bumps and dents on a material.\nThe UV channel to use for the …\nSpecifies the level of exposure to ambient light.\nRender method used for opaque materials. (Where <code>alpha_mode</code> …\nAngle defining the distance from the spot light direction …\nHow deep the offset introduced by the depth map should be.\nWhich parallax mapping method to use.\nLinear perceptual roughness, clamped to <code>[0.089, 1.0]</code> in …\nControls if the prepass is enabled for the Material. For …\nSimulates a light source coming from a spherical volume …\nSimulates a light source coming from a spherical volume …\nCut-off for the light’s area-of-effect. Fragments …\nRange in meters that this light illuminates.\nSpecular intensity for non-metals on a linear scale of …\nWorld space rotation applied to the environment light …\nA bias used when sampling shadow maps to avoid “…\nA value that adjusts the tradeoff between self-shadowing …\nA value that adjusts the tradeoff between self-shadowing …\nThe distance from the light to near Z plane in the shadow …\nThe distance from the light to the near Z plane in the …\nA bias applied along the direction of the fragment’s …\nA bias applied along the direction of the fragment’s …\nA bias applied along the direction of the fragment’s …\nControls if shadows are enabled for the Material.\nWhether this light casts shadows.\nWhether this light casts shadows.\nWhether this light casts shadows.\nContains a transform that specifies the position of this …\nThe typically-sharper, mipmapped image that represents …\nThe amount of light transmitted <em>specularly</em> through the …\nMarker component that indicates that its entity needs to …\nMarker component that indicates that its entity needs to …\nMarker component that indicates that its entity needs to …\nThickness of the volume beneath the material surface.\nWhether to apply only the base color to this material.\nThe transform applied to the UVs corresponding to …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nUser indication of whether an entity is visible\nUser indication of whether an entity is visible\nEnables or disables the light\nEnables or disables the light\nEnables or disables the light\nMultiplier applied to the world distance (within the …\nMultiplier applied to the world distance (within the …\nDistance from the camera where fog is completely opaque, …\nControls how much light is removed due to atmospheric …\nControls how much light is added due to light scattering …\nDistance from the camera where fog is completely …\nHow many additional steps to use at most to find the depth …\nDisables wireframe rendering for any entity it is attached …\nEnables wireframe rendering for any entity it is attached …\nSets the color of the <code>Wireframe</code> of the entity it is …\nA <code>Plugin</code> that draws wireframes.\nIf <code>Self::global</code> is set, any <code>Entity</code> that does not have a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nWhether to show wireframes for all meshes. Can be …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads inputs and produces <code>backend::PointerHits</code>s. In the …\nOne plugin that contains the <code>PointerInputPlugin</code>, …\nReads <code>backend::PointerHits</code>s, and updates focus, selection, …\nProduces pointer input events. In the <code>First</code> schedule.\nGenerates <code>Pointer</code> events and handles event bubbling.\nRuns after all other picking sets. In the <code>PreUpdate</code> …\nGroups the stages of the picking process under shared …\nAn optional component that overrides default picking …\nThis plugin sets up the core picking infrastructure. It …\nRuns after all the focus systems are done, before event …\nRuns after input events are generated but before commands …\nReceives and processes pointer input events. In the …\nThis module provides a simple interface for implementing a …\nThis module defines a stateful set of interaction events …\nDetermines which entities are being hovered by which …\nReturns the argument unchanged.\nThis module provides unsurprising default inputs to …\nCalls <code>U::from(self)</code>.\nEnables and disables all picking features.\nEnables and disables updating interaction states of …\nIf this is set to <code>false</code> and <code>should_block_lower</code> is set to …\nEnables and disables input collection.\nA mesh ray casting backend for <code>bevy_picking</code>.\nTypes and systems for pointer inputs, such as position and …\nThe picking prelude.\nShould this entity block entities below it from being …\nHolds data from a successful pointer hit test. See …\nAn event produced by a picking backend after it has run …\nThe camera entity used to detect this hit. Useful when you …\n<code>depth</code> only needs to be self-consistent with other …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe normal vector of the hit test, if the data is …\nSet the order of this group of picks. Normally, this is the\nAn unordered collection of entities and their distance …\nThe pointer associated with this hit test.\nThe position of the intersection in the world, if the data …\nThe picking backend prelude.\nTypes and systems for constructing rays from cameras and …\nReads inputs and produces <code>backend::PointerHits</code>s. In the …\nA custom, uniquely identified pointer. Useful for mocking …\nReads <code>backend::PointerHits</code>s, and updates focus, selection, …\nHolds data from a successful pointer hit test. See …\nProduces pointer input events. In the <code>First</code> schedule.\nRuns after all other picking sets. In the <code>PreUpdate</code> …\nThe mouse pointer.\nGroups the stages of the picking process under shared …\nAn optional component that overrides default picking …\nAn event produced by a picking backend after it has run …\nIdentifies a unique pointer entity. <code>Mouse</code> and <code>Touch</code> …\nComponent that tracks a pointer’s current <code>Location</code>.\nRuns after all the focus systems are done, before event …\nRuns after input events are generated but before commands …\nReceives and processes pointer input events. In the …\nA map from <code>RayId</code> to <code>Ray3d</code>.\nA touch input, usually numbered by window touch events …\nThe camera entity used to detect this hit. Useful when you …\n<code>depth</code> only needs to be self-consistent with other …\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nIf this is set to <code>false</code> and <code>should_block_lower</code> is set to …\nIterates over all world space rays for every picking …\nThe <code>Location</code> of the pointer. Note that a location is both …\nThe hash map of all rays cast in the current frame.\nThe normal vector of the hit test, if the data is …\nSet the order of this group of picks. Normally, this is the\nAn unordered collection of entities and their distance …\nThe pointer associated with this hit test.\nThe position of the intersection in the world, if the data …\nClears the <code>RayMap</code> and re-populates it with one ray for each\nShould this entity block entities below it from being …\nIdentifies a ray constructed from some (pointer, camera) …\nA map from <code>RayId</code> to <code>Ray3d</code>.\nThe camera whose projection was used to calculate the ray.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConstruct a <code>RayId</code>.\nThe pointer whose pixel coordinates were used to calculate …\nFires when a pointer is canceled, and it’s current …\nFires when a pointer sends a pointer down event followed …\nFires when a pointer button is pressed over the <code>target</code> …\nFires while the <code>target</code> entity is being dragged.\nFires when a pointer drops the <code>dropped</code> entity onto the …\nFires when a pointer is dragging the <code>target</code> entity and a …\nFires when a pointer dragging the <code>dragged</code> entity enters …\nDragging state.\nFires when a pointer dragging the <code>dragged</code> entity leaves …\nFires while the <code>dragged</code> entity is being dragged over the …\nFires when the <code>target</code> entity receives a pointer down event …\nFires while a pointer is moving over the <code>target</code> entity.\nFires when a the pointer crosses out of the bounds of the …\nFires when a the pointer crosses into the bounds of the …\nA helper system param for accessing the picking event …\nStores the common data needed for all pointer events.\nAn entry in the cache that drives the <code>pointer_events</code> …\nState for all pointers.\nFires when a pointer button is released over the <code>target</code> …\nPointer button pressed to trigger this event.\nPointer button lifted to trigger this event.\nPointer button pressed and lifted to trigger this event.\nPointer button pressed and moved to trigger this event.\nPointer button pressed and moved to trigger this event.\nPointer button pressed, moved, and lifted to trigger this …\nPointer button pressed to enter drag.\nPointer button pressed while dragging over.\nPointer button pressed while leaving drag.\nPointer button lifted to drop.\nThe change in position since the last move event.\nThe change in position since the last drag event.\nThe total distance vector of a drag, measured from drag …\nThe vector of drag movement measured from start to final …\nThe entity that was being dragged when the pointer entered …\nThe entity that was being dragged when the pointer was …\nThe entity that was being dragged when the pointer left …\nStores the starting and current locations for each entity …\nStores  the hit data for each entity currently being …\nThe entity that was dropped onto the <code>target</code> entity.\nDuration between the pointer pressed and lifted for this …\nAdditional event-specific data. <code>DragDrop</code> for example, has …\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the latest prior picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the latest prior picking intersection.\nInformation about the picking intersection.\nThe latest position of the pointer during this drag, used …\nPressing and dragging state, organized by pointer and …\nDispatches interaction events to the target entities.\nThe pointer that triggered this event\nThe location of the pointer during this event\nStores the press location and start time for each button …\nThe position of the pointer at drag start.\nThe original target of this picking event, before bubbling\nThe source of truth for all hover state. This is used to …\nThe entity is being hovered by a pointer.\nNo pointers are interacting with this entity.\nA component that aggregates picking interaction state of …\nThe entity is being pressed down by a pointer.\nThe previous state of the hover map, used to track changes …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCoalesces all data from inputs and backends to generate a …\nUses pointer events to update <code>PointerInteraction</code> and …\nAdds mouse and touch inputs for picking pointers to your …\nDeactivates unused touch pointers.\nShould mouse inputs be updated?\nShould touch inputs be updated?\nSends mouse pointer events to be processed by the core …\nThe picking input prelude.\nSpawns the default mouse pointer.\nSends touch pointer events to be consumed by the core …\nAdds mouse and touch inputs for picking pointers to your …\nShould mouse inputs be updated?\nShould touch inputs be updated?\nAdds the mesh picking backend to your app.\nRuntime settings for the <code>MeshPickingPlugin</code>.\nAn optional component that marks cameras and target …\nRay casting for meshes.\nDetermines how mesh picking should consider <code>Visibility</code>. …\nWhen set to <code>true</code> ray casting will only happen between …\nCasts rays into the scene using <code>MeshPickingSettings</code> and …\nCompletely ignore visibility checks. Hidden items can …\nDetermines whether backfaces should be culled or included …\nCull backfaces.\nInclude backfaces.\nAdd this ray casting <code>SystemParam</code> to your system to cast …\nDisables backface culling for ray casts on this entity.\nSettings for a ray cast.\nHow a ray cast should handle <code>Visibility</code>.\nHit data for an intersection between a ray and a mesh.\nA simplified mesh component that can be used for ray …\nOnly cast rays against entities that are visible in the …\nOnly cast rays against entities that are visible in the …\nThe barycentric coordinates of the intersection.\nThe distance from the ray origin to the intersection point.\nA function that is run every time a hit is found. Ray …\nA predicate that is applied for every entity that ray …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe normal vector of the triangle at the point of …\nThe point of intersection in world space.\nChecks if the ray intersects with the AABB of a mesh, …\nChecks if a ray intersects a mesh, and returns the nearest …\nThe vertices of the triangle that was hit.\nThe index of the triangle that was hit.\nDetermines how ray casting should consider <code>Visibility</code>.\nThe pointer has been canceled. The OS can cause this to …\nA custom, uniquely identified pointer. Useful for mocking …\nThe pointer button was just pressed\nThe location of a pointer, including the current …\nThe tertiary pointer button\nThe mouse pointer.\nThe pointer has moved.\nTypes of actions that can be taken by pointers.\nThe button that was just pressed or released\nIdentifies a unique pointer entity. <code>Mouse</code> and <code>Touch</code> …\nAn input event effecting a pointer.\nHolds a list of entities this pointer is currently …\nComponent that tracks a pointer’s current <code>Location</code>.\nA resource that maps each <code>PointerId</code> to their <code>Entity</code> for …\nTracks the state of the pointer’s buttons in response to …\nThe stage of the pointer button press event\nA button has been pressed on the pointer.\nThe primary pointer button\nThe secondary pointer button\nA touch input, usually numbered by window touch events …\nThe pointer button was just released\nThe action that the event describes.\nReturns true if the <code>target_button</code> of this pointer was just …\nReturns true if the <code>target_button</code> of this pointer was just …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nGet the <code>Entity</code> of the supplied <code>PointerId</code>.\nReturns the nearest hit entity and data about that …\nReturns the touch id if the pointer is a touch input.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if any pointer button is pressed.\nReturns true if the pointer is a custom input.\nReturns <code>true</code> if this pointer’s <code>Location</code> is within the …\nReturns true if the middle (tertiary) pointer button is …\nReturns true if the pointer is the mouse.\nReturns true if the primary pointer button is pressed.\nReturns true if the secondary pointer button is pressed.\nReturns true if the pointer is a touch input.\nReturns <code>Some(&amp;</code><code>Location</code><code>)</code> if the pointer is active, or <code>None</code> …\nThe <code>Location</code> of the pointer. Note that a location is both …\nThe location of the pointer. For [<code>PointerAction::Moved</code>], …\nReturns a <code>PointerLocation</code> associated with the given …\nCreates a new pointer input event.\nThe id of the pointer.\nThe position of the pointer in the <code>target</code>.\nUpdates pointer entities according to the input events.\nThe <code>NormalizedRenderTarget</code> associated with the pointer, …\nUpdate the <code>PointerMap</code> resource with the current frame’s …\nThe button that was pressed.\nHow much the pointer moved from the previous position.\nThe press direction, either down or up.\nCompletely ignore visibility checks. Hidden items can …\nFires when a pointer is canceled, and it’s current …\nFires when a pointer sends a pointer down event followed …\nOne plugin that contains the <code>PointerInputPlugin</code>, …\nFires when a pointer button is pressed over the <code>target</code> …\nFires while the <code>target</code> entity is being dragged.\nFires when a pointer drops the <code>dropped</code> entity onto the …\nFires when a pointer is dragging the <code>target</code> entity and a …\nFires when a pointer dragging the <code>dragged</code> entity enters …\nDragging state.\nFires when a pointer dragging the <code>dragged</code> entity leaves …\nFires while the <code>dragged</code> entity is being dragged over the …\nFires when the <code>target</code> entity receives a pointer down event …\nGenerates <code>Pointer</code> events and handles event bubbling.\nAdds the mesh picking backend to your app.\nRuntime settings for the <code>MeshPickingPlugin</code>.\nAdd this ray casting <code>SystemParam</code> to your system to cast …\nThe tertiary pointer button\nFires while a pointer is moving over the <code>target</code> entity.\nFires when a the pointer crosses out of the bounds of the …\nFires when a the pointer crosses into the bounds of the …\nAn optional component that overrides default picking …\nA helper system param for accessing the picking event …\nThis plugin sets up the core picking infrastructure. It …\nStores the common data needed for all pointer events.\nThe button that was just pressed or released\nAn entry in the cache that drives the <code>pointer_events</code> …\nAdds mouse and touch inputs for picking pointers to your …\nState for all pointers.\nThe primary pointer button\nDisables backface culling for ray casts on this entity.\nAn optional component that marks cameras and target …\nSettings for a ray cast.\nHow a ray cast should handle <code>Visibility</code>.\nThe secondary pointer button\nFires when a pointer button is released over the <code>target</code> …\nOnly cast rays against entities that are visible in the …\nOnly cast rays against entities that are visible in the …\nPointer button pressed to trigger this event.\nPointer button lifted to trigger this event.\nPointer button pressed and lifted to trigger this event.\nPointer button pressed and moved to trigger this event.\nPointer button pressed and moved to trigger this event.\nPointer button pressed, moved, and lifted to trigger this …\nPointer button pressed to enter drag.\nPointer button pressed while dragging over.\nPointer button pressed while leaving drag.\nPointer button lifted to drop.\nThe change in position since the last move event.\nThe change in position since the last drag event.\nThe total distance vector of a drag, measured from drag …\nThe vector of drag movement measured from start to final …\nThe entity that was being dragged when the pointer entered …\nThe entity that was being dragged when the pointer was …\nThe entity that was being dragged when the pointer left …\nStores the starting and current locations for each entity …\nStores  the hit data for each entity currently being …\nThe entity that was dropped onto the <code>target</code> entity.\nDuration between the pointer pressed and lifted for this …\nA function that is run every time a hit is found. Ray …\nAdditional event-specific data. <code>DragDrop</code> for example, has …\nA predicate that is applied for every entity that ray …\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the latest prior picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the latest prior picking intersection.\nInformation about the picking intersection.\nEnables and disables all picking features.\nEnables and disables updating interaction states of …\nIf this is set to <code>false</code> and <code>should_block_lower</code> is set to …\nEnables and disables input collection.\nShould mouse inputs be updated?\nShould touch inputs be updated?\nThe latest position of the pointer during this drag, used …\nPressing and dragging state, organized by pointer and …\nDispatches interaction events to the target entities.\nThe pointer that triggered this event\nThe location of the pointer during this event\nStores the press location and start time for each button …\nDetermines how mesh picking should consider <code>Visibility</code>. …\nWhen set to <code>true</code> ray casting will only happen between …\nShould this entity block entities below it from being …\nThe position of the pointer at drag start.\nThe original target of this picking event, before bubbling\nDetermines how ray casting should consider <code>Visibility</code>.\nPer vertex coloring. Use in conjunction with …\nPer vertex joint transform matrix index. Use in …\nPer vertex joint transform matrix weight. Use in …\nThe direction the vertex normal is facing in. Use in …\nWhere the vertex is located in space. Use in conjunction …\nThe direction of the vertex tangent. Used for normal …\nTexture coordinates for the vertex. Use in conjunction …\nAlternate texture coordinates for the vertex. Use in …\nWhen true, this event will always attempt to propagate …\nWhen true, this event will always attempt to propagate …\nWhen true, this event will always attempt to propagate …\nThe directional axes.\nThe directional axes.\nThe directional axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe <code>GizmoConfigGroup</code> used for debug visualizations of <code>Aabb</code> …\nAbort\nIndependent of all other nodes, but relative to its parent …\nAn <em>additive blend node</em>, which combines the animations of …\nCorresponds to <code>AnimationNodeType::Add</code>.\nCombines the color of the fragments with the colors behind …\nCommand that adds a child to an entity.\nCommand that pushes children to the end of the entity’s …\nA filter on a component that only retains results the …\nEmitted whenever an <code>Asset</code> is added.\nRuns after the fixed update logic.\nFound on Sun’s USB keyboard.\nUsed to control how items are distributed.\nUsed to control how each individual item is aligned by …\nUsed to control how the specified item is aligned within …\nContains the set of permitted types by their <code>TypeId</code>.\nMethods for manipulating alpha values.\nSets how a material’s base color alpha channel is used …\nSpreads the fragment out over a hardware-dependent number …\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\nAn ambient light, which lights the entire scene equally.\nAn <code>Iterator</code> of <code>Entity</code>s over the ancestors of an <code>Entity</code>.\nAn animatable value type.\nThis type allows the conversion of a curve valued in the …\nAn <code>AnimatableCurveEvaluator</code> for <code>AnimatableProperty</code> …\nA curve defined by keyframes with values in an animatable …\nA value on a component that Bevy can animate.\nA <code>Component</code> field that can be animated, defined by a …\n<code>Animation{}</code>: glTF Animation as Bevy <code>AnimationClip</code>\nA list of <code>VariableCurve</code>s and the <code>AnimationTargetId</code>s to …\nThis trait collects the additional requirements on top of …\nA low-level trait that provides control over how curves …\nA low-level trait for use in <code>crate::VariableCurve</code> that …\nA type alias for the <code>petgraph</code> data structure that defines …\nA graph structure that describes how animation clips are …\nAn <code>AssetLoader</code> that can load <code>AnimationGraph</code>s as assets.\nA <code>Handle</code> to the <code>AnimationGraph</code> to be used by the …\nVarious errors that can occur when serializing or …\nAn individual node within an animation graph.\nThe type of an animation mask bitfield.\nThe index of either an animation or blend node in the …\nAnimation node data specific to the type of node (clip, …\nAnimation controls.\nAdds animation support to an app\nAn animation that is being faded out as part of a …\nManages fade-out of animation blend factors, allowing for …\nA primitive shape formed by the region between two …\nCompletely ignore visibility checks. Hidden items can …\nLines will be broken without discrimination on any …\nThe <code>AnyOf</code> query parameter fetches entities with any of the …\n<code>App</code> is the primary API for writing user applications. It …\nAn event that indicates the <code>App</code> should exit. If one or …\nState installation methods for <code>App</code> and <code>SubApp</code>.\nA extension trait adding <code>App::init_gizmo_group</code> and …\nA <code>Resource</code> storing <code>TypeRegistry</code> for type registrations …\nA primitive representing an arc between two points on a …\n↓\n←\n→\n↑\nDeclares that this type is an asset, which can be loaded …\nAdds asset-related builder methods to <code>App</code>.\nEvents that occur for a specific loaded <code>Asset</code>, such as “…\nA unique runtime-only identifier for an <code>Asset</code>. This is …\nThe fallback that records an asset ID.\nControls whether or not assets are pre-processed before …\nRecords an asset path.\nProvides “asset” loading and processing functionality. …\nLoads and tracks the state of <code>Asset</code> values from a …\nStores <code>Asset</code> values identified by their <code>AssetId</code>.\nThe window’s top-left corner should be placed at the …\nA more general form of the <code>FogFalloff::Exponential</code> mode. …\nBundle for playing a standard bevy audio asset\nA component for playing a sound.\nUsed to control audio during playback.\nCommon interactions with an audio sink.\nA source of audio data\nBundle for playing a sound.\nAudioVolumeDown\nAudioVolumeMute\nAudioVolumeUp\nThe sprite will take on the size of the image by default, …\nAutomatically determine the value based on the context and …\nUse the parent node’s <code>AlignItems</code> value to determine how …\nUse the parent node’s <code>JustifyItems</code> value to determine …\nTrack minimum size should be automatically sized\nTrack maximum size should be automatically sized\nRepeat the track to fill available space\nRepeat the track to fill available space but collapse any …\nPosition will be set by the window manager. Bevy will …\nStores the position data of the input devices of type <code>T</code>.\nA pure black color.\nBlack colored text\nA fully black <code>Color::LinearRgba</code> color with an alpha of 1.0.\nA fully black color with full alpha.\nA fully blue color with full alpha.\nA fully blue color with full alpha.\nA 2-dimensional <code>bool</code> vector mask.\nA 3-dimensional <code>bool</code> vector mask.\nA 4-dimensional <code>bool</code> vector mask.\nThe back mouse button.\n<code>f(t) = 2.70158 * t³ - 1.70158 * t²</code>\nBehaves as <code>EaseFunction::BackIn</code> for t &lt; 0.5 and as …\n<code>f(t) = 1.0 +  2.70158 * (t - 1.0)³ - 1.70158 * (t - 1.0)²</code>\nThe background color of the node\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\nThe items are packed such that their baselines align.\nThe items are packed such that their baselines align.\nThis item will be aligned at the baseline.\nThis item will be aligned at the baseline.\nRuns before the fixed update logic.\nDraws a bevel, a straight line in this case, to connect …\nA <em>blend node</em>, which blends its children according to their …\nCorresponds to <code>AnimationNodeType::Blend</code>.\nThe base color alpha value defines the opacity of the …\nAn individual input for <code>Animatable::blend</code>.\nUse CSS Block layout model to determine the position of …\nClip any content that overflows outside the border box\nThe border color of the UI node.\nUsed to add rounded corners to a UI node. You can set a UI …\nStruct defining a <code>Sprite</code> border with padding values\nbouncy at the start!\nBehaves as <code>EaseFunction::BounceIn</code> for t &lt; 0.5 and as …\nbouncy at the end!\nA polygon with a variable number of vertices, allocated on …\nA series of connected line segments in 2D space, allocated …\nA series of connected line segments in 3D space, allocated …\n[ on a US keyboard.\n] on a US keyboard.\nSome laptops place this key to the left of the ↑ key.\nBrowserFavorites\nSome laptops place this key to the right of the ↑ key.\nThe “home” button on Android.\nBrowserRefresh\nBrowserSearch\nBrowserStop\nTrait for removing, adding and replacing children and …\nCollection of methods similar to <code>BuildChildren</code>, but …\nChild builder type.\nThe <code>Bundle</code> trait enables insertion and removal of <code>Component</code>…\nMarker struct for buttons\nA UI node that is a button\nA “press-able” input of type <code>T</code>.\nTake the color provided by <code>LightGizmoConfigGroup</code> depending …\nThe C button.\nCIE Epsilon Constant\nCIE Kappa Constant\nThe calculated clip of the node\nThe defining <code>Component</code> for camera entities, storing …\nA 2D camera component. Enables the 2D render graph for a …\nA 3D camera component. Enables the main 3D render graph …\nThe camera coordinate space is right-handed x-right, y-up, …\nFires when a pointer is canceled, and it’s current …\nCapsLock or ⇪\nA 2D capsule primitive, also known as a stadium or pill …\nA 3D capsule primitive centered on the origin A …\nLeftmost &amp; rightmost characters are equidistant to the …\nThe items are packed along the center of the axis.\nThe items are packed along the center of the axis\nThis item will be aligned along the center of the axis.\nThis item will be aligned along the center of the axis.\nThe items are packed along the center of the axis.\nThe items are packed along the center of the axis.\nWindow will be centered on the selected monitor.\nThe curve that results from chaining one curve with …\nAn error indicating that an end-to-end composition couldn…\nA filter on a component that only retains results the …\nInvalid character.\nTrait for building children entities and adding them to a …\nStruct for building children entities and adding them to a …\nContains references to the child entities of this entity.\nA circle primitive, representing the set of points some …\n<code>f(t) = 1.0 - sqrt(1.0 - t²)</code>\nBehaves as <code>EaseFunction::CircularIn</code> for t &lt; 0.5 and as …\n<code>f(t) = sqrt((2.0 - t) * t)</code>\nA primitive representing a circular sector: a pie slice of …\nA primitive representing a circular segment: the area …\nCommand that clears all children from an entity and …\nA <code>Resource</code> that stores the color that is used to clear the …\nFor a camera, specifies the color used to clear the …\nFires when a pointer sends a pointer down event followed …\nA <em>clip node</em>, which plays an animation clip.\nCorresponds to <code>AnimationNodeType::Clip</code>.\nHide overflowing items by clipping.\nA clockwise winding order\nAn enumerated type that can represent any of the color …\nA 2d material that renders 2d meshes with a texture tinted …\nA component bundle for entities with a <code>Mesh2d</code> and a …\nTrait with methods for converting colors to non-color types\nTrait with methods for converting colors to packed …\nFlex from top to bottom.\nItems are placed by filling each column in turn, adding …\nCombines <code>Column</code> with the dense packing algorithm.\nFlex from bottom to top.\n, on a US keyboard.\nA <code>World</code> mutation.\nA <code>Command</code> queue to perform structural changes to the <code>World</code>.\nExtension trait for <code>Commands</code> adding <code>bevy_state</code> helpers.\nNotifies when text should be inserted into the editor …\nA data type that can be used to store data for an entity.\nCorresponds to a specific field on a specific component …\nProvides the computed size and layout properties of the …\nA state whose value is automatically computed based on the …\nThe created polygon is not convex.\nA system that determines if one or more scheduled systems …\nA cone primitive centered on the midpoint between the tip …\nA conical frustum primitive. A conical frustum can be …\nA curve with a constant value over its domain.\nThe provided knots were all equal. Knots must contain at …\nClip any content that overflows outside the content box\nThe application context menu key, which is typically found …\nThe curve that results from chaining two curves.\nControl or ⌃\nControl or ⌃\nJapanese: 変 (henkan)\nA convex polygon with <code>N</code> vertices.\nAn error that happens when creating a <code>ConvexPolygon</code>.\nFound on Sun’s USB keyboard.\nRepeat the track fixed number of times\nA counterclockwise winding order\nA spline interpolated continuously across the nearest four …\nA spline composed of a single cubic Bezier curve.\nA spline interpolated continuously across the nearest four …\nA collection of <code>CubicSegment</code>s chained into a single …\nImplement this on cubic splines that can generate a cubic …\nA spline interpolated continuously between the nearest two …\n<code>f(t) = t³</code>\nBehaves as <code>EaseFunction::CubicIn</code> for t &lt; 0.5 and as …\nNon-uniform Rational B-Splines (NURBS) are a powerful …\nError during construction of <code>CubicNurbs</code>\n<code>f(t) = (t - 1.0)³ + 1.0</code>\nA segment of a cubic curve, used to hold precomputed …\nA cuboid primitive, which is like a cube, except that the …\nUses the current monitor of the window.\nAn event that is sent whenever the user’s cursor enters …\nAn event that is sent whenever the user’s cursor leaves …\nAn event reporting that the mouse cursor has moved inside …\nA trait for a type that can represent values of type <code>T</code> …\nA curve that has been reparametrized by another curve, …\nThe given clear color is used, overriding the <code>ClearColor</code> …\nFound on Sun’s USB keyboard.\nImplement this on cubic splines that can generate a cyclic …\nA cylinder primitive centered on the origin\nD65 White Point\nBackground color is transparent by default.\nBorder color is transparent by default.\n<code>ParallaxMappingMethod::Relief</code> with a 5 steps, a reasonable …\nThe uuid for the default <code>AssetId</code>. It is valid to assign a …\nHow many other states this state depends on. Used to help …\nHow many other states this state depends on. Used to help …\nHow many other states this state depends on. Used to help …\nWill play the associated audio source once and despawn the …\nThe down button of the D-Pad.\nThe left button of the D-Pad.\nThe right button of the D-Pad.\nThe up button of the D-Pad.\nA type implementing this trait can be converted to a …\nThe type of the iterator of the audio samples, which …\nThe type of the audio samples. Usually a <code>u16</code>, <code>i16</code> or <code>f32</code>, …\nThe items are packed in their default position as if no …\nThe items are packed in their default position as if no …\nThe items are packed in their default position as if no …\nThe items are packed in their default position as if no …\nThe clear color is taken from the world’s <code>ClearColor</code> …\nThe default gizmo config group.\n<code>DefaultMaterial</code>: as above, if the glTF file contains a …\nOne plugin that contains the <code>PointerInputPlugin</code>, …\nThis plugin group will add all the default plugins for a …\nA <code>SystemParam</code> that stores a buffer which gets applied to …\n⌦. The forward delete key. Note that on Apple keyboards, …\nContains the set of prohibited types by their <code>TypeId</code>.\nImplements <code>Deref</code> for structs. This is especially useful …\nImplements <code>DerefMut</code> for structs. This is especially useful …\nAn <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.\nAn <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.\nThe provided knots had a descending knot pair. Subsequent …\nDespawns the given entity’s children recursively\nDespawns the given entity and all its children recursively\nTrait that holds functions for despawning recursively down …\nTypes that can read change detection information. This …\nTypes that implement reliable change detection.\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nA normalized vector pointing in a direction in 2D space\nA normalized vector pointing in a direction in 3D space\nA normalized SIMD vector pointing in a direction in 3D …\nA Directional light.\nA component bundle for <code>DirectionalLight</code> entities.\nNotifies when the IME was disabled.\nDefines the layout model used by this node.\nConfigures the “classic” computer graphics distance fog…\nA dotted line\nFires when a pointer button is pressed over the <code>target</code> …\nFires while the <code>target</code> entity is being dragged.\nFires when a pointer drops the <code>dropped</code> entity onto the …\nFires when a pointer is dragging the <code>target</code> entity and a …\nFires when a pointer dragging the <code>dragged</code> entity enters …\nDragging state.\nFires when a pointer dragging the <code>dragged</code> entity leaves …\nFires while the <code>dragged</code> entity is being dragged over the …\nFires when the <code>target</code> entity receives a pointer down event …\nFile is being dropped into a window.\nA collection of serializable resources and dynamic …\nA <code>DynamicScene</code> builder, used to build a scene from a <code>World</code> …\nA component bundle for a <code>DynamicScene</code> root.\nAdding this component will spawn the scene as a child of …\nThe “east” direction, equivalent to <code>Dir2::X</code>.\nAn empty <code>IRect</code>, represented by maximum and minimum corner …\nAn empty <code>Rect</code>, represented by maximum and minimum corner …\nAn empty <code>URect</code>, represented by maximum and minimum corner …\nAn interval which stretches across the entire real line …\nA type whose values can be eased between.\nCurve functions over the unit interval, commonly used for …\nA <code>Curve</code> that is defined by\nThe right action button of the action pad (i.e. PS: …\nEject or ⏏. This key is placed in the function section …\n…\n…\nBehaves as <code>EaseFunction::ElasticIn</code> for t &lt; 0.5 and as …\n…\nAn ellipse primitive, which is like a circle, but the …\nNotifies when the IME was enabled.\nPage Down, End, or ↘\nThe items are packed towards the end of the axis.\nThe items are packed towards the end of the axis.\nThis item will be aligned with the end of the axis.\nThis item will be aligned with the end of the axis.\nThe items are packed towards the end of the axis.\nThe items are packed towards the end of the axis.\nEnter or ↵. Labeled Return on Apple keyboards.\nSystem set that runs enter schedule(s) for state <code>S</code>.\nLightweight identifier of an entity.\nUses a given <code>crate::monitor::Monitor</code> entity.\nA <code>Command</code> which gets executed for a given <code>Entity</code>.\nA list of commands that will be run to modify an entity.\nAn implementor of this trait knows how to map an <code>Entity</code> …\nProvides mutable access to a single entity and all of its …\nA read-only reference to a particular <code>Entity</code> and all of …\nA mutable reference to a particular <code>Entity</code>, and the entire …\nA pair of cubemap textures that represent the surroundings …\n= on a US keyboard.\nThe <code>App</code> experienced an unhandleable error. Holds the exit …\nAn error type indicating why construction might fail.\nAn error type indicating why construction might fail.\nAn error type indicating why construction might fail.\nEsc or ⎋\nEuler rotation sequences.\nThe <code>EvaluatorId</code> is used to look up the …\nSomething that “happens” and might be read / observed …\nMutably reads events of type <code>T</code> keeping track of which …\nReads events of type <code>T</code> in order and tracks which events …\nSends events of type <code>T</code>.\nAn event collection that represents the events that …\nSystem set that runs exit schedule(s) for state <code>S</code>.\nAn exponential fog falloff with a given <code>density</code>.\n<code>f(t) = 2.0^(10.0 * (t - 1.0))</code>\nBehaves as <code>EaseFunction::ExponentialIn</code> for t &lt; 0.5 and as …\n<code>f(t) = 1.0 - 2.0^(-10.0 * t)</code>\nA squared exponential fog falloff with a given <code>density</code>.\nSchedule which extract data from the main world and …\nA 3D shape representing an extruded 2D <code>base_shape</code>.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nAll false.\nAll false.\nAll false.\nHorizontal flipping transform\nVertical flipping transform\nFlipping X 3D transform\nFlipping Y 3D transform\nFlipping Z 3D transform\nA counterclockwise rotation of π/2 radians.\nA counterclockwise rotation of π/3 radians.\nA counterclockwise rotation of π/4 radians.\nA counterclockwise rotation of π/6 radians.\nA counterclockwise rotation of π/8 radians.\nFailed to add glyph to a newly created atlas for some …\nFailed to get scaled glyph image for cache key\nEvents related to files being dragged and dropped on a …\nProvides read-only access to a set of <code>Resource</code>s defined by …\nProvides mutable access to a set of <code>Resource</code>s defined by …\nFound on Sun’s USB keyboard.\nRuns first in the schedule.\nThe right endpoint of the first curve was infinite.\nTrack maximum size should be sized according to the …\nTrack maximum size should be sized according to the …\nThe fixed timestep game clock following virtual time.\nRuns first in the <code>FixedMain</code> schedule.\nThe schedule that runs last in <code>FixedMain</code>\nContains the fixed update logic. Runs <code>FixedMain</code> zero or …\nThe schedule that runs after the <code>FixedUpdate</code> schedule, for …\nThe schedule that contains logic that must run before …\nThe schedule that contains most gameplay logic, which runs …\nUse Flexbox layout model to determine the position of this …\nDefines how flexbox items are ordered within a flexbox\nThe items are packed towards the end of the axis, unless …\nThis item will be aligned with the end of the axis, unless …\nThe items are packed towards the end of the axis, unless …\nThe items are packed towards the end of the axis, unless …\nThe items are packed towards the start of the axis, unless …\nThis item will be aligned with the start of the axis, …\nThe items are packed towards the start of the axis, unless …\nThe items are packed towards the start of the axis, unless …\nDefines if flexbox items appear on a single line or on …\nA trait for extending <code>f32</code> and <code>f64</code> with extra methods.\nFn This is typically a hardware key that does not generate …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nAllows switching between different fog falloff modes, and …\nAn <code>Asset</code> that contains the data for a loaded font, if …\nThe curve that results from repeating a curve forever.\nThe forward mouse button.\nThe dimension as a fraction of the total available grid …\nAdds frame counting functionality to Apps.\nA trait that enables types to be dynamically constructed …\nDerives the <code>FromReflect</code> trait.\nErgonomics trait for a type with a <code>Standard</code> distribution, …\nCreates an instance of the type this trait is implemented …\nA curve defined by a function together with a fixed domain.\nA fully green color with full alpha.\nA fully green color with full alpha.\nStores a connected gamepad’s metadata such as the name …\nRepresents gamepad input types that are mapped in the …\nRepresents gamepad input types that are mapped in the …\nGamepad settings component.\nA convenience trait which combines fetching and …\nA trait which allows nested <code>Reflect</code> values to be retrieved …\nA convenience trait which combines fetching and …\nPlugin that provides gamepad handling to an <code>App</code>.\nA struct that stores configuration for gizmos.\nA trait used to create gizmo configs groups.\nImplements the <code>GizmoConfigGroup</code> trait for a gizmo config …\nA <code>Resource</code> storing <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> structs\nAn enum configuring how line joints will be drawn.\nAn enum used to configure the style of gizmo lines, …\nA trait for rendering 2D geometric primitives (<code>P</code>) with …\nA trait for rendering 3D geometric primitives (<code>P</code>) with …\nA <code>SystemParam</code> for drawing gizmos.\n<code>GlobalTransform</code> is an affine transformation from …\nUse this <code>Resource</code> to control the global volume of all …\n<code>GlobalZIndex</code> allows a <code>Node</code> entity anywhere in the UI …\nRepresentation of a loaded glTF file.\nLabels that can be used to load part of a glTF\nAdditional untyped data that can be present on most glTF …\nA curve that is the graph of another curve over its …\nTrait for returning a grayscale color of a provided …\nUse CSS Grid layout model to determine the position of …\nControls whether grid items are placed row-wise or …\nRepresents the position of a grid item in a single axis.\nErrors that occur when setting constraints for a …\nA <code>GridTrack</code> is a Row or Column of a CSS Grid. This struct …\nHow many times to repeat a repeated grid track\nAn entity that is invisible in the hierarchy.\nAn entity that cannot be seen from any views.\nAn invisible <code>SpatialBundle</code> with identity transform.\nA strong or weak handle to a specific <code>Asset</code>. If a <code>Handle</code> …\nReturns a bool that describes if an entity has the …\nHelp. Not present on standard PC keyboards.\nError returned if a hex string could not be parsed as a …\nHide overflowing items by influencing layout and then …\nAn entity with <code>Visibility::Hidden</code> will be unconditionally …\nProvides hierarchy functionality to a Bevy app.\nAn extension trait for <code>Query</code> that adds hierarchy related …\nUse for dedicated ひらがな key found on some Japanese …\nHome or ↖\nA torus that has no hole but also doesn’t intersect …\nThe node has been hovered over\nFile is currently being hovered over a window.\nFile hovering was canceled.\nColor in Hue-Saturation-Lightness (HSL) color space with …\nA color in the HSL color space with alpha.\nColor in Hue-Saturation-Value (HSV) color space with alpha.\nA color in the HSV color space with alpha.\nTrait for manipulating the hue of a color.\nColor in Hue-Whiteness-Blackness (HWB) color space with …\nA color in the HWB color space with alpha.\nLegacy modifier key.\nAn identity <code>GlobalTransform</code> that maps all points in space …\nAn identity <code>Transform</code> with no translation, rotation, and a …\nAn identity <code>TransformBundle</code> with no translation, rotation, …\nThe identity isometry which represents the rigid motion of …\nThe identity isometry which represents the rigid motion of …\nNo rotation.\nA 3x3 identity matrix, where all diagonal elements are <code>1</code>, …\nA 2x2 identity matrix, where all diagonal elements are <code>1</code>, …\nA 4x4 identity matrix, where all diagonal elements are <code>1</code>, …\nThe identity quaternion. Corresponds to no rotation.\nThis entity will not block entities beneath it, nor will …\nAll <code>f32::INFINITY</code>.\nAll <code>f32::INFINITY</code>.\nAll <code>f32::INFINITY</code>.\nA <code>SpatialBundle</code> with inherited visibility and identity …\nThis asset id <em>should</em> never be valid. Assigning a value to …\nA rectangle defined by two opposite corners.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nA UI node that is an image\nA UI Node that renders an image.\nAdds the <code>Image</code> as an asset and makes sure that they are …\nA Input Method Editor event.\nA <code>SystemInput</code> type which denotes that a <code>System</code> receives an …\nThe input type of this system. See <code>System::In</code>.\nThe system’s input.\nA <code>SystemInput</code> type which denotes that a <code>System</code> receives a …\nA <code>SystemInput</code> type which denotes that a <code>System</code> receives a …\nOnly cubemaps with six faces are supported.\nUses the monitor with the specified index.\nA small / efficient runtime identifier that can be used to …\nAn unbounded plane in 3D space. It forms a separating …\nAn entity with <code>Visibility::Inherited</code> will inherit the …\nWhether or not an entity is visible in the hierarchy. This …\nThe type contained within this smart pointer\nThe inner input type that is passed to functions that run …\nInsert or Ins. Not present on Apple keyboards.\nCommand that inserts a child at a given index of a parent…\nDescribes what type of input interaction has occurred for …\nGenerates <code>Pointer</code> events and handles event bubbling.\nA nonempty closed interval, possibly unbounded in either …\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nConversion trait to turn something into a <code>System</code>.\nTypes that can convert into a <code>SystemConfigs</code>.\nTypes that can be converted into a <code>SystemSet</code>.\nTypes that can convert into a <code>SystemSetConfigs</code>.\nA torus with non-geometric properties like a minor or …\nAn invalid winding order indicating that it could not be …\n<code>Skin{}/InverseBindMatrices</code>: glTF mesh skin matrices as …\nAn I/O error occurred.\nMarker used to identify default cameras, they will have …\nAn isometry in two dimensions, representing a rotation …\nAn isometry in three dimensions, representing a rotation …\nWords are spaced so that leftmost &amp; rightmost characters …\nUsed to control how items are distributed.\nUsed to control how each individual item is aligned by …\nUsed to control how the specified item is aligned within …\nDescribes the horizontal alignment of multiple lines of …\nJapanese: カタカナ/ひらがな/ローマ字 …\nUse for dedicated カタカナ key found on some Japanese …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nThe key code of a <code>KeyboardInput</code>.\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nProvided the wrong number of knots.\nWill play the associated audio source in a loop.\nColor in LAB color space, with alpha\nA color in the LAB color space with alpha.\nMarker struct for labels\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nRuns last in the schedule.\nSometimes labeled My Computer on the keyboard\nSometimes labeled Calculator on the keyboard\nLaunchMail\nColor in LCH color space, with alpha\nA color in the LCH color space with alpha.\nLeftmost character is immediately to the right of the …\nThe left mouse button.\nThe horizontal value of the left stick.\nThe vertical value of the left stick.\nThe left thumb stick button.\nThe first left trigger.\nThe second left trigger.\nThe value of the left <code>Z</code> button.\nInvalid length.\nConfigures how a color is attributed to a light gizmo.\nThe <code>GizmoConfigGroup</code> used to configure the visualization …\nA marker component for a light probe, which is a cuboid …\nAn infinite line going through the origin along a …\nAn infinite line going through the origin along a …\nDetermines how lines will be broken when preventing text …\nA linear fog falloff that grows in intensity between <code>start</code> …\n<code>f(t) = t</code>\nA curve that has had its domain changed by a linear …\nAn error indicating that a linear reparametrization couldn…\nLinear RGB color with alpha.\nA color in the linear sRGB color space with alpha.\nEmitted whenever an <code>Asset</code> has been fully loaded (including …\nA system local <code>SystemParam</code>.\nMethods for changing the luminance of a color. Note that …\nThe largest possible axis value.\nMaximum curvature. The UI Node will take a capsule shape …\nAll <code>f32::MAX</code>.\nAll <code>f32::MAX</code>.\nAll <code>f32::MAX</code>.\nAll <code>i32::MAX</code>.\nAll <code>i32::MAX</code>.\nAll <code>i32::MAX</code>.\nAll <code>u32::MAX</code>.\nAll <code>u32::MAX</code>.\nAll <code>u32::MAX</code>.\nThe smallest possible axis value.\nAll <code>f32::MIN</code>.\nAll <code>f32::MIN</code>.\nAll <code>f32::MIN</code>.\nAll <code>i32::MIN</code>.\nAll <code>i32::MIN</code>.\nAll <code>i32::MIN</code>.\nAll <code>u32::MIN</code>.\nAll <code>u32::MIN</code>.\nAll <code>u32::MIN</code>.\nThe schedule that contains the app logic that is evaluated …\nUser-specified color.\nA curve whose samples are defined by mapping samples from …\nReduce transparency to fully opaque or fully transparent …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nTake the color of the represented light.\nMaterials are used alongside <code>MaterialPlugin</code>, <code>Mesh3d</code>, and …\n<code>Material{}</code>: glTF Material as a Bevy <code>StandardMaterial</code>\nA component bundle for entities with a <code>Mesh3d</code> and a …\nA UI node that is rendered using a <code>UiMaterial</code>\nAdds the necessary ECS resources and render logic to …\nTrack minimum size should be content sized under a …\nTrack maximum size should be content sized under a …\nA trait for getting measurements of 2D shapes\nA trait for getting measurements of 3D shapes\nMediaPlayPause\nMediaSelect\nMediaStop\nMediaTrackNext\nMediaTrackPrevious\nA 3D object made out of vertices representing triangles, …\n<code>Mesh{}</code>: glTF Mesh as a <code>GltfMesh</code>\nA component for 2D meshes. Requires a <code>MeshMaterial2d</code> to be …\nA component for 3D meshes. Requires a <code>MeshMaterial3d</code> to be …\nA trait used to build <code>Mesh</code>es from a configuration\nA material used for rendering a <code>Mesh2d</code>.\nA material used for rendering a <code>Mesh3d</code>.\nAdds the mesh picking backend to your app.\nRuntime settings for the <code>MeshPickingPlugin</code>.\nAdd this ray casting <code>SystemParam</code> to your system to cast …\nA trait for shapes that can be turned into a <code>Mesh</code>.\nLegacy modifier key. Also called “Super” in certain …\nThe tertiary pointer button\nThe middle mouse button.\nTrack minimum size should be content sized under a …\nTrack maximum size should be content sized under a …\nThis plugin group will add the minimal plugins for a <em>Bevy</em> …\n- on a US keyboard.\nExtends both lines at the joining point until they meet in …\nLinear interpolation of two colors within a given color …\nThe mode button.\nEmitted whenever an <code>Asset</code> value is modified.\nReferences a screen monitor.\n<code>Mesh{}/Primitive{}/MorphTargets</code>: Morph target animation …\nControls the morph targets for all child <code>Mesh3d</code> entities. …\nA button on a mouse device.\nFires while a pointer is moving over the <code>target</code> entity.\nComponent for configuring the number of samples for …\nCombines the color of the fragments with the colors behind …\nUnique mutable borrow of an entity’s component or of a …\nAn invalid color.\nAll NAN:s.\nAll <code>f32::NAN</code>.\nAll <code>f32::NAN</code>.\nAll NAN:s.\nAll NAN:s.\nAll NANs.\nAll <code>f32::NAN</code>.\nAll <code>f32::NEG_INFINITY</code>.\nAll <code>f32::NEG_INFINITY</code>.\nAll <code>f32::NEG_INFINITY</code>.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nA unit vector pointing along the negative W axis.\nA unit vector pointing along the negative W axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA fully transparent <code>Color::LinearRgba</code> color with 0 red, …\nA fully transparent color.\nThe “north” direction, equivalent to <code>Dir2::Y</code>.\nThe “north-east” direction, between <code>Dir2::NORTH</code> and …\nThe “north-west” direction, between <code>Dir2::NORTH</code> and …\nComponent used to identify an entity. Stores a hash for …\nConvenient query for giving a human friendly name to an …\nThe next state of <code>State&lt;S&gt;</code>.\nFont was not found, this could be that the font has not …\nNo soft wrapping, where text is automatically broken up …\nSingle line, will overflow if needed.\nThe base component for UI entities. It describes UI layout …\n<code>Node{}</code>: glTF Node as a <code>GltfNode</code>\nThe basic UI node.\nJapanese: 無変換 (muhenkan)\nShared borrow of a non-<code>Send</code> resource.\nUnique borrow of a non-<code>Send</code> resource.\nDoes not draw any line joints.\nNothing has happened\nUse no layout, don’t render this node and its children.\nNo clear color is used: the camera will simply draw on top …\nThe upper action button of the action pad (i.e. PS: …\nThe number of control points provided is less than 4.\nThis resampling operation was not provided with enough …\nOn the Mac, this is used for the numpad Clear key.\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\nThe Enter key on the numpad.\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nWill play the associated audio source once.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAn <code>Observer</code> system. Add this <code>Component</code> to an <code>Entity</code> to …\nA simple linear interpolation, using a single texture …\nUI will render without anti-aliasing\nColor in Oklab color space, with alpha\nA color in the Oklab color space with alpha.\nColor in Oklch color space, with alpha\nA color in the Oklch color space with alpha.\nUI will render with anti-aliasing\nTrigger emitted when a component is added to an entity. …\nThe label of a <code>Schedule</code> that <strong>only</strong> runs whenever <code>State&lt;S&gt;</code> …\nThe label of a <code>Schedule</code> that <strong>only</strong> runs whenever <code>State&lt;S&gt;</code> …\nTrigger emitted when a component is inserted onto an …\nTrigger emitted when a component is removed from an …\nTrigger emitted when a component is replaced on an entity. …\nThe label of a <code>Schedule</code> that <strong>only</strong> runs whenever <code>State&lt;S&gt;</code> …\nRun once and stop.\nBase color alpha values are overridden to be fully opaque …\nFound on Sun’s USB keyboard.\nA filter that tests if any of the given filters apply.\nProject a 3D space onto a 2D surface using parallel lines, …\nMiscellaneous buttons, considered non-standard (i.e. Extra …\nNon-standard support for other axis types (i.e. HOTAS …\nAnother mouse button with the associated number.\nFires when a the pointer crosses out of the bounds of the …\nThe return type of this system. See <code>System::Out</code>.\nThe system’s output.\nThe <code>Outline</code> component adds an outline outside the edge of …\nThe output of <code>primitive_2d</code>. This is a builder to set …\nThe output of <code>Self::mesh</code>. This will be a <code>MeshBuilder</code> used …\nThe output of <code>primitive_3d</code>. This is a builder to set …\nThe type of vector returned by the sample methods, <code>Vec2</code> …\nFires when a the pointer crosses into the bounds of the …\nWhether to show or hide overflowing items\nWhether to show or hide overflowing items\nUsed to determine the bounds of the visible area when a UI …\nThe bounds of the visible area when a UI node is clipped.\nA rotation of π radians.\nAn entity ID with a placeholder value. This may or may not …\nClip any content that overflows outside the padding box\nPage Down, PgDn, or ⇟\nPage Up, PgUp, or ⇞\nThe parallax mapping method to use to compute depth based …\nAn alternative to <code>Commands</code> that can be used in parallel …\nThe wrapper input type that is defined as the first …\nThe <code>SystemParam</code>/s used by this system to access the <code>World</code>.\nA collection of potentially conflicting <code>SystemParam</code>s …\nHolds a reference to the parent entity of this entity. …\nParsing error.\nThe foundational trait of <code>bevy_reflect</code>, used for accessing …\nFound on Sun’s USB keyboard.\nPause Break\nA component bundle for PBR entities with a <code>Mesh3d</code> and a …\nThere is a pending transition for state <code>S</code>")