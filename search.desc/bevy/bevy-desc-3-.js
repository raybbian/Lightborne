searchState.loadedDescShard("bevy", 3, "Casts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nReturns a bitmask with the lowest 3 bits set from the …\nReturns a bitmask with the lowest 4 bits set from the …\n<code>bool</code> vector mask types.\nThis module contains traits and implements for working …\nCreates a 2-dimensional <code>bool</code> vector mask.\nCreates a 3-dimensional <code>bool</code> vector mask.\nCreates a 3-dimensional <code>bool</code> vector mask.\nCreates a 4-dimensional <code>bool</code> vector mask.\nCreates a 4-dimensional <code>bool</code> vector mask.\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nComponent-wise clamping of values, similar to <code>f32::clamp</code>.\nComponent-wise clamping of values, similar to <code>f64::clamp</code>.\nComponent-wise clamping of values, similar to <code>f64::clamp</code>.\nComponent-wise clamping of values, similar to <code>f64::clamp</code>.\nComponent-wise clamping of values, similar to <code>i8::clamp</code>.\nComponent-wise clamping of values, similar to <code>i8::clamp</code>.\nComponent-wise clamping of values, similar to <code>i8::clamp</code>.\nComponent-wise clamping of values, similar to <code>u8::clamp</code>.\nComponent-wise clamping of values, similar to <code>u8::clamp</code>.\nComponent-wise clamping of values, similar to <code>u8::clamp</code>.\nComponent-wise clamping of values, similar to <code>i16::clamp</code>.\nComponent-wise clamping of values, similar to <code>i16::clamp</code>.\nComponent-wise clamping of values, similar to <code>i16::clamp</code>.\nComponent-wise clamping of values, similar to <code>u16::clamp</code>.\nComponent-wise clamping of values, similar to <code>u16::clamp</code>.\nComponent-wise clamping of values, similar to <code>u16::clamp</code>.\nComponent-wise clamping of values, similar to <code>i64::clamp</code>.\nComponent-wise clamping of values, similar to <code>i64::clamp</code>.\nComponent-wise clamping of values, similar to <code>i64::clamp</code>.\nComponent-wise clamping of values, similar to <code>u64::clamp</code>.\nComponent-wise clamping of values, similar to <code>u64::clamp</code>.\nComponent-wise clamping of values, similar to <code>u64::clamp</code>.\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no more than <code>max</code>.\nReturns a vector with a length no more than <code>max</code>.\nReturns a vector with a length no more than <code>max</code>.\nReturns a vector with a length no more than <code>max</code>.\nReturns a vector with a length no less than <code>min</code>.\nReturns a vector with a length no less than <code>min</code>.\nReturns a vector with a length no less than <code>min</code>.\nReturns a vector with a length no less than <code>min</code>.\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nThis module contains abstract mathematical traits shared …\nReturns the quaternion conjugate of <code>self</code>. For a unit …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nThe cosine of the rotation angle in radians.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nCubes the f32\nProvides types for building cubic splines for rendering …\nThe <code>Curve</code> trait, providing a domain-agnostic description …\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nThe direction of the ray.\nThe direction of the ray.\nThe distance between this element and another, as …\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nThe squared distance between this element and another, as …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nDivides a quaternion by a scalar value. The quotient is …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nDivides a 3x3 matrix by a scalar.\nDivides a 2x2 matrix by a scalar.\nDivides a 3x3 matrix by a scalar.\nDivides a 4x4 matrix by a scalar.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nThe interval over which this curve is parametrized.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>. The dot product …\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\n<code>f32</code> vector, quaternion and matrix types.\n<code>f64</code> vector, quaternion and matrix types.\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>Dir2</code> to a <code>CompassQuadrant</code> in a lossy manner. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>Dir2</code> to a <code>CompassOctant</code> in a lossy manner. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a quaternion from a 3x3 rotation matrix inside a …\nCreates an affine transform from the given rotation <code>angle</code>.\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transform from the given rotation <code>angle</code>.\nCreates a 2x2 matrix containing a rotation of <code>angle</code> (in …\nCreates an affine transformation matrix from the given 2D …\nCreates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …\nCreates an affine transform from the given 2D rotation …\nCreates an affine transform from the given 2D rotation …\nCreates a new vector mask from a bool array.\nCreates a new vector mask from a bool array.\nCreates a new vector from an array.\nCreates a rotation quaternion from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from a normalized rotation …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from a normalized rotation …\nCreates an affine transformation matrix containing a 3D …\nCreate a quaternion for a normalized rotation <code>axis</code> and …\nCreates an affine transform from three column vectors.\nCreates an affine transform from three column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates an affine transform from three column vectors.\nCreates an affine transform from three column vectors.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates an affine transform from a <code>[f32; 6]</code> array stored …\nCreates an affine transform from a <code>[f32; 12]</code> array stored …\nCreates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …\nCreates an affine transform from a <code>[f64; 6]</code> array stored …\nCreates an affine transform from a <code>[f64; 12]</code> array stored …\nCreates a 2x2 matrix from a <code>[f64; 4]</code> array stored in …\nCreates a 3x3 matrix from a <code>[f64; 9]</code> array stored in …\nCreates a 4x4 matrix from a <code>[f64; 16]</code> array stored in …\nCreates an affine transform from a <code>[[f32; 2]; 3]</code> 2D array …\nCreates an affine transform from a <code>[[f32; 3]; 4]</code> 3D array …\nCreates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …\nCreates an affine transform from a <code>[[f64; 2]; 3]</code> 2D array …\nCreates an affine transform from a <code>[[f64; 3]; 4]</code> 3D array …\nCreates a 2x2 matrix from a <code>[[f64; 2]; 2]</code> 2D array stored …\nCreates a 3x3 matrix from a <code>[[f64; 3]; 3]</code> 3D array stored …\nCreates a 4x4 matrix from a <code>[[f64; 4]; 4]</code> 4D array stored …\nCreates an affine transform from the first 6 values in …\nCreates an affine transform from the first 12 values in …\nCreates a 3x3 matrix from the first 9 values in <code>slice</code>.\nCreates an affine transform from the first 6 values in …\nCreates an affine transform from the first 12 values in …\nCreates a 2x2 matrix from the first 4 values in <code>slice</code>.\nCreates a 3x3 matrix from the first 9 values in <code>slice</code>.\nCreates a 4x4 matrix from the first 16 values in <code>slice</code>.\nCreates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 3D rotation matrix from the given euler rotation …\nCreates a 3D rotation matrix from the given euler rotation …\nCreates a affine transformation matrix containing a …\nCreates a quaternion from the given Euler rotation …\nCreates an <code>InvalidDirectionError</code> from the length of an …\nCreates an affine transform from a 2x2 matrix (expressing …\nCreates an affine transformation matrix from the given 2x2 …\nCreates an affine transform from a 2x2 matrix (expressing …\nCreates an affine transformation matrix from the given 2x2 …\nCreates an affine transform from a 2x2 matrix (expressing …\nCreates an affine transform from a 2x2 matrix (expressing …\nThe given <code>Mat3</code> must be an affine transform,\nCreates an affine transform from a 3x3 matrix (expressing …\nThe given <code>DMat3</code> must be an affine transform,\nCreates an affine transform from a 3x3 matrix (expressing …\nCreates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …\nCreates an affine transformation matrix from the given 3x3 …\nCreates a quaternion from a 3x3 rotation matrix.\nCreates a 2x2 matrix from the minor of the given 3x3 …\nCreates an affine transform from a 3x3 matrix (expressing …\nCreates an affine transform from a 3x3 matrix (expressing …\nThe given <code>Mat3A</code> must be an affine transform,\nThe given <code>Mat4</code> must be an affine transform, i.e. contain …\nCreates a 3x3 matrix from a 4x4 matrix, discarding the 4th …\nThe given <code>DMat4</code> must be an affine transform, i.e. contain …\nCreates a 3x3 matrix from a 4x4 matrix, discarding the 4th …\nCreates a quaternion from the upper 3x3 rotation matrix …\nCreates a 3x3 matrix from the minor of the given 4x4 …\nCreates a 3x3 matrix from the minor of the given 4x4 …\nCreates an affine transform from the given <code>rotation</code> …\nCreates a 3D rotation matrix from the given quaternion.\nCreates an affine transform from the given <code>rotation</code> …\nCreates a 3D rotation matrix from the given quaternion.\nCreates an affine transformation matrix from the given …\nGets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …\nGets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …\nGets the minimal rotation for transforming <code>from</code> to either …\nCreates an affine transform from the given 3D <code>rotation</code> and …\nCreates an affine transform from the given 3D <code>rotation</code> and …\nCreates an affine transformation matrix from the given 3D …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform that changes scale. Note that …\nCreates an affine transform that changes scale. Note that …\nCreates an affine transformation matrix from the given …\nCreates an affine transform that changes scale. Note that …\nCreates an affine transform that changes scale. Note that …\nCreates an affine transformation matrix from the given …\nCreates an affine transformation matrix containing the …\nCreates a 2x2 matrix containing the combining non-uniform …\nCreates an affine transform from the given 2D <code>scale</code>, …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transform from the given 2D <code>scale</code>, …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transform from the given 3D <code>scale</code>, …\nCreates an affine transform from the given 3D <code>scale</code>, …\nCreates an affine transformation matrix from the given 3D …\nCreate a quaternion that rotates <code>v.length()</code> radians around …\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a rotation quaternion from a slice.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates an affine transformation from the given 2D …\nCreates an affine transformation from the given 3D …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transformation from the given 2D …\nCreates an affine transformation from the given 3D …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transformation matrix from the given 3D …\nCreates a <code>Vec3A</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code> …\nCreates a new rotation quaternion from a 4D vector.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates a new rotation quaternion.\n<code>i16</code> vector types.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\n<code>i32</code> vector types.\n<code>i64</code> vector types.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\n<code>i8</code> vector types.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nInterpolate between this value and the <code>other</code> given value …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the inverse of this aspect ratio (height/width).\nReturn the inverse of this transform.\nReturn the inverse of this transform.\nReturns the inverse of <code>self</code>.\nReturn the inverse of this transform.\nReturn the inverse of this transform.\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of a normalized quaternion.\nReturns <code>v</code> normalized to the range <code>[a, b]</code>.\nCalculates the inverse transpose of the 3x3 matrix and …\nReturns <code>true</code> if, and only if, all elements are finite.\nReturns <code>true</code> if, and only if, all elements are finite.\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.\nReturns <code>true</code> if, and only if, all elements are finite.\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nPerforms <code>is_finite</code> on each element of self, returning a …\nPerforms <code>is_finite</code> on each element of self, returning a …\nPerforms <code>is_finite</code> on each element of self, returning a …\nPerforms <code>is_finite</code> on each element of self, returning a …\nReturns true if the aspect ratio represents a landscape …\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NAN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> of length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns true if the aspect ratio represents a portrait …\nReturns true if the aspect ratio is exactly square.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerform vector space linear interpolation between this …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nCreates a left-handed view transform using a camera …\nCreates a left-handed view transform using a camera …\nCreates a left-handed view matrix using a camera position, …\nCreates a right-handed view transform using a camera …\nCreates a right-handed view transform using a camera …\nCreates a right-handed view matrix using a camera …\nCreates a left-handed view transform using a camera …\nCreates a left-handed view transform using a camera …\nCreates a left-handed view matrix using a camera position, …\nCreates a right-handed view transform using a camera …\nCreates a right-handed view transform using a camera …\nCreates a right-handed view matrix using a camera …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nScaling, rotation, shears, and other non-translation …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nThe maximum corner point of the rect.\nThe maximum corner point of the rect.\nThe maximum corner point of the rect.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nCalculates the midpoint between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint between <code>self</code> and <code>rhs</code>.\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nThe minimum corner point of the rect.\nThe minimum corner point of the rect.\nThe minimum corner point of the rect.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nMoves towards <code>rhs</code> based on the value <code>d</code>.\nMoves towards <code>rhs</code> based on the value <code>d</code>.\nMoves towards <code>rhs</code> based on the value <code>d</code>.\nMoves towards <code>rhs</code> based on the value <code>d</code>.\nMultiplies two quaternions. If they each represent a …\nMultiplies a quaternion by a scalar value.\nMultiplies a quaternion and a 3D vector, returning the …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nMultiplies two quaternions. If they each represent a …\nMultiplies two 2x2 matrices.\nMultiplies two 3x3 matrices.\nMultiplies two 3x3 matrices.\nMultiplies two 4x4 matrices.\nMultiplies two quaternions. If they each represent a …\nMultiplies a 3x3 matrix by a scalar.\nMultiplies a 2x2 matrix by a scalar.\nMultiplies a 3x3 matrix by a scalar.\nMultiplies a 4x4 matrix by a scalar.\nTransforms a 2D vector.\nTransforms a 3D vector.\nTransforms a 3D vector.\nMultiplies a quaternion and a 3D vector, returning the …\nTransforms a <code>Vec3A</code>.\nTransforms a 4D vector.\nCreates a new vector mask.\nCreates a new vector mask.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nThe size of this element. The return value should always …\nThe squared norm of this element. Computing this is often …\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nThe origin of the ray.\nThe origin of the ray.\nCreates a left-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nCreates an infinite left-handed perspective projection …\nCreates an infinite reverse left-handed perspective …\nCreates an infinite reverse right-handed perspective …\nCreates an infinite right-handed perspective projection …\nCreates a left-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nThe math prelude.\nThis module defines primitive shapes. The origin is (0, 0) …\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nTransforms the given 3D vector as a point, applying …\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nReturns the aspect ratio as a f32 value.\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns the reflection vector for a given incident vector …\nReturns the reflection vector for a given incident vector …\nReturns the reflection vector for a given incident vector …\nReturns the reflection vector for a given incident vector …\nReturns the refraction direction for a given incident …\nReturns the refraction direction for a given incident …\nReturns the refraction direction for a given incident …\nReturns the refraction direction for a given incident …\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nRemap <code>self</code> from the input range to the output range.\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nRotates towards <code>rhs</code> up to <code>max_angle</code> (in radians).\nRotates towards <code>rhs</code> up to <code>max_angle</code> (in radians).\nThe rotational part of a two-dimensional isometry.\nThe rotational part of a three-dimensional isometry.\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nUniformly sample a point from the surface of this shape, …\nUniformly sample a point from inside the area/volume of …\nSample a point on this curve at the parameter value <code>t</code>, …\nThis module contains tools related to random sampling.\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nIn other words this computes …\nIn other words this computes …\nIn other words this computes …\nIn other words this computes …\nIn other words this computes …\nIn other words this computes …\nIn other words this computes …\nIn other words this computes …\nIn other words this computes …\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nThe sine of the rotation angle in radians.\nPerforms a spherical linear interpolation between <code>self</code> and …\nCreates a vector mask with all elements set to <code>v</code>.\nCreates a vector mask with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nSquares the f32\nSubtracts the <code>rhs</code> quaternion from <code>self</code>.\nSubtracts two 2x2 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 4x4 matrices.\nTraits adding swizzle methods to all vector types.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nReturns the angle (in radians) of this vector in the range …\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\nReturns the rotation axis (normalized) and angle (in …\nCreates a <code>[f32; 6]</code> array storing data in column major …\nCreates a <code>[f32; 12]</code> array storing data in column major …\nCreates a <code>[f32; 9]</code> array storing data in column major …\nCreates a <code>[f64; 6]</code> array storing data in column major …\nCreates a <code>[f64; 12]</code> array storing data in column major …\nCreates a <code>[f64; 4]</code> array storing data in column major …\nCreates a <code>[f64; 9]</code> array storing data in column major …\nCreates a <code>[f64; 16]</code> array storing data in column major …\nCreates a <code>[[f32; 2]; 3]</code> 2D array storing data in column …\nCreates a <code>[[f32; 3]; 4]</code> 3D array storing data in column …\nCreates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f64; 2]; 3]</code> 2D array storing data in column …\nCreates a <code>[[f64; 3]; 4]</code> 3D array storing data in column …\nCreates a <code>[[f64; 2]; 2]</code> 2D array storing data in column …\nCreates a <code>[[f64; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f64; 4]; 4]</code> 4D array storing data in column …\nExtract Euler angles with the given Euler rotation order.\nExtract Euler angles with the given Euler rotation order.\nExtract Euler angles with the given Euler rotation order.\nReturns the rotation angles for the given euler rotation …\nExtracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …\nReturns the rotation axis scaled by the rotation in …\nCalculates the transpose of the affine 4x3 matrix to a 3x4 …\nTransforms the given 2D point, applying shear, scale, …\nTransforms the given 2D vector as a point.\nTransforms the given 2D point, applying shear, scale, …\nTransforms the given 2D vector as a point.\nTransforms the given 3D points, applying shear, scale, …\nTransforms the given 3D points, applying shear, scale, …\nTransforms the given 3D vector as a point.\nTransforms the given <code>Vec3A</code>, applying shear, scale, …\nTransforms the given 2D vector, applying shear, scale and …\nRotates the given 2D vector.\nTransforms the given 2D vector, applying shear, scale and …\nRotates the given 2D vector.\nTransforms the given 3D vector, applying shear, scale and …\nTransforms the given 3D vector, applying shear, scale and …\nTransforms the give 3D vector as a direction.\nTransforms the given <code>Vec3A</code>, applying shear, scale and …\nTranslation\nThe translational part of a two-dimensional isometry.\nThe translational part of a three-dimensional isometry.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nAttempts to create a new <code>AspectRatio</code> from a given amount …\nAttempts to create a new <code>AspectRatio</code> from a given width …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\n<code>u16</code> vector types.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\n<code>u32</code> vector types.\n<code>u64</code> vector types.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\n<code>u8</code> vector types.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nWrites the columns of <code>self</code> to the first 6 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 12 elements in …\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 6 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 12 elements in …\nWrites the columns of <code>self</code> to the first 4 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 16 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the quaternion to an unaligned slice.\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nReturns the vector part of the quaternion.\nA 2-dimensional <code>bool</code> vector mask.\nA 3-dimensional <code>bool</code> vector mask.\nA 3-dimensional SIMD vector mask.\nA 4-dimensional <code>bool</code> vector mask.\nA 4-dimensional SIMD vector mask.\nCreates a 2-dimensional <code>bool</code> vector mask.\nCreates a 3-dimensional <code>bool</code> vector mask.\nCreates a 3-dimensional <code>bool</code> vector mask.\nCreates a 4-dimensional <code>bool</code> vector mask.\nCreates a 4-dimensional <code>bool</code> vector mask.\nA 2D axis-aligned bounding box, or bounding rectangle\nA 3D axis-aligned bounding box\nAn intersection test that casts an <code>Aabb2d</code> along a ray.\nAn intersection test that casts an <code>Aabb3d</code> along a ray.\nA trait with methods that return 2D bounding volumes for a …\nA trait with methods that return 3D bounding volumes for a …\nA trait implemented on 2D shapes which determines the 3D …\nA bounding circle\nAn intersection test that casts a <code>BoundingCircle</code> along a …\nA bounding sphere\nAn intersection test that casts a <code>BoundingSphere</code> along a …\nA trait that generalizes different bounding volumes. …\nThe type used for the size of the bounding volume. Usually …\nA trait that generalizes intersection tests against a …\nA raycast intersection test for 2D bounding volumes\nA raycast intersection test for 3D bounding volumes\nThe rotation type used for the volume. This should be <code>f32</code> …\nThe position type used for the volume. This should be <code>Vec2</code> …\nThe aabb that is being cast\nThe aabb that is being cast\nGet an axis-aligned bounding box for the shape translated …\nComputes the smallest <code>Aabb2d</code> containing this <code>BoundingCircle</code>…\nGet an axis-aligned bounding box for the shape translated …\nComputes the smallest <code>Aabb3d</code> containing this <code>BoundingSphere</code>…\nGet the distance at which the <code>Aabb2d</code>s collide, if at all.\nGet the distance at which the <code>Aabb3d</code>s collide, if at all.\nGet the distance of an intersection with an <code>Aabb2d</code>, if any.\nGet the distance of an intersection with an <code>Aabb3d</code>, if any.\nGet a bounding circle for the shape translated and rotated …\nComputes the smallest <code>BoundingCircle</code> containing this <code>Aabb2d</code>…\nGet a bounding sphere for the shape translated and rotated …\nComputes the smallest <code>BoundingSphere</code> containing this <code>Aabb3d</code>…\nReturns the center of the bounding volume.\nThe center of the bounding circle\nThe center of the bounding sphere\nThe circle\nThe circle that is being cast\nGet the distance at which the <code>BoundingCircle</code>s collide, if …\nGet the distance of an intersection with a <code>BoundingCircle</code>, …\nFinds the point on the AABB that is closest to the given …\nFinds the point on the bounding circle that is closest to …\nFinds the point on the AABB that is closest to the given …\nFinds the point on the bounding sphere that is closest to …\nChecks if this bounding volume contains another one.\nThe direction of the ray.\nGet the cached multiplicative inverse of the direction of …\nGet the cached multiplicative inverse of the direction of …\nGet an axis-aligned bounding box for an extrusion with …\nGet a bounding sphere for an extrusion of the <code>base_shape</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nComputes the smallest <code>Aabb2d</code> containing the given set of …\nComputes a <code>BoundingCircle</code> containing the given set of …\nComputes the smallest <code>Aabb3d</code> containing the given set of …\nComputes a <code>BoundingSphere</code> containing the given set of …\nConstruct a <code>RayCast2d</code> from a <code>Ray2d</code> and max distance.\nConstruct an <code>AabbCast2d</code> from an <code>Aabb2d</code>, <code>Ray2d</code>, and max …\nConstruct a <code>BoundingCircleCast</code> from a <code>BoundingCircle</code>, <code>Ray2d</code>…\nConstruct a <code>RayCast3d</code> from a <code>Ray3d</code> and max distance.\nConstruct an <code>AabbCast3d</code> from an <code>Aabb3d</code>, <code>Ray3d</code>, and max …\nConstruct a <code>BoundingSphereCast</code> from a <code>BoundingSphere</code>, <code>Ray3d</code>…\nIncreases the size of the bounding volume in each …\nReturns the half size of the bounding volume.\nCheck if a volume intersects with this intersection test\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum, conventionally top-right, point of the box\nThe maximum point of the box\nThe maximum distance for the ray\nThe maximum distance for the ray\nComputes the smallest bounding volume that contains both …\nThe minimum, conventionally bottom-left, point of the box\nThe minimum point of the box\nConstructs an AABB from its center and half-size.\nConstructs a bounding circle from its center and radius.\nConstructs an AABB from its center and half-size.\nConstructs a bounding sphere from its center and radius.\nConstruct a <code>RayCast2d</code> from an origin, <code>Dir2</code>, and max …\nConstruct an <code>AabbCast2d</code> from an <code>Aabb2d</code>, origin, <code>Dir2</code>, and …\nConstruct a <code>BoundingCircleCast</code> from a <code>BoundingCircle</code>, …\nConstruct a <code>RayCast3d</code> from an origin, direction, and max …\nConstruct an <code>AabbCast3d</code> from an <code>Aabb3d</code>, origin, direction, …\nConstruct a <code>BoundingSphereCast</code> from a <code>BoundingSphere</code>, …\nThe origin of the ray.\nGet the radius of the bounding circle\nGet the radius of the bounding sphere\nThe ray for the test\nThe ray along which to cast the bounding volume\nThe ray along which to cast the bounding volume\nThe ray along which to cast the bounding volume\nThe ray along which to cast the bounding volume\nRotates the bounding volume around the origin by the given …\nRotates the bounding volume around the origin by the given …\nRotates the bounding volume around the origin by the given …\nRotates the bounding volume around the origin by the given …\nRotates the bounding volume around the origin by the given …\nRotates the bounding volume around the origin by the given …\nScale the size of the bounding volume around its center by …\nDecreases the size of the bounding volume in each …\nThe sphere\nThe sphere that is being cast\nGet the distance at which the <code>BoundingSphere</code>s collide, if …\nGet the distance of an intersection with a <code>BoundingSphere</code>, …\nTransforms the bounding volume by first rotating it around …\nTransforms the bounding volume by first rotating it around …\nTransforms the bounding volume by first rotating it around …\nTransforms the bounding volume by first rotating it around …\nTransforms the bounding volume by first rotating it around …\nTransforms the bounding volume by first rotating it around …\nTranslates the bounding volume by the given translation.\nTranslates the bounding volume by the given translation.\nComputes the visible surface area of the bounding volume. …\nA type that supports the operations of a normed vector …\nA type with a natural interpolation that provides strong …\nA type that supports the mathematical operations of a real …\nThe zero vector, which is the identity of addition for the …\nThe distance between this element and another, as …\nThe squared distance between this element and another, as …\nInterpolate between this value and the <code>other</code> given value …\nPerform vector space linear interpolation between this …\nThe size of this element. The return value should always …\nThe squared norm of this element. Computing this is often …\nThe provided knots were all equal. Knots must contain at …\nA spline interpolated continuously across the nearest four …\nA spline composed of a single cubic Bezier curve.\nAn error returned during cubic curve generation for cubic …\nA spline interpolated continuously across the nearest four …\nA collection of <code>CubicSegment</code>s chained into a single …\nImplement this on cubic splines that can generate a cubic …\nA spline interpolated continuously between the nearest two …\nNon-uniform Rational B-Splines (NURBS) are a powerful …\nError during construction of <code>CubicNurbs</code>\nA segment of a cubic curve, used to hold precomputed …\nImplement this on cubic splines that can generate a cyclic …\nThe provided knots had a descending knot pair. Subsequent …\nAn error type indicating why construction might fail.\nAn error type indicating why construction might fail.\nAn error type indicating why construction might fail.\nAn error indicating that a spline construction didn’t …\nProvided the wrong number of knots.\nA spline interpolated linearly between the nearest 2 …\nThe number of control points provided is less than 4.\nA collection of <code>RationalSegment</code>s chained into a single …\nImplement this on cubic splines that can generate a …\nA segment of a rational cubic curve, used to hold …\nProvided a different number of weights and control points.\nPolynomial coefficients for the segment.\nThe coefficients matrix of the cubic curve.\nThe control points of the Bezier curve.\nThe control points of the Hermite curve.\nThe control points of the Cardinal spline\nThe control points of the spline\nThe control points of the NURBS\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe width of the domain of this segment.\nKnots\nCreate a new linear spline from a list of points to be …\nThe control points of the linear spline.\nTension\nBuild a <code>CubicCurve</code> by computing the interpolation …\nBuild a <code>RationalCurve</code> by computing the interpolation …\nBuild a cyclic <code>CubicCurve</code> by computing the interpolation …\nThe homogeneous weight coefficients.\nWeights\nExpected number of knots\nExpected number of weights\nProvided number of knots\nProvided number of weights\nThe number of control points provided\n<code>f(t) = 2.70158 * t³ - 1.70158 * t²</code>\nBehaves as <code>EaseFunction::BackIn</code> for t &lt; 0.5 and as …\n<code>f(t) = 1.0 +  2.70158 * (t - 1.0)³ - 1.70158 * (t - 1.0)²</code>\nbouncy at the start!\nBehaves as <code>EaseFunction::BounceIn</code> for t &lt; 0.5 and as …\nbouncy at the end!\nThe curve that results from chaining one curve with …\nAn error indicating that an end-to-end composition couldn…\n<code>f(t) = 1.0 - sqrt(1.0 - t²)</code>\nBehaves as <code>EaseFunction::CircularIn</code> for t &lt; 0.5 and as …\n<code>f(t) = sqrt((2.0 - t) * t)</code>\nA curve with a constant value over its domain.\nThe curve that results from chaining two curves.\n<code>f(t) = t³</code>\nBehaves as <code>EaseFunction::CubicIn</code> for t &lt; 0.5 and as …\n<code>f(t) = (t - 1.0)³ + 1.0</code>\nA trait for a type that can represent values of type <code>T</code> …\nA curve that has been reparametrized by another curve, …\nA type whose values can be eased between.\nCurve functions over the unit interval, commonly used for …\nA <code>Curve</code> that is defined by\n…\n…\nBehaves as <code>EaseFunction::ElasticIn</code> for t &lt; 0.5 and as …\n…\n<code>f(t) = 2.0^(10.0 * (t - 1.0))</code>\nBehaves as <code>EaseFunction::ExponentialIn</code> for t &lt; 0.5 and as …\n<code>f(t) = 1.0 - 2.0^(-10.0 * t)</code>\nThe right endpoint of the first curve was infinite.\nThe curve that results from repeating a curve forever.\nA curve defined by a function together with a fixed domain.\nA curve that is the graph of another curve over its …\nA nonempty closed interval, possibly unbounded in either …\n<code>f(t) = t</code>\nA curve that has had its domain changed by a linear …\nAn error indicating that a linear reparametrization couldn…\nA curve whose samples are defined by mapping samples from …\nThis resampling operation was not provided with enough …\nThe curve that results from chaining a curve with its …\nAn error indicating that a ping ponging of a curve couldn…\n<code>f(t) = t²</code>\nBehaves as <code>EaseFunction::QuadraticIn</code> for t &lt; 0.5 and as …\n<code>f(t) = -(t * (t - 2.0))</code>\n<code>f(t) = t⁴</code>\nBehaves as <code>EaseFunction::QuarticIn</code> for t &lt; 0.5 and as …\n<code>f(t) = (t - 1.0)³ * (1.0 - t) + 1.0</code>\n<code>f(t) = t⁵</code>\nBehaves as <code>EaseFunction::QuinticIn</code> for t &lt; 0.5 and as …\n<code>f(t) = (t - 1.0)⁵ + 1.0</code>\nA curve whose sample space is mapped onto that of some …\nThe curve that results from repeating a curve <code>N</code> times.\nAn error indicating that a repetition of a curve couldn’…\nAn error indicating that a resampling operation could not …\nThe curve that results from reversing another.\nAn error indicating that a reversion of a curve couldn’t …\nA curve that is defined by neighbor interpolation over a …\nA curve that is defined by explicit neighbor interpolation …\nThe left endpoint of the second curve was infinite.\n<code>f(t) = 1.0 - cos(t * π / 2.0)</code>\nBehaves as <code>EaseFunction::SineIn</code> for t &lt; 0.5 and as …\n<code>f(t) = sin(t * π / 2.0)</code>\nThe source curve that was to be reparametrized had …\nThe source curve that was to be reversed had unbounded …\nThe source curve that was to be ping ponged had unbounded …\nThe source curve that was to be repeated had unbounded …\n<code>n</code> steps connecting the start and the end\nThe target interval for reparametrization was unbounded.\nThis resampling operation failed because of an unbounded …\nA curve that is defined by interpolation over unevenly …\nA curve that is defined by interpolation over unevenly …\nA curve that combines the output data from two constituent …\nThe interval over which this curve is parametrized.\nGiven <code>start</code> and <code>end</code> values, produce a curve with unlimited …\nCreate an <code>Interval</code> with a given <code>start</code> and <code>end</code>. Alias of …\nSample a point on this curve at the parameter value <code>t</code>, …\nA 2D affine transform, which can represent translation, …\nA 3D affine transform, which can represent translation, …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nA quaternion representing an orientation.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2D affine transform, which can represent translation, …\nA 3D affine transform, which can represent translation, …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nA quaternion representing an orientation.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA primitive shape formed by the region between two …\nA primitive representing an arc between two points on a …\nA 2-dimensional <code>bool</code> vector mask.\nA 3-dimensional <code>bool</code> vector mask.\nA 4-dimensional <code>bool</code> vector mask.\n<code>f(t) = 2.70158 * t³ - 1.70158 * t²</code>\nBehaves as <code>EaseFunction::BackIn</code> for t &lt; 0.5 and as …\n<code>f(t) = 1.0 +  2.70158 * (t - 1.0)³ - 1.70158 * (t - 1.0)²</code>\nbouncy at the start!\nBehaves as <code>EaseFunction::BounceIn</code> for t &lt; 0.5 and as …\nbouncy at the end!\nA polygon with a variable number of vertices, allocated on …\nA series of connected line segments in 2D space, allocated …\nA series of connected line segments in 3D space, allocated …\nA 2D capsule primitive, also known as a stadium or pill …\nA 3D capsule primitive centered on the origin A …\nThe curve that results from chaining one curve with …\nAn error indicating that an end-to-end composition couldn…\nA circle primitive, representing the set of points some …\n<code>f(t) = 1.0 - sqrt(1.0 - t²)</code>\nBehaves as <code>EaseFunction::CircularIn</code> for t &lt; 0.5 and as …\n<code>f(t) = sqrt((2.0 - t) * t)</code>\nA primitive representing a circular sector: a pie slice of …\nA primitive representing a circular segment: the area …\nA clockwise winding order\nThe created polygon is not convex.\nA cone primitive centered on the midpoint between the tip …\nA conical frustum primitive. A conical frustum can be …\nA curve with a constant value over its domain.\nThe provided knots were all equal. Knots must contain at …\nThe curve that results from chaining two curves.\nA convex polygon with <code>N</code> vertices.\nAn error that happens when creating a <code>ConvexPolygon</code>.\nA counterclockwise winding order\nA spline interpolated continuously across the nearest four …\nA spline composed of a single cubic Bezier curve.\nA spline interpolated continuously across the nearest four …\nA collection of <code>CubicSegment</code>s chained into a single …\nImplement this on cubic splines that can generate a cubic …\nA spline interpolated continuously between the nearest two …\n<code>f(t) = t³</code>\nBehaves as <code>EaseFunction::CubicIn</code> for t &lt; 0.5 and as …\nNon-uniform Rational B-Splines (NURBS) are a powerful …\nError during construction of <code>CubicNurbs</code>\n<code>f(t) = (t - 1.0)³ + 1.0</code>\nA segment of a cubic curve, used to hold precomputed …\nA cuboid primitive, which is like a cube, except that the …\nA trait for a type that can represent values of type <code>T</code> …\nA curve that has been reparametrized by another curve, …\nImplement this on cubic splines that can generate a cyclic …\nA cylinder primitive centered on the origin\nThe provided knots had a descending knot pair. Subsequent …\nA normalized vector pointing in a direction in 2D space\nA normalized vector pointing in a direction in 3D space\nA normalized SIMD vector pointing in a direction in 3D …\nA type whose values can be eased between.\nCurve functions over the unit interval, commonly used for …\nA <code>Curve</code> that is defined by\n…\n…\nBehaves as <code>EaseFunction::ElasticIn</code> for t &lt; 0.5 and as …\n…\nAn ellipse primitive, which is like a circle, but the …\nAn error type indicating why construction might fail.\nAn error type indicating why construction might fail.\nAn error type indicating why construction might fail.\nEuler rotation sequences.\n<code>f(t) = 2.0^(10.0 * (t - 1.0))</code>\nBehaves as <code>EaseFunction::ExponentialIn</code> for t &lt; 0.5 and as …\n<code>f(t) = 1.0 - 2.0^(-10.0 * t)</code>\nA 3D shape representing an extruded 2D <code>base_shape</code>.\nThe right endpoint of the first curve was infinite.\nA trait for extending <code>f32</code> and <code>f64</code> with extra methods.\nThe curve that results from repeating a curve forever.\nErgonomics trait for a type with a <code>Standard</code> distribution, …\nA curve defined by a function together with a fixed domain.\nA curve that is the graph of another curve over its …\nA torus that has no hole but also doesn’t intersect …\nA rectangle defined by two opposite corners.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nAn unbounded plane in 3D space. It forms a separating …\nA nonempty closed interval, possibly unbounded in either …\nA torus with non-geometric properties like a minor or …\nAn invalid winding order indicating that it could not be …\nAn isometry in two dimensions, representing a rotation …\nAn isometry in three dimensions, representing a rotation …\nProvided the wrong number of knots.\nAn infinite line going through the origin along a …\nAn infinite line going through the origin along a …\n<code>f(t) = t</code>\nA curve that has had its domain changed by a linear …\nAn error indicating that a linear reparametrization couldn…\nA curve whose samples are defined by mapping samples from …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nA trait for getting measurements of 2D shapes\nA trait for getting measurements of 3D shapes\nThe number of control points provided is less than 4.\nThis resampling operation was not provided with enough …\nThe type of vector returned by the sample methods, <code>Vec2</code> …\nThe curve that results from chaining a curve with its …\nAn error indicating that a ping ponging of a curve couldn…\nAn unbounded plane in 2D space. It forms a separating …\nA bounded plane in 3D space. It forms a surface starting …\nA polygon with N vertices.\nA series of connected line segments in 2D space.\nA series of connected line segments in 3D space.\nA marker trait for 2D primitives\nA marker trait for 3D primitives\n<code>f(t) = t²</code>\nBehaves as <code>EaseFunction::QuadraticIn</code> for t &lt; 0.5 and as …\n<code>f(t) = -(t * (t - 2.0))</code>\n<code>f(t) = t⁴</code>\nBehaves as <code>EaseFunction::QuarticIn</code> for t &lt; 0.5 and as …\n<code>f(t) = (t - 1.0)³ * (1.0 - t) + 1.0</code>\nA quaternion representing an orientation.\n<code>f(t) = t⁵</code>\nBehaves as <code>EaseFunction::QuinticIn</code> for t &lt; 0.5 and as …\n<code>f(t) = (t - 1.0)⁵ + 1.0</code>\nA collection of <code>RationalSegment</code>s chained into a single …\nImplement this on cubic splines that can generate a …\nA segment of a rational cubic curve, used to hold …\nAn infinite half-line starting at <code>origin</code> and going in …\nAn infinite half-line starting at <code>origin</code> and going in …\nA rectangle defined by two opposite corners.\nA rectangle primitive, which is like a square, except that …\nA polygon centered on the origin where all vertices lie on …\nA curve whose sample space is mapped onto that of some …\nThe curve that results from repeating a curve <code>N</code> times.\nAn error indicating that a repetition of a curve couldn’…\nAn error indicating that a resampling operation could not …\nThe curve that results from reversing another.\nAn error indicating that a reversion of a curve couldn’t …\nA rhombus primitive, also known as a diamond shape. A four …\nA torus that has a ring. The major radius is greater than …\nA counterclockwise 2D rotation.\nA curve that is defined by neighbor interpolation over a …\nA curve that is defined by explicit neighbor interpolation …\nThe left endpoint of the second curve was infinite.\nA segment of a line going through the origin along a …\nA segment of a line going through the origin along a …\nExposes methods to uniformly sample a variety of primitive …\n<code>f(t) = 1.0 - cos(t * π / 2.0)</code>\nBehaves as <code>EaseFunction::SineIn</code> for t &lt; 0.5 and as …\n<code>f(t) = sin(t * π / 2.0)</code>\nThe source curve that was to be reparametrized had …\nThe source curve that was to be reversed had unbounded …\nThe source curve that was to be ping ponged had unbounded …\nThe source curve that was to be repeated had unbounded …\nA sphere primitive, representing the set of all points …\nA self-intersecting torus. The major radius is less than …\nA type with a natural interpolation that provides strong …\n<code>n</code> steps connecting the start and the end\nThe target interval for reparametrization was unbounded.\nA tetrahedron primitive.\nA torus primitive, often representing a ring or donut shape\nThe type of torus determined by the minor and major radii\nA triangle in 2D space\nA 3D triangle primitive.\nA rectangle defined by two opposite corners.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nThis resampling operation failed because of an unbounded …\nA curve that is defined by interpolation over unevenly …\nA curve that is defined by interpolation over unevenly …\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nProvided a different number of weights and control points.\nThe winding order for a set of points\nIntrinsic two-axis rotation XYX\nExtrinsic two-axis rotation XYX\nIntrinsic three-axis rotation XYZ\nExtrinsic three-axis rotation XYZ\nIntrinsic two-axis rotation XZX\nExtrinsic two-axis rotation XZX\nIntrinsic three-axis rotation XZY\nExtrinsic three-axis rotation XZY\nIntrinsic two-axis rotation YXY\nExtrinsic two-axis rotation YXY\nIntrinsic three-axis rotation YXZ\nExtrinsic three-axis rotation YXZ\nIntrinsic three-axis rotation YZX\nExtrinsic three-axis rotation YZX\nIntrinsic two-axis rotation YZY\nExtrinsic two-axis rotation YZY\nIntrinsic three-axis rotation ZXY\nExtrinsic three-axis rotation ZXY\nIntrinsic two-axis rotation ZXZ\nExtrinsic two-axis rotation ZXZ\nIntrinsic three-axis rotation ZYX\nExtrinsic three-axis rotation ZYX\nIntrinsic two-axis rotation ZYZ\nExtrinsic two-axis rotation ZYZ\nA curve that combines the output data from two constituent …\nThe arc defining the sector\nThe arc defining the segment\nGet the area of the shape\nGet the surface area of the shape\nThe base shape of the extrusion\nThe circumcircle on which all vertices lie\nPolynomial coefficients for the segment.\nThe coefficients matrix of the cubic curve.\nThe control points of the Bezier curve.\nThe control points of the Hermite curve.\nThe control points of the Cardinal spline\nThe control points of the spline\nThe control points of the NURBS\nThe cosine of the rotation angle in radians.\nThe direction of the line. The line extends infinitely in …\nThe direction of the line segment\nThe direction of the line\nThe direction of the line\nThe direction of the ray.\nThe direction of the ray.\nThe interval over which this curve is parametrized.\nHalf the angle defining the arc\nHalf of the depth of the extrusion\nSize of the horizontal and vertical diagonals of the …\nThe half height of the cylinder\nHalf the length of the line segment. The segment extends …\nHalf the height of the capsule, excluding the hemicircles\nHalf the length of the line segment. The segment extends …\nHalf the height of the capsule, excluding the hemispheres\nHalf of the width and height of the ellipse.\nHalf of the width and height of the rectangle\nHalf of the width and height of the plane\nHalf of the width, height and depth of the cuboid\nThe height of the cone\nThe height of the frustum\nThe inner circle of the annulus\nInterpolate between this value and the <code>other</code> given value …\nGiven <code>start</code> and <code>end</code> values, produce a curve with unlimited …\nCreate an <code>Interval</code> with a given <code>start</code> and <code>end</code>. Alias of …\nReturns <code>v</code> normalized to the range <code>[a, b]</code>.\nThe width of the domain of this segment.\nKnots\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nThe distance from the center of the torus to the center of …\nThe maximum corner point of the rect.\nThe maximum corner point of the rect.\nThe maximum corner point of the rect.\nThe minimum corner point of the rect.\nThe minimum corner point of the rect.\nThe minimum corner point of the rect.\nThe radius of the tube of the torus\nThe normal of the plane. The plane will be placed …\nThe normal of the plane. The plane will be placed …\nThe normal of the plane. The plane will be placed …\nThe origin of the ray.\nThe origin of the ray.\nThe outer circle of the annulus\nGet the perimeter of the shape\nThe radius of the circle\nThe radius of the circle\nThe radius of the capsule\nThe radius of the sphere\nThe radius of the cylinder\nThe radius of the capsule\nThe radius of the base\nThe radius of the base of the frustum\nThe radius of the top of the frustum\nRemap <code>self</code> from the input range to the output range.\nThe rotational part of a two-dimensional isometry.\nThe rotational part of a three-dimensional isometry.\nUniformly sample a point from the surface of this shape, …\nUniformly sample a point from inside the area/volume of …\nSample a point on this curve at the parameter value <code>t</code>, …\nThe number of sides\nThe sine of the rotation angle in radians.\nTension\nBuild a <code>CubicCurve</code> by computing the interpolation …\nBuild a <code>RationalCurve</code> by computing the interpolation …\nBuild a cyclic <code>CubicCurve</code> by computing the interpolation …\nThe translational part of a two-dimensional isometry.\nThe translational part of a three-dimensional isometry.\nThe vertices of the polyline\nThe vertices of the polyline\nThe vertices of the triangle\nThe vertices of the <code>Polygon</code>\nThe vertices of the <code>BoxedPolygon</code>\nThe vertices of the polyline\nThe vertices of the polyline\nThe vertices of the triangle.\nThe vertices of the tetrahedron.\nGet the volume of the shape\nThe homogeneous weight coefficients.\nWeights\nExpected number of knots\nExpected number of weights\nProvided number of knots\nProvided number of weights\nThe number of control points provided\nA primitive shape formed by the region between two …\nA primitive representing an arc between two points on a …\nA polygon with a variable number of vertices, allocated on …\nA series of connected line segments in 2D space, allocated …\nA series of connected line segments in 3D space, allocated …\nA 2D capsule primitive, also known as a stadium or pill …\nA 3D capsule primitive centered on the origin A …\nA circle primitive, representing the set of points some …\nA primitive representing a circular sector: a pie slice of …\nA primitive representing a circular segment: the area …\nA clockwise winding order\nThe created polygon is not convex.\nA cone primitive centered on the midpoint between the tip …\nA conical frustum primitive. A conical frustum can be …\nA convex polygon with <code>N</code> vertices.\nAn error that happens when creating a <code>ConvexPolygon</code>.\nA counterclockwise winding order\nA cuboid primitive, which is like a cube, except that the …\nA cylinder primitive centered on the origin\nAn ellipse primitive, which is like a circle, but the …\nA 3D shape representing an extruded 2D <code>base_shape</code>.\nA torus that has no hole but also doesn’t intersect …")