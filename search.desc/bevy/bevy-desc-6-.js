searchState.loadedDescShard("bevy", 6, "Creates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nConstructs default reflected <code>FromWorld</code> from world using …\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreate a direction from its <code>x</code> and <code>y</code> components.\nCreate a two-dimensional isometry from a translation with …\nCreate a direction from its <code>x</code> and <code>y</code> components, assuming …\nCreates a new <code>Transform</code> at the position <code>(x, y, z)</code>. In 2d, …\nCreate a direction from its <code>x</code>, <code>y</code>, and <code>z</code> components.\nCreate a direction from its <code>x</code>, <code>y</code>, and <code>z</code> components.\nCreate a three-dimensional isometry from a translation …\nCreate a direction from its <code>x</code>, <code>y</code>, and <code>z</code> components, …\nCreate a direction from its <code>x</code>, <code>y</code>, and <code>z</code> components, …\nCreates a new rotation quaternion.\nMakes the window content appear behind the titlebar.\nConverts a non-linear sRGB value to a linear one via gamma …\nConverts a linear sRGB value to a non-linear one via gamma …\nGenerate tangents for the mesh using the <code>mikktspace</code> …\nReturns the generation of this Entity’s index. The …\nReturns the position data of the provided <code>input_device</code>.\nGet the current state.\nGets the <code>Entity</code> ID of the parent.\nReturns the analog data of the provided <code>GamepadAxis</code> or …\nRetrieves the current state for a specific pointer and …\nReturns the <code>AnimationGraphNode</code> associated with the given …\nGets the query result for the given <code>World</code> and <code>Entity</code>.\nRetrieves a reference to the <code>Asset</code> with the given <code>id</code>, if …\nReturns the read-only query item for the given <code>Entity</code>.\nGets access to the component of type <code>T</code> for the current …\nGets access to the component of type <code>T</code> for the current …\nGets a reference to the resource of the given type if it …\nRetrieves a reference to the given <code>entity</code>’s <code>Component</code> of …\nReturns <code>true</code> if the entity is visible in the hierarchy. …\nReturns <code>true</code> if the entity is visible in any view. …\nReturns a reference to the schedule associated with <code>label</code>, …\nGets access to the component of type <code>T</code> for the current …\nGets a reference to the resource of the given type if it …\nReturns a vector of references to all plugins of type <code>T</code> …\nSee <code>App::get_added_plugins</code>.\nReturns an iterator over all analog axes.\nRetrieves the default <code>AssetLoader</code> for the given <code>Asset</code> …\nRetrieves the default <code>AssetLoader</code> for the given <code>Asset</code> …\nReturns the registered <code>AssetLoader</code> associated with the …\nReturns the registered <code>AssetLoader</code> associated with the …\nReturns the <code>AxisSettings</code> of the <code>GamepadAxis</code>.\nReturns the schedule’s current <code>ScheduleBuildSettings</code>.\nReturns the <code>ButtonAxisSettings</code> of the <code>GamepadButton</code>.\nReturns the <code>ButtonSettings</code> of the <code>GamepadButton</code>.\nReturns untyped read-only reference(s) to component(s) for …\nReturns untyped read-only reference(s) to component(s) for …\nGets a pointer to the resource with the given <code>ComponentId</code> …\nRetrieves an immutable untyped reference to the given …\nReturns untyped read-only reference(s) to component(s) for …\nGets a pointer to the resource with the given <code>ComponentId</code> …\nRetrieves the change ticks for the given component. This …\nRetrieves the change ticks for the given component. This …\nRetrieves the change ticks for the given component. This …\nRetrieves the change ticks for the given <code>ComponentId</code>. This …\nRetrieves the change ticks for the given <code>ComponentId</code>. This …\nRetrieves the change ticks for the given <code>ComponentId</code>. This …\nRead the color of a specific pixel (2D texture).\nRead the color of a specific pixel (1D texture).\nRead the color of a specific pixel (3D texture).\nGets this <code>Bundle</code>’s component ids. This will be <code>None</code> if …\nReturns read-only components for the current entity that …\nReturns read-only components for the current entity that …\nReturns read-only components for the current entity that …\nReturns <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> associated with …\nReturns mutable <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> …\nGets a new <code>EventCursor</code>. This will include all events …\nGets a new <code>EventCursor</code>. This will ignore all events …\nRetrieves the <code>DependencyLoadState</code> of a given asset <code>id</code>’s …\nReturns the grid line at which the item should end, or <code>None</code>…\nReturns the <code>EntityCommands</code> for the requested <code>Entity</code>, if it …\nReturns <code>EntityRef</code>s that expose read-only operations for …\nReturns <code>EntityMut</code>s that expose read and write operations …\nGet a specific event by id if it still exists in the …\nReturns the schedule’s current execution strategy.\nReturns a reference to the value of the field named <code>name</code>, …\nReturns a reference to the value of the field with index …\nReturns a mutable reference to the value of the field …\nReturns a mutable reference to the value of the field with …\nReturns an active handle for the given path, if the asset …\nRetrieves an <code>AssetHandleProvider</code> capable of reserving new …\nReturns an active untyped handle for the given path, if …\nReturns all active untyped handles for the given path, if …\nGet a <code>Handle</code> from an <code>AssetId</code>.\nGet an <code>UntypedHandle</code> from an <code>UntypedAssetId</code>. See …\nComputes and returns the index data of the mesh as bytes. …\nReturns the query item for the given <code>Entity</code>, with the …\nAn iterator visiting every just pressed input in arbitrary …\nReturns an iterator over all digital buttons that were …\nAn iterator visiting every just released input in …\nReturns an iterator over all digital buttons that were …\nGets the tick indicating the last time this system ran.\nRetrieves the main <code>LoadState</code> of a given asset <code>id</code>.\nRetrieves all loads states for the given asset id.\nObtain the currently playing main animation.\nGets the query result for the given <code>World</code> and <code>Entity</code>.\nReturns the read-only query results for the given array of …\nReturns the read-only query items for the given array of …\nGets an <code>EntityRef</code> for multiple entities at once.\nGets an <code>EntityRef</code> for multiple entities at once, whose …\nGets mutable access to multiple entities, whose number is …\nGets mutable access to multiple entities, contained in a …\nGets mutable access to multiple entities.\nReturns the query results for the given array of <code>Entity</code>.\nReturns the query items for the given array of <code>Entity</code>.\nGet this <code>Mesh</code>’s <code>MeshVertexBufferLayout</code>, used in …\nRetrieves the property from the given <code>entity</code>.\nProvides write access to the state of a pointer and …\nReturns a mutable reference to the <code>AnimationGraphNode</code> …\nGets the query result for the given <code>World</code> and <code>Entity</code>.\nRetrieves a mutable reference to the <code>Asset</code> with the given …\nReturns the query item for the given <code>Entity</code>.\nAccesses the parameter at the given index. No other …\nGets mutable access to the component of type <code>T</code> for the …\nGets mutable access to the component of type <code>T</code> for the …\nGets a mutable reference to the resource of the given type …\nRetrieves a mutable reference to the given <code>entity</code>’s …\nReturns a mutable reference to the schedule associated …\nReturns untyped mutable reference(s) to component(s) for …\nReturns untyped mutable reference(s) to component(s) for …\nGets a mutable pointer to the resource with the given …\nRetrieves a mutable untyped reference to the given <code>entity</code>…\nGets a <code>!Send</code> resource to the resource with the id …\nGets a <code>!Send</code> resource to the resource with the id …\nGets a reference to the non-send resource of the given …\nGets a mutable reference to the non-send resource of the …\nRetrieves an <code>Asset</code> stored for the given <code>id</code> if it exists. …\nPushes a <code>Command</code> to the queue for creating a new <code>Entity</code> if …\nReturns an <code>EntityWorldMut</code> for the given <code>entity</code> (if it …\nReturns the path for the given <code>id</code>, if it has one.\nReturns an active untyped handle for the given path and …\nRetrieves the default <code>AssetLoader</code> for the given path, if …\nReturns an active untyped asset id for the given path, if …\nReturns all active untyped asset IDs for the given path, …\nGet a point at a given distance along the ray\nGet a point at a given distance along the ray\nAn iterator visiting every pressed input in arbitrary …\nReturns an iterator over all digital buttons that are …\nReturns the <code>Touch</code> input corresponding to the <code>id</code> if it is …\nReturns the value of the flag that controls event …\nGets a new <code>EventCursor</code>. This will include all events …\nGets a new <code>EventCursor</code>. This will ignore all events …\nRetrieves the main <code>RecursiveDependencyLoadState</code> of a given …\nGets access to the component of type <code>T</code> for the current …\nGets access to the component of type <code>T</code> for the current …\nGets access to the component of type <code>T</code> for the current …\nRetrieves a reference to the given <code>entity</code>’s <code>Component</code> of …\nRetrieves a mutable reference to the given <code>entity</code>’s …\nReturns the <code>Touch</code> input corresponding to the <code>id</code> if it has …\nWill return <code>None</code> if <code>TypeInfo</code> is not available.\nWill return <code>None</code> if <code>TypeInfo</code> is not available.\nWill return <code>None</code> if <code>TypeInfo</code> is not available.\nWill return <code>None</code> if <code>TypeInfo</code> is not available.\nWill return <code>None</code> if <code>TypeInfo</code> is not available.\nWill return <code>None</code> if <code>TypeInfo</code> is not available.\nReturns the <code>TypeInfo</code> of the type <em>represented</em> by this value.\nRetrieves the required components for the given component …\nRetrieves the required components for the component of the …\nGets a reference to the resource of the given type if it …\nGets a pointer to the resource with the id <code>ComponentId</code> if …\nRetrieves the change ticks for the given resource.\nRetrieves the change ticks for the given <code>ComponentId</code>.\nGets a mutable reference to the resource of the given type …\nGets a pointer to the resource with the id <code>ComponentId</code> if …\nGets a mutable reference to the resource of type <code>T</code> if it …\nGets a mutable reference to the resource of type <code>T</code> if it …\nGets a reference including change detection to the …\nReturns a reference to the <code>Schedule</code> with the provided <code>label</code>…\nSee <code>App::get_schedule</code>.\nReturns a mutable reference to the <code>Schedule</code> with the …\nSee <code>App::get_schedule_mut</code>.\nTurn the value into a serializable representation\nReturns a single immutable query result when there is …\nReturns a single read-only query item when there is …\nReturns a single mutable query result when there is …\nReturns a single query item when there is exactly one …\nReturns a query result when there is exactly one entity …\nReturns a query result when there is exactly one entity …\nRetrieves the <code>AssetSource</code> for the given <code>source</code>.\nReturns span for this grid item, or <code>None</code> if not set.\nReturns the grid line at which the item should start, or …\nUpgrade an <code>AssetId</code> into a strong <code>Handle</code> that will prevent …\nReturns a reference to the <code>SubApp</code> with the given label, if …\nReturns a mutable reference to the <code>SubApp</code> with the given …\nGets the query result for the given <code>World</code> and <code>Entity</code>.\nReturns the query item for the given <code>Entity</code>.\nReturns the unclamped position data of the provided …\nReturns the unclamped analog data of the provided …\nReturns the size required for the vertex buffer in bytes.\nReturns the size of a vertex in bytes.\nThe global transform of the entity.\nGlobal transform of the scene root entity.\nGlobal transform of the scene root entity.\nThe absolute transform of the sprite. This should …\nThe global transform of the node\nThe global transform of the node\nThe global transform of the node\nThe global transform of the node\nThe global transform of the entity.\nCreate a new <code>Curve</code> which is the graph of this one; that …\nCreate a new <code>Curve</code> which is the graph of this one; that …\nCreate a new <code>Curve</code> which is the graph of this one; that …\nCreate a new <code>Curve</code> which is the graph of this one; that …\nReturns the <code>ScheduleGraph</code>.\nThe <code>petgraph</code> data structure that defines the animation …\nCorresponds to the <code>graph</code> field on <code>AnimationGraph</code>.\nReturns a mutable reference to the <code>ScheduleGraph</code>.\nReturns a grey color with the provided lightness from (0.0 …\nReturns a grey color with the provided lightness from (0.0 …\nReturns a grey color with the provided lightness from (0.0 …\nThe green channel. [0.0, 1.0]\nThe green channel. [0.0, 1.0]\nDraw a 2D grid in 3D.\nDraw a grid in 2D.\nDraw a 3D grid of voxel-like cells.\nDefines the size of implicitly created columns. Columns …\nControls whether automatically placed grid items are …\nDefines the size of implicitly created rows. Rows are …\nThe column in which a grid item starts and how many …\nThe row in which a grid item starts and how many rows it …\nDefines the number of columns a grid has and the sizes of …\nDefines the number of rows a grid has and the sizes of …\nGet half the angle of the sector\nGet the half-angle of the segment\nHalf the angle defining the arc\nGet half the distance between the endpoints (half the …\nGet half the length of the chord defined by the sector\nGet half the length of the segment’s base, also known as …\nHalf of the depth of the extrusion\nSize of the horizontal and vertical diagonals of the …\nThe half height of the cylinder\nHalf the length of the line segment. The segment extends …\nHalf the height of the capsule, excluding the hemicircles\nHalf the length of the line segment. The segment extends …\nHalf the height of the capsule, excluding the hemispheres\nRectangle half-size.\nRectangle half-size.\nRectangle half-size.\nHalf of the width and height of the ellipse.\nHalf of the width and height of the rectangle\nHalf of the width and height of the plane\nHalf of the width, height and depth of the cuboid\nCreates a <code>TextureAtlas</code> handle for the given <code>texture</code> handle.\nReturns true if system has deferred buffers.\nReturns <code>true</code> if this interval has a finite end.\nReturns <code>true</code> if this interval has a finite start.\nWhether this mesh has morph targets.\nReturns <code>true</code> if the <code>FilteredResources</code> has read access to …\nReturns <code>true</code> if the <code>FilteredResources</code> has access to the …\nToggles drawing the drop shadow behind the window.\nReturns <code>true</code> if the <code>FilteredResources</code> has write access to …\nIf this is set to <code>true</code>, the camera will use an …\nReturns the height of a 2D image.\nThe window’s client area height in logical pixels.\nRectangle height (max.y - min.y).\nRectangle height (max.y - min.y).\nRectangle height (max.y - min.y).\nThe ideal height of the node. <code>height</code> is used when it is …\nThe height of the cone\nThe height of the frustum\nNew <code>Srgba</code> from a CSS-style hexadecimal string.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the latest prior picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the latest prior picking intersection.\nInformation about the picking intersection.\nCreates a new <code>UiRect</code> where <code>left</code> and <code>right</code> take the given …\nCreates a new <code>Color</code> object storing a <code>Hsla</code> color with an …\nConstruct a new <code>Hsla</code> color from (h, s, l) components, with …\nCreates a new <code>Color</code> object storing a <code>Hsla</code> color.\nCreates a new <code>Color</code> object storing a <code>Hsva</code> color with an …\nConstruct a new <code>Hsva</code> color from (h, s, v) components, with …\nCreates a new <code>Color</code> object storing a <code>Hsva</code> color.\nReturn the hue of this color [0.0, 360.0].\nThe hue channel. [0.0, 360.0]\nThe hue channel. [0.0, 360.0]\nThe hue channel. [0.0, 360.0]\nThe hue channel. [0.0, 360.0]\nThe ‘hue’ channel. [0.0, 360.0]\nCreates a new <code>Color</code> object storing a <code>Hwba</code> color with an …\nConstruct a new <code>Hwba</code> color from (h, s, l) components, with …\nCreates a new <code>Color</code> object storing a <code>Hwba</code> color.\nReturns the <code>AssetId</code> of this <code>Asset</code>.\nReturns the <code>UntypedAssetId</code> for the referenced asset.\nReturns the <code>Entity</code> id of the entity.\nReturns the ID of the current entity.\nReturns the ID of the current entity.\nRetrieves this <code>World</code>’s unique ID\nReturns the ID of the current entity.\nThe unique identifier of the finger.\nReturns an iterator over the <code>AssetId</code> of every <code>Asset</code> stored …\nSuppress warnings and errors that would result from …\nSee <code>App::ignore_ambiguity</code>.\nSuppress warnings and errors that would result from …\nSuppress warnings and errors that would result from …\nList of <code>ComponentId</code>s to ignore when reporting system order …\nIlluminance in lux (lumens per square meter), representing …\nThe image of the node.\nThe image of the node\nHandle to the texture.\nThe image used to render the sprite\nControls how the image is altered to fit within the layout …\nHow the sprite’s image will be scaled.\nThe size of the image in pixels\nShould the window use Input Method Editor?\nSets location of IME candidate box in client area …\nAdd these systems to the provided <code>set</code>.\nAdd these systems to the provided <code>set</code>.\nAdd these systems to the provided <code>set</code>.\nAdd these system sets to the provided <code>set</code>.\nAdd these system sets to the provided <code>set</code>.\nAdd these system sets to the provided <code>set</code>.\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nIncrements the world’s current change tick and returns …\nReturn a transiently unique identifier.\nTexture atlas section index\nRetrieves the vertex <code>indices</code> of the mesh.\nRetrieves the vertex <code>indices</code> of the mesh mutably.\nCreate a new rectangle by expanding it evenly on all sides.\nCreate a new rectangle by expanding it evenly on all sides.\nCreate a new rectangle by expanding it evenly on all sides.\nConstructs an event at the info level.\nCall <code>info!</code> once per call site.\nConstructs a span at the info level.\nInherited visibility of an entity.\nInherited visibility of the scene root entity.\nInherited visibility of the scene root entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nThe inherited visibility of the entity.\nInitializes the given <code>Asset</code> in the <code>App</code> by:\nInitializes the given loader in the <code>App</code>’s <code>AssetServer</code>.\nRegisters <code>GizmoConfigGroup</code> in the app enabling the use of …\nInserts the <code>!Send</code> resource into the app if there is no …\nInitializes a new non-send resource and returns the …\nInserts the <code>Resource</code>, initialized with its default value, …\nSee <code>App::init_resource</code>.\nPushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …\nInitializes a new resource and returns the <code>ComponentId</code> …\nInitializes an empty <code>schedule</code> under the provided <code>label</code>, if …\nSee <code>App::init_schedule</code>.\nInitializes a <code>State</code> with standard starting values.\nSets the initial size of the atlas in pixels.\nInitialize the system.\nInitializes any newly-added systems and conditions, …\nAngle defining the distance from the spot light direction …\nThe inner circle of the annulus\nReturns the inner border radius for each of the node’s …\nGet the inner radius of the torus. For a ring torus, this …\nWhether or not input collection systems should be running.\nGet the radius of the largest circle that can be drawn …\nGet the inradius or apothem of the regular polygon. This …\nInserts <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> replacing old …\nInserts the given <code>asset</code>, identified by the given <code>id</code>. If an …\nAdds a <code>Bundle</code> of components to the entity.\nAdds a <code>Bundle</code> of components to the entity.\nInsert a reflected <code>Component</code> into the entity like <code>insert()</code>.\nInsert a reflected <code>Resource</code> into the world like <code>insert()</code>.\nInserts a labeled schedule into the map.\nSets the data for a vertex attribute (position, normal, …\nPushes a <code>Command</code> to the queue for adding a <code>Bundle</code> type to …\nFor a given batch of (<code>Entity</code>, <code>Bundle</code>) pairs, adds the …\nPushes a <code>Command</code> to the queue for adding a <code>Bundle</code> type to …\nFor a given batch of (<code>Entity</code>, <code>Bundle</code>) pairs, adds the …\nAdds a dynamic component to an entity.\nInserts a dynamic <code>Component</code> into the entity.\nInserts a dynamic <code>Bundle</code> into the entity.\nInserts children at the given index.\nInsert a <code>GizmoConfig</code> into a specific <code>GizmoConfigGroup</code>.\nSimilar to <code>Self::insert</code> but will only insert if the …\nAdds a <code>Bundle</code> of components to the entity without …\nAdds a <code>Bundle</code> of components to the entity without …\nAdds a <code>Bundle</code> of components to the entity without …\nSets the vertex indices of the mesh. They describe how …\nInserts a new <code>!Send</code> resource with the given <code>value</code>. Will …\nInserts the <code>!Send</code> resource into the app, overwriting any …\nInserts a new non-send resource with the given <code>value</code>.\nPushes a <code>Command</code> to the queue for creating entities, if …\nFor a given batch of (<code>Entity</code>, <code>Bundle</code>) pairs, either spawns …\nInserts the <code>Resource</code> into the app, overwriting any …\nSee <code>App::insert_resource</code>.\nPushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …\nInserts a new resource with the given <code>value</code>.\nInserts a new resource with the given <code>value</code>. Will replace …\nInserts a specific <code>State</code> to the current <code>App</code> and overrides …\nInserts a <code>SubApp</code> with the given label.\nReturns the components of an <code>Entity</code> through <code>ComponentInfo</code>.\nCheck that an scene instance spawned previously is ready …\nLuminous power in lumens, representing the amount of light …\nLuminous power in lumens, representing the amount of light …\nScale factor applied to the diffuse and specular light …\nDescribes whether and how the button has been interacted …\nExtract a <code>Distribution</code> whose samples are points of this …\nExtract a <code>Distribution</code> whose samples are points of this …\nExtract a <code>Distribution</code> whose samples are points of this …\nExtract a <code>Distribution</code> whose samples are points of this …\nExtract a <code>Distribution</code> whose samples are points of this …\nReturns an <code>Interned</code> value corresponding to <code>self</code>.\nReturns an <code>Interned</code> value corresponding to <code>self</code>.\nReturns an <code>Interned</code> value corresponding to <code>self</code>.\nStores internal state that isn’t directly accessible.\nGet the internal angle of the regular polygon in degrees.\nGet the internal angle of the regular polygon in radians.\nInterpolates between <code>a</code> and <code>b</code> with  a interpolation factor …\nPerforms a slerp to smoothly interpolate between …\nInterpolate between this value and the <code>other</code> given value …\nA version of <code>interpolate_stable</code> that assigns the result to …\nA version of <code>interpolate_stable</code> that assigns the result to …\nA version of <code>interpolate_stable</code> that assigns the result to …\nA version of <code>interpolate_stable</code> that assigns the result to …\nEvaluates a cubic Bézier curve at a value <code>t</code>, given two …\nGiven <code>start</code> and <code>end</code> values, produce a curve with unlimited …\nBuild a new rectangle formed of the intersection of this …\nBuild a new rectangle formed of the intersection of this …\nBuild a new rectangle formed of the intersection of this …\nCreate an <code>Interval</code> by intersecting this interval with …\nGet the distance to a plane if the ray intersects it\nGet the distance to a plane if the ray intersects it\nThe <code>Interval</code> type for nonempty intervals used by the <code>Curve</code> …\nCreate an <code>Interval</code> with a given <code>start</code> and <code>end</code>. Alias of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the value as a <code>Box&lt;dyn Any&gt;</code>.\nConsumes <code>self</code> and gets access to the component of type <code>T</code> …\nConsumes <code>self</code> and gets access to the component of type <code>T</code> …\nConsumes <code>self</code> and returns untyped read-only reference(s) to\nConsumes <code>self</code> and returns untyped read-only reference(s) to\nConvert into a <code>SystemConfigs</code>.\nDue to lifetime limitations of the <code>Deref</code> trait, this …\nConsume <code>self</code> and return a mutable reference to the …\nConsume <code>self</code> and return a mutable reference to the …\nReturns the reference wrapped by this type. The reference …\nConsume <code>self</code> and return a mutable reference to the …\nReturns the inner item with ownership.\nReturns the inner item with ownership.\nConsumes self and gets mutable access to the component of …\nConsumes <code>self</code> and gets mutable access to the component of …\nConsumes self and gets mutable access to resource of the …\nConsumes <code>self</code> and returns untyped mutable reference(s) to …\nConsumes <code>self</code> and returns untyped mutable reference(s) to …\nConsumes self and gets mutable access to resource with the …\nCasts this type to a boxed, reflected value.\nConsumes <code>self</code> and gets access to the component of type <code>T</code> …\nConsumes <code>self</code> and gets access to the component of type <code>T</code> …\nCasts this type to a boxed, fully-reflected value.\nTurns this value into its corresponding <code>System</code>.\nConverts this instance to its associated <code>SystemSet</code> type.\nReturns this entity’s <code>World</code>, consuming itself.\nReturns an <code>AssetId</code> with <code>Self::INVALID_UUID</code>, which <em>should</em> …\nThe inverse isometry that undoes this one.\nThe inverse isometry that undoes this one.\nReturns the inverse of the rotation. This is also the …\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of a normalized quaternion.\nReturns <code>v</code> normalized to the range <code>[a, b]</code>.\nCompute <code>iso1.inverse() * iso2</code> in a more efficient way for …\nCompute <code>iso1.inverse() * iso2</code> in a more efficient way for …\nReturns the inverse of the scale factor for this node. To …\nTransform a point by rotating and translating it using the …\nTransform a point by rotating and translating it using the …\nInverts the winding of the indices such that all …\nUsed to determine number of IO threads to allocate\nThe index of refraction of the material.\nReturns true if the trait object wraps an object of type …\nReturns true if the trait object wraps an object of type …\nReturns <code>true</code> if the underlying value is of type <code>T</code>, or <code>false</code>\nIf this is set to <code>true</code>, this camera will be rendered to …\nChecks if the triangle is acute, meaning all angles are …\nChecks if the triangle is acute, meaning all angles are …\nReturns <code>true</code> if this value was added after the system last …\nReturns <code>true</code> if this event is <code>AssetEvent::Added</code> and …\nReturns <code>true</code> if the resource was added after the system …\nReturns true if the given type, <code>T</code>, is allowed by the …\nReturns true if the given type is allowed by the filter.\nReturns <code>true</code> if this system set is an <code>AnonymousSet</code>.\nReturns <code>true</code> if this system set is an <code>AnonymousSet</code>.\nReturns <code>true</code> if this system set is an <code>AnonymousSet</code>.\nReturns <code>true</code> if this interval is bounded — that is, if …\nReturns <code>true</code> if this value was added or mutably …\nReturns <code>true</code> if the resource was added or mutably …\nWhether the texture format is compressed or uncompressed\nChecks if the triangle is degenerate, meaning it has zero …\nChecks if the triangle is degenerate, meaning it has zero …\nReturns true if the given type, <code>T</code>, is denied by the filter.\nReturns true if the given type is denied by the filter.\nIndicates whether or not this type is a <em>dynamic</em> type.\nIndicates whether or not this type is a <em>dynamic</em> type.\nIndicates whether or not this type is a <em>dynamic</em> type.\nReturns true if there are zero items in the filter.\nChecks if the query is empty for the given <code>World</code>, where …\nCheck if the node is empty. A node is considered empty if …\nReturns <code>true</code> if there are no assets in this collection.\nReturns <code>true</code> if there are no query items.\nCheck if the rectangle is empty.\nCheck if the rectangle is empty.\nCheck if the rectangle is empty.\nReturns true if there are no events currently stored in …\nReturns <code>true</code> if there are no events available to read.\nReturns <code>true</code> if there are no events available to read.\nReturns <code>true</code> if there are no events available to read.\nEnables and disables all picking features.\nReturns <code>true</code> if <code>self</code> is a <code>AppExit::Error</code>.\nReturns true if the system must be run exclusively.\nReturns <code>true</code> if, and only if, translation, rotation and …\nReturns <code>true</code> if the rotation is neither infinite nor NaN.\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nPerforms <code>is_finite</code> on each element of self, returning a …\nPerforms <code>is_finite</code> on each element of self, returning a …\nPerforms <code>is_finite</code> on each element of self, returning a …\nEnables and disables updating interaction states of …\nIs the alpha component of this color greater than or equal …\nIs the alpha component of this color greater than or equal …\nIs the alpha component of this color greater than or equal …\nIs the alpha component of this color less than or equal to …\nIs the alpha component of this color less than or equal to …\nIs the alpha component of this color less than or equal to …\nIf this is set to <code>false</code> and <code>should_block_lower</code> is set to …\nEnables and disables input collection.\nConvenience method that returns true if the asset has been …\nReturns <code>true</code> if this event is …\nConvenience method that returns true if the asset, all of …\nConvenience method that returns true if the asset and all …\nProduces true if the arc is at least half a circle.\nReturns <code>true</code> if the given <code>id</code> corresponds to an asset that …\nProduces true if the arc is at most half a circle.\nReturns <code>true</code> if this event is <code>AssetEvent::Modified</code> and …\nShould mouse inputs be updated?\nReturns <code>true</code> if the rotation is NaN.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NAN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nReturns <code>true</code> if the rotation is near <code>Rot2::IDENTITY</code>.\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns whether <code>self</code> has a length of <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> of length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nChecks if the triangle is obtuse, meaning one angle is …\nChecks if the triangle is obtuse, meaning one angle is …\nIs this sink paused?\nReturns <code>true</code> if the clock is currently paused.\nReturns true if the animation is currently playing or …\nReturns <code>true</code> if the <code>Plugin</code> has already been added.\nSee <code>App::is_plugin_added</code>.\nReturns <code>true</code> if this event is <code>AssetEvent::Removed</code> and …\nReturns <code>true</code> if a resource of type <code>R</code> exists and was added …\nReturns <code>true</code> if a resource with id <code>component_id</code> exists and …\nReturns <code>true</code> if a resource of type <code>R</code> exists and was …\nReturns <code>true</code> if a resource with id <code>component_id</code> exists and …\nReturns true if the system is <code>Send</code>.\nReturns <code>true</code> if this is a strong handle.\nReturns <code>true</code> if <code>self</code> is a <code>AppExit::Success</code>.\nShould touch inputs be updated?\nIf the plugin can be meaningfully instantiated several …\nIf the plugin can be meaningfully instantiated several …\nIf the plugin can be meaningfully instantiated several …\nReturns <code>true</code> if this event is <code>AssetEvent::Unused</code> and …\nOverflow is visible on both axes\nOverflow is visible on this axis\nReturns <code>true</code> if this is a weak handle.\nComputes both isometries which transforms points from the …\nComputes an <code>Isometry3d</code> which transforms points from the …\nComputes an <code>Isometry3d</code> which transforms points from the …\nReturns an iterator over the items in the filter.\nReturns an iterator over all <code>GizmoConfig</code>s.\nIterator over all buttons that a pointer can have.\nReturns an <code>Iterator</code> over the query results for the given …\nAn iterator visiting every pressed <code>Touch</code> input in …\nReturns an iterator over the <code>AssetId</code> and <code>Asset</code> ref of …\nReturns an <code>Iterator</code> over the read-only query items.\nReturns an iterator over all schedules. Iteration order is …\nIterate over the curve split into <code>subdivisions</code>, sampling …\nIterate over the curve split into <code>subdivisions</code>, sampling …\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an <code>Iterator</code> over all possible combinations of <code>K</code> …\nReturns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …\nReturns an <code>Iterator</code> over all possible combinations of <code>K</code> …\nReturns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …\nReturns an <code>Iterator</code> over all possible combinations of <code>K</code> …\nIterates over all possible combinations of <code>K</code> query items …\nIterates over events that happened since the last “update…\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an <code>Entity</code> iterator of current entities.\nReturns a mutable iterator over all entities in the <code>World</code>.\nReturns an iterator over the values of the reflectable …\nReturns an iterator over the values of the tuple struct’…\nIterate through the <code>ComponentId</code>’s that will be ignored.\nReturns an <code>Iterator</code> over the query items, with the actual …\nGet an iterator over the entities in an instance, once it…\nAn iterator visiting every just canceled <code>Touch</code> input in …\nAn iterator visiting every just pressed <code>Touch</code> input in …\nAn iterator visiting every just released <code>Touch</code> input in …\nReturns an <code>Iterator</code> of <code>Entity</code>s over the leaves of the …\nReturns an <code>Iterator</code> over the query results for the given …\nReturns an <code>Iterator</code> over the read-only query items …\nReturns an <code>Iterator</code> over the read-only query items …\nReturns an <code>Iterator</code> over the read-only query items …\nReturns an iterator over the query items generated from an …\nReturns an iterator over the query items generated from an …\nReturns an <code>Iterator</code> over the query items generated from an …\nReturns an iterator over all <code>GizmoConfig</code>s, by mutable …\nReturns an <code>Iterator</code> over the query results for the given …\nReturns an iterator over the <code>AssetId</code> and mutable <code>Asset</code> ref …\nReturns an <code>Iterator</code> over the query items.\nReturns an iterator over mutable references to all …\nIterate over the curve split into <code>subdivisions</code>, sampling …\nIterate over the curve split into <code>subdivisions</code>, sampling …\nIterates over all resources in the world.\nMutably iterates over all resources in the world.\nA flexible iterator used to sample curves with arbitrary …\nA flexible iterator used to sample curves with arbitrary …\nReturns an <code>Iterator</code> of <code>Entity</code>s over the <code>entity</code>s immediate …\nReturns an <code>Iterator</code> over the query results for the given …\nReturns an <code>Iterator</code> over the query items.\nIterate over the curve split into <code>subdivisions</code>, sampling …\nIterate over the curve split into <code>subdivisions</code>, sampling …\nIterable curves, which sample in the form of an iterator …\nUse this to combine two queries. The data accessed will be …\nReturns a <code>QueryLens</code> that can be used to get a query with …\nUse this to combine two queries. The data accessed will be …\nEquivalent to <code>Self::join</code> but also includes a <code>QueryFilter</code> …\nReturns <code>true</code> if the input corresponding to the <code>id</code> has just …\nReturns <code>true</code> only on the tick the timer reached its …\nReturns <code>true</code> if the <code>input</code> has been pressed during the …\nReturns <code>true</code> if the <code>GamepadButton</code> has been pressed during …\nReturns <code>true</code> if the input corresponding to the <code>id</code> has just …\nReturns <code>true</code> if the <code>input</code> has been released during the …\nReturns <code>true</code> if the <code>GamepadButton</code> has been released during …\nReturns <code>true</code> if the input corresponding to the <code>id</code> has just …\nThe text’s internal alignment. Should not affect its …\nUsed to control how items are distributed.\nUsed to control how each individual item is aligned by …\nUsed to control how the specified item is aligned within …\nGet the <code>TorusKind</code> determined by the minor and major radii.\nThe width of the domain of this segment.\nKnots\nCalculates the extinction coefficient β, from V and Cₜ, …\nCreates a new <code>Color</code> object storing a <code>Laba</code> color with an …\nConstruct a new <code>Laba</code> color from (l, a, b) components, with …\nConstruct a new <code>Oklaba</code> color from (l, a, b) components, …\nCreates a new <code>Color</code> object storing a <code>Laba</code> color.\nGet the <code>InternedScheduleLabel</code> for this <code>Schedule</code>.\nGet the largest side of the triangle.\nWhen called from within an exclusive system (a <code>System</code> that …\nSets <code>World::last_change_tick()</code> to the specified value …\nReturns the change tick recording the time this data was …\nReturns the latest state transition event of type <code>S</code>, if …\nReturns the <code>Instant</code> when <code>Self::update</code> was last called, if …\nGet the surface area of the side of the cylinder, also …\nGet the surface area of the side of the cone, also known …\nThe latest position of the pointer during this drag, used …\nTexture atlas layout handle\nCreates a new <code>Color</code> object storing a <code>Lcha</code> color with an …\nConstruct a new <code>Lcha</code> color from (h, s, l) components, with …\nConstruct a new <code>Oklcha</code> color from (l, c, h) components, …\nCreates a new <code>Color</code> object storing a <code>Lcha</code> color.\nReturn the local left vector (-X).\nEquivalent to <code>-local_x()</code>\nCreates a new <code>UiRect</code> where <code>left</code> takes the given value, and …\nSets the radii for the top left and bottom left corners. …\nPixel padding to the left\nThe value corresponding to the left side of the UI rect.\nThe horizontal position of the left edge of the node.\nLeft ear position relative to the <code>GlobalTransform</code>.\nGet the left-hand end point of the arc\nReturns the left stick as a <code>Vec2</code>\nReturns the number of items in the filter.\nThe number of textures in the <code>TextureAtlasLayout</code>\nReturns the number of assets currently stored in the …\nReturns the number of events currently stored in the event …\nDetermines the number of events available to be read from …\nDetermines the number of events available to be read from …\nDetermines the number of removal events available to be …\nReturns the length of the domain of the parametric curve.\nGet the length of the arc\nComputes the length or norm of the complex number used to …\nGet the length of this interval. Note that the result may …\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes <code>1.0 / self.length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes the squared length or norm of the complex number …\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nConstants for operating with the light units: lumens, and …\nMarks this environment map as a light probe.\nReturn a lighter version of this color. The <code>amount</code> should …\nThe exposure (brightness) level of the lightmap, if …\nThe lightness channel. [0.0, 1.0]\nThe lightness channel. [0.0, 1.5]\nThe lightness channel. [0.0, 1.5]\nThe ‘lightness’ channel. [0.0, 1.0]\nThe ‘lightness’ channel. [0.0, 1.0]\nDraw a line in 3D from <code>start</code> to <code>end</code>.\nDraw a line in 2D from <code>start</code> to <code>end</code>.\nDraw a line in 3D with a color gradient from <code>start</code> to <code>end</code>.\nDraw a line in 2D with a color gradient from <code>start</code> to <code>end</code>.\nDescribe how lines should join\nApply perspective to gizmo lines.\nDetermine the style of gizmo lines.\nLine width specified in pixels.\nCreates a new <code>Color</code> object storing a <code>LinearRgba</code> color with …\nCreates a new <code>Color</code> object storing a <code>LinearRgba</code> color.\nHow the text should linebreak when running out of the …\nDraw a line in 3D made of straight segments between the …\nDraw a line in 2D made of straight segments between the …\nDraw a line in 3D made of straight segments between the …\nDraw a line in 2D made of straight segments between the …\nProcesses the asset in an asynchronous closure.\nBegins loading an <code>Asset</code> of type <code>A</code> stored at <code>path</code>. This …\nBegins loading an <code>Asset</code> of type <code>A</code> stored at <code>path</code> while …\nBegins loading an <code>Asset</code> of type <code>A</code> stored at <code>path</code> while …\nLoad an asset similarly to <code>AssetServer::load</code>.\nLoad an asset similarly to <code>AssetServer::load</code>.\nLoad an asset with settings, similarly to …\nLoad an asset with settings, similarly to …\nLoads all assets from the specified folder recursively. …\nRetrieves the main <code>LoadState</code> of a given asset <code>id</code>.\nLoad an asset without knowing its type. The method returns …\nAsynchronously load an asset that you do not know the type …\nBegins loading an <code>Asset</code> of type <code>A</code> stored at <code>path</code>. The …\nThe transform of the entity.\nGet the unit vector in the local <code>X</code> direction.\nGet the unit vector in the local <code>Y</code> direction.\nGet the unit vector in the local <code>Z</code> direction.\nGets metadata indicating the location where the current …\nGets metadata indicating the location where the current …\nGets metadata indicating the location where the current …\nLogs the components of the entity at the info level.\nThe full logical size of this camera’s <code>RenderTarget</code>, …\nThe rendered logical bounds <code>Rect</code> of the camera. If the …\nThe logical size of this camera’s viewport. If the …\nDraws the longest arc between two points (<code>from</code> and <code>to</code>) …\nDraws the longest arc between two points (<code>from</code> and <code>to</code>) …\nRotates this <code>Transform</code> so that <code>Transform::forward</code> points …\nCreates a left-handed view matrix using a camera position, …\nCreates a right-handed view matrix using a camera …\nRotates this <code>Transform</code> so that <code>Transform::forward</code> points …\nCreates a left-handed view matrix using a camera position, …\nCreates a right-handed view matrix using a camera …\nReturns this <code>Transform</code> with a new rotation so that …\nReturns this <code>Transform</code> with a new rotation so that …\nReturn the luminance of this color (0.0 - 1.0).\nLuminance calculated using the CIE XYZ formula.\nReturns a reference to the main <code>SubApp</code>.\nReturns a mutable reference to the main <code>SubApp</code>.\nThe distance from the center of the torus to the center of …\nReturns the read-only query items for the given array of …\nGets an <code>EntityRef</code> for multiple entities at once.\nGets mutable access to multiple entities at once.\nReturns the query items for the given array of <code>Entity</code>.\nMap <code>Ref</code> to a different type using <code>f</code>.\nCreate a new curve by mapping the values of this curve via …\nCreate a new curve by mapping the values of this curve via …\nCreate a new curve by mapping the values of this curve via …\nCreate a new curve by mapping the values of this curve via …\nPass the output of this system into the passed function <code>f</code>, …\nPass the output of this system into the passed function <code>f</code>, …\nPass the output of this system into the passed function <code>f</code>, …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nReturns a vector containing each element of <code>self</code> modified …\nMap an entity to another entity\nThis <code>UnevenSampleAutoCurve</code>, but with the sample times …\nThis <code>UnevenSampleAutoCurve</code>, but with the sample times …\nMaps to an inner value by applying a function to the …\nMaps to an inner value by applying a function to the …\nMaps to an inner value by applying a function to the …\nThe amount of space around a node outside its border.\nWidth of the margin on each edge of the visual box in …\nA bitfield specifying the mask groups that this node and …\nCorresponds to the <code>mask</code> field on <code>AnimationGraphNode</code>.\nThe mask groups that each animation target (bone) belongs …\nCorresponds to the <code>mask_groups</code> field on <code>AnimationGraph</code>.\nReturns the archetypes matched by this query.\nReturns the tables matched by this query.\nReturns <code>true</code> if this query matches a set of components. …\nThe <code>UiMaterial</code> used to render the node.\nAll materials loaded from the glTF file.\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nThe maximum corner point of the rect.\nThe maximum corner point of the rect.\nThe maximum corner point of the rect.\nCreate a grid track which is automatically sized to fit …\nCreate a repeating set of grid tracks with max-content size\nDefines the maximum scale of the 4 corner slices (default …\nReturns the maximum amount of time that can be added to …\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nThe maximum height the window can have.\nThe maximum height of the node. <code>max_height</code> is used if it …\nIn how many layers to split the depth maps for parallax …\nSets the max size of the atlas in pixels.\nIf the number of physical cores is greater than …\nThe maximum width the window can have.\nThe maximum width of the node. <code>max_width</code> is used if it is …\nMerges the <code>Mesh</code> data of <code>other</code> with <code>self</code>. The attributes …\nCreates a <code>Mesh</code> for a shape.\nAll meshes loaded from the glTF file.\nHow/If asset meta files should be checked.\nThe “meta transform” for the strong handle. This will …\nHow “metallic” the material appears, within <code>[0.0, 1.0]</code>.\nThe UV channel to use for the …\nMetallic and roughness maps, stored as a single texture.\nGet the midpoint of the arc\nCalculates the midpoint between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint between <code>self</code> and <code>rhs</code>.\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nThe minimum corner point of the rect.\nThe minimum corner point of the rect.\nThe minimum corner point of the rect.\nCreate a grid track which is automatically sized to fit …\nCreate a repeating set of grid tracks with min-content size\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nThe minimum height the window can have.\nThe minimum height of the node. <code>min_height</code> is used if it …\nIf the number of physical cores is less than …\nThe minimum width the window can have.\nThe minimum width of the node. <code>min_width</code> is used if it is …\nCreate a <code>minmax()</code> grid track.\nCreate a repeating set of <code>minmax()</code> grid track\nThe radius of the tube of the torus\nLinearly interpolate between this and another color, by …\nLinearly interpolate between this and another color, by …\nLinearly interpolate between this and another color, by …\nLinearly interpolate between this and another color, by …\nReturns the mode of the timer.\nReturns the <code>AssetServerMode</code> this server is currently in.\nThe desired playback behavior.\nWhich fullscreen or windowing mode should be used.\nThe <code>AssetMode</code> to use for this server.\nReturns the path to the module the type is in, or <code>None</code> if …\nReturns the path to the module the type is in, or <code>None</code> if …\nReturns the path to the module the type is in, or <code>None</code> if …\nGets a list of all morph target names, if they exist.\nEnables click-and-drag behavior for the entire window, not …\nMoves towards <code>rhs</code> based on the value <code>d</code>.\nMoves towards <code>rhs</code> based on the value <code>d</code>.\nMoves towards <code>rhs</code> based on the value <code>d</code>.\nIf this is enabled, a previous camera exists that shares …\nRotates a <code>Vec2</code> by a <code>Rot2</code>.\nRotates the <code>Dir2</code> using a <code>Rot2</code>.\nRotates the <code>Dir3</code> using a <code>Quat</code>.\nMultiplies two quaternions. If they each represent a …\nRotates the <code>Dir3A</code> using a <code>Quat</code>.\nMultiplies a quaternion and a 3D vector, returning the …\nMultiplies a quaternion by a scalar value.\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nMultiplies two quaternions. If they each represent a …\nMultiplies two 2x2 matrices.\nMultiplies two 3x3 matrices.\nMultiplies two 4x4 matrices.\nMultiplies two quaternions. If they each represent a …\nMultiplies a 3x3 matrix by a scalar.\nMultiplies a 2x2 matrix by a scalar.\nMultiplies a 4x4 matrix by a scalar.\nMultiplies <code>self</code> with <code>transform</code> component by component, …\nMultiplies <code>self</code> with <code>transform</code> component by component, …\nTransforms a 2D vector.\nTransforms a 3D vector.\nMultiplies a quaternion and a 3D vector, returning the …\nTransforms a <code>Vec3A</code>.\nMultiplies a quaternion and a 3D vector, returning the …\nTransforms a 4D vector.\nAdds <code>&amp;mut T</code> to the <code>FilteredAccess</code> of self.\nUpdates the name of the entity in place.\nReturns the system’s name.\nConfigures a name for the <code>Plugin</code> which is primarily used …\nConfigures a name for the <code>Plugin</code> which is primarily used …\nConfigures a name for the <code>Plugin</code> which is primarily used …\nConfigures a name for the <code>PluginGroup</code> which is primarily …\nConfigures a name for the <code>PluginGroup</code> which is primarily …\nConfigures a name for the <code>PluginGroup</code> which is primarily …\nA <code>Name</code> that the entity might have that is displayed if …\nStores the application ID (on <strong><code>Wayland</code></strong>), <code>WM_CLASS</code> (on <strong><code>X11</code></strong>) …\nReturns the name of the field with index <code>index</code>.\nNamed animations loaded from the glTF file.\nNamed materials loaded from the glTF file.\nNamed meshes loaded from the glTF file.\nNamed nodes loaded from the glTF file.\nNamed scenes loaded from the glTF file.\nNamed skins loaded from the glTF file.\nReturns a new run condition that only returns <code>false</code> if …\nReturns a new run condition that only returns <code>false</code> if …\nReturns a new run condition that only returns <code>false</code> if …\nGiven a position in Normalized Device Coordinates, use the …\nThe distance from the camera in world units of the viewing …\nThe distance of the near clipping plane in world units.\nThis ray cast should check all entities whose AABB …\nCreates a new <code>App</code> with some default structure to enable …\nCreates a new <code>Name</code> from any string-like type.\nReturns a new <code>DescendantIter</code>.\nReturns a new <code>DescendantDepthFirstIter</code>.\nReturns a default, empty <code>SubApp</code>.\nReturns a new <code>AncestorIter</code>.\nCreate a new <code>Ref</code> using provided values.\nCreates a new change-detection enabled smart pointer. In …\nConstructs a new <code>Time&lt;Real&gt;</code> instance with a specific …\nCreates a new <code>SpatialListener</code> component.\nCreate a new <code>GlobalVolume</code> with the given volume.\nCreates a new timer with a given duration.\nCreates a new state with a specific value.\nCreates a new image from raw binary data and the …\nConstruct a new <code>Pointer&lt;E&gt;</code> event.\nCreates a new <code>AudioPlayer</code> with the given …\nCreates a new scene with the given world.\nCreate an <code>AnimatableCurve</code> (and thus an <code>AnimationCurve</code>) …\nCreates a new note\nCreate a new <code>AnimatableKeyframeCurve</code> from the given …\nMakes a new <code>TextLayout</code>.\nMakes a new text span component.\nConstruct a new mesh. You need to provide a …\nCreates a new <code>Observer</code>, which defaults to a “global” …\nCreates a new trigger for the given event and observer …\nCreates a new animation graph with a root node and no …\nConstruct a new <code>Hsla</code> color from components.\nMakes a new 2d text component.\nConstruct a new <code>Hsva</code> color from components.\nCreates a new builder with the accesses required for <code>Q</code> and …\nConstruct a new <code>Hwba</code> color from components.\nConstruct a new <code>Laba</code> color from components.\nConstruct a new <code>Lcha</code> color from components.\nCreate a new <code>ImageNode</code> with the given texture.\nCreates a new <code>AnimationTransitions</code> component, ready to be …\nCreate a new <code>VariableCurve</code> from an animation curve.\nConstruct a new <code>LinearRgba</code> color from components.\nConstruct a new <code>Oklaba</code> color from components.\nCreates a new <code>WindowPosition</code> at a position.\nMakes a new text component.\nConstruct a new <code>Oklcha</code> color from components.\nConstruct a new <code>Srgba</code> color from components.\nConstruct a new <code>Xyza</code> color from components.\nCreates a new <code>QueryState</code> from a given <code>World</code> and inherits …\nCreates a new <code>UiRect</code> from the values specified.\nCreate a new cubic Bezier curve from sets of control …\nCreate a new Hermite curve from sets of control points.\nBuild a new Cardinal spline.\nBuild a new B-Spline.\nBuild a Non-Uniform Rational B-Spline.\nConstructs an empty <code>Schedule</code>.\nCreate a direction from a finite, nonzero <code>Vec2</code>, …\nCreate a direction from a finite, nonzero <code>Vec3</code>, …\nCreate a direction from a finite, nonzero <code>Vec3A</code>, …\nCreate a two-dimensional isometry from a rotation and a …\nCreate a three-dimensional isometry from a rotation and a …\nCreate a new <code>Circle</code> from a <code>radius</code>\nCreate a new instance of <code>AssetServer</code>. If <code>watch_for_changes</code> …\nCreate a new <code>Arc2d</code> from a <code>radius</code> and a <code>half_angle</code>\nCreates a new light probe component.\nCreate a new <code>CircularSector</code> from a <code>radius</code> and an <code>angle</code>\nCreate a new <code>CircularSegment</code> from a <code>radius</code>, and an <code>angle</code>\nCreate a new <code>Ellipse</code> from half of its width and height.\nReturns a new <code>Commands</code> instance from a <code>CommandQueue</code> and a …\nCreate a new <code>Annulus</code> from the radii of the inner and outer …\nCreate a new <code>Rhombus</code> from a vertical and horizontal …\nCreate a new <code>Plane2d</code> from a normal\nCreate a new outline\nCreate a new <code>Segment2d</code> from a direction and full length of …\nCreate a new <code>Polyline2d</code> from its vertices\nCreate a new <code>BoxedPolyline2d</code> from its vertices\nCreate a new <code>Triangle2d</code> from points <code>a</code>, <code>b</code>, and <code>c</code>\nCreate a new <code>Rectangle</code> from a full width and height\nCreate a new <code>Polygon</code> from its vertices\nCreate a <code>ConvexPolygon</code> from its <code>vertices</code>.\nCreate a new <code>BoxedPolygon</code> from its vertices\nCreate a new <code>RegularPolygon</code> from the radius of the …\nCreate a new <code>Capsule2d</code> from a radius and length\nCreate a new <code>Sphere</code> from a <code>radius</code>\nCreate a new <code>Plane3d</code> from a normal and a half size\nCreate a new <code>InfinitePlane3d</code> from a normal\nCreate a new <code>Segment3d</code> from a direction and full length of …\nCreate a new <code>Polyline3d</code> from its vertices\nCreate a new <code>BoxedPolyline3d</code> from its vertices\nCreate a new <code>Cuboid</code> from a full x, y, and z length\nCreate a new <code>Cylinder</code> from a radius and full height\nCreate a new <code>Capsule3d</code> from a radius and length\nCreate a new <code>Cone</code> from a radius and height.\nCreates a new empty <code>World</code>.\nCreate a new <code>Torus</code> from an inner and outer radius.\nCreate a new <code>Triangle3d</code> from points <code>a</code>, <code>b</code>, and <code>c</code>.\nCreate a new <code>Tetrahedron</code> from points <code>a</code>, <code>b</code>, <code>c</code> and <code>d</code>.\nCreate a new <code>Extrusion&lt;T&gt;</code> from a given <code>base_shape</code> and <code>depth</code>\nCreate a new <code>Ray2d</code> from a given origin and direction\nCreate a new <code>Ray3d</code> from a given origin and direction\nCreate a new rectangle from two corner points.\nCreate a new rectangle from two corner points.\nCreate a new rectangle from two corner points.\nCreate a constant curve, which has the given <code>domain</code> and …\nCreate a new curve with the given <code>domain</code> from the given …\nGiven a <code>start</code> and <code>end</code> value, create a curve parametrized …\nCreate a new <code>Interval</code> with the specified <code>start</code> and <code>end</code>. …\nCreate a new <code>SampleCurve</code> using the specified <code>interpolation</code> …\nCreate a new <code>SampleCurve</code> using type-inferred interpolation …\nCreate a new <code>UnevenSampleCurve</code> using the provided …\nCreate a new <code>UnevenSampleAutoCurve</code> from a given set of …\nCreate a custom implementation of <code>ReflectComponent</code>.\nCreate a custom implementation of <code>ReflectFromWorld</code>.\nCreate a custom implementation of <code>ReflectResource</code>.\nConstructs an empty <code>Schedules</code> with zero initial capacity.\nCreates a new vector mask.\nCreates a new vector mask.\nCreates a new vector mask.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreate a direction from a finite, nonzero <code>Vec2</code>, …\nCreate a direction from a finite, nonzero <code>Vec3</code>, …\nCreate a direction from a finite, nonzero <code>Vec3A</code>, …\nUpdate the current <code>QueryState</code> with information from the …\nConstruct a cubic Bezier curve for animation easing, with …\nBuild a new Catmull-Rom spline, the special case of a …\nCreate a new empty layout with custom <code>dimensions</code>\nCreates a new image from raw binary data and the …\nReturns a new <code>Commands</code> instance from a <code>CommandQueue</code> and an …\nCreates a new instance of <code>AnimatedField</code>. This operates …\nCreate a <code>Dir2</code> from a <code>Vec2</code> that is already normalized.\nCreate a <code>Dir3</code> from a <code>Vec3</code> that is already normalized.\nCreate a <code>Dir3A</code> from a <code>Vec3A</code> that is already normalized.\nCreate a <code>ConvexPolygon</code> from its <code>vertices</code>, without checks. …\nCreate a new clock from context with <code>Self::delta</code> and …\nCreate an orthographic projection camera with a custom <code>Z</code> …\nMakes a new <code>TextLayout</code> with the specified <code>JustifyText</code>.\nMakes a new <code>TextLayout</code> with the specified <code>LineBreak</code>.\nCreate a new instance of <code>AssetServer</code>. If <code>watch_for_changes</code> …\nMakes a new <code>TextLayout</code> with soft wrapping disabled. Hard …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nControls the layout (size and position) of the node and …\nControls the layout (size and position) of the node and …\nControls the layout (size and position) of the node and …\nControls the layout (size and position) of the node and …\nAnimation node data specific to the type of node (clip, …\nCorresponds to the <code>node_type</code> field on <code>AnimationGraphNode</code>.\nReturns an iterator over the <code>AnimationGraphNode</code>s in this …\nAll nodes loaded from the glTF file.\nGets an immutable reference to the non-send resource of …\nGets a mutable reference to the non-send resource of the …\nReturns a new run condition that only returns <code>true</code> if both …\nReturns a new run condition that only returns <code>true</code> if both …\nReturns a new run condition that only returns <code>true</code> if both …\nGet the normal of the triangle in the direction of the …\nThe normal of the plane. The plane will be placed …\nThe normal of the plane. The plane will be placed …\nThe normal of the plane. The plane will be placed …\nThe UV channel to use for the …\nUsed to fake the lighting of bumps and dents on a material.\nBuild a new rectangle from this one with its coordinates …\nReturns <code>self</code> with a length of <code>1.0</code>.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nNormalize joint weights so they sum to 1.\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nGenerates a <code>Condition</code> that inverses the result of passed …\nCreates an <code>Observer</code> listening for a trigger of type <code>T</code> that …\nCreates an <code>Observer</code> listening for events of type <code>E</code> …\nReturns the <code>Entity</code> that observed the triggered event. This …\nThe UV channel to use for the …\nSpecifies the level of exposure to ambient light.\noffset of the slice\nThe amount of space between a node’s outline the edge of …\nHow far across the node is scrolled, in logical pixels. (0 …\nHow far down the node is scrolled, in logical pixels. (0 = …\nCreates a new <code>Color</code> object storing a <code>Oklaba</code> color with an …\nCreates a new <code>Color</code> object storing a <code>Oklaba</code> color.\nCreates a new <code>Color</code> object storing a <code>Oklcha</code> color with an …\nCreates a new <code>Color</code> object storing a <code>Oklcha</code> color.\nReturns the index of the oldest event stored in the event …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if there …\nCall some expression only once per call site.\nReturns if this material should be rendered by the …\nReturns if this material should be rendered by the …\nReturns if this material should be rendered by the …\nRender method used for opaque materials. (Where <code>alpha_mode</code> …\nGenerates open uniform knots, which makes the ends of the …\nThis mod re-exports the correct versions of floating-point …\nTakes a function over mutable access to a <code>QueryBuilder</code>, …\nTakes a function over mutable access to a <code>QueryBuilder</code>, …\nReturns a new run condition that returns <code>true</code> if either …\nReturns a new run condition that returns <code>true</code> if either …\nReturns a new run condition that returns <code>true</code> if either …\nReturns a new run condition that returns <code>true</code> if either …\nReturns a new run condition that returns <code>true</code> if either …\nReturns a new run condition that returns <code>true</code> if either …\nCameras with a higher order are rendered later, and thus …\nThe origin of the ray.\nThe origin of the ray.\nCreates a left-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nAngle defining the distance from the spot light direction …\nThe outer circle of the annulus\nGet the outer radius of the torus. This corresponds to the …\nReturns the amount of space between the outline and the …\nReturns the border radius for each corner of the outline …\nReturns the thickness of the UI node’s outline in …\nReturns the size of the node when including its outline.\nThe <code>CameraOutputMode</code> for this camera.\nWhether overflowing content should be displayed or clipped.\nHow the bounds of clipped content should be determined\nReturns the amount of overstep time accumulated toward new …\nReturns the amount of overstep time accumulated toward new …\nReturns the amount of overstep time accumulated toward new …\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 3rd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 3rd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 3rd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 3rd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 3rd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 4th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 4th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 4th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 4th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 5th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 5th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 5th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 6th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 6th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 7th parameter in this <code>ParamSet</code>…\nSets the amount of padding in pixels to add between the …\nReturns the thickness of the node’s padding on each edge …\nThe amount of space between the edges of a node and its …\nClip any content that overflows outside the padding box\nReturns a parallel iterator over the query results for the …\nReturns a parallel iterator over the query results for the …\nReturns a parallel iterator over the query results for the …\nReturns a parallel iterator over the query results for the …\nReturns a parallel iterator over the events this …\nReturns a parallel iterator over the events this …\nHow deep the offset introduced by the depth map should be.\nWhich parallax mapping method to use.\nReturns the parent <code>Entity</code> of the given <code>entity</code>, if any.\nParent entity to add the child to.\nReturns the parent entity.\nReturns a statically typed reference to the value …\nReturns a statically typed reference to the value …\nReturns a statically typed reference to the value …\nReturns the path if this is (1) a strong handle and (2) …\nReturns the path if this is (1) a strong handle and (2) …\nReturns a statically typed mutable reference to the value …\nReturns a statically typed mutable reference to the value …\nReturns a statically typed mutable reference to the value …\nPauses playback of this sink.\nStops the clock, preventing it from advancing until …\nPauses the Timer. Disables the ticking of the timer.\nResume all playing animations.\nHelper to start in a paused state.\nReturns <code>true</code> if the timer is paused.\nCreate the sink in paused state. Useful for “deferred …\nCreates a new <code>UiRect</code> from the values specified in …\nCreate a grid track with a percentage size\nCreate a repeating set of grid tracks with a percentage …\nSets the radii to percentage values.\nLinear perceptual roughness, clamped to <code>[0.089, 1.0]</code> in …\nGet the perimeter of the shape\nGet the perimeter or circumference of the circle\nGet an approximation for the perimeter or circumference of …\nGet the perimeter or circumference of the annulus, which …\nGet the perimeter of the rhombus\nGet the perimeter of the triangle\nGet the perimeter of the rectangle\nGet the perimeter of the regular polygon. This is the sum …\nGet the perimeter of the capsule\nGet the perimeter of the triangle.\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nCreates an infinite left-handed perspective projection …\nCreates an infinite reverse left-handed perspective …\nCreates an infinite reverse right-handed perspective …\nCreates an infinite right-handed perspective projection …\nCreates a left-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with …\nThe phase of the touch input.\nThe cursor position in this window in physical pixels.\nThe window’s client area height in physical pixels.\nThe window’s client size in physical pixels\nThe full physical size of this camera’s <code>RenderTarget</code> (in …\nThe rendered physical bounds <code>URect</code> of the camera. If the …\nThe physical size of this camera’s viewport (in physical …\nThe window’s client area width in physical pixels.\nCreate a new <code>Curve</code> chaining the original curve with its …\nCreate a new <code>Curve</code> chaining the original curve with its …\nCreate a new <code>Curve</code> chaining the original curve with its …\nCreate a new <code>Curve</code> chaining the original curve with its …\nPass the output of this system <code>A</code> into a second system <code>B</code>, …\nPass the output of this system <code>A</code> into a second system <code>B</code>, …\nPass the output of this system <code>A</code> into a second system <code>B</code>, …\nGet a reference to the data bytes where a specific pixel’…\nGet a mutable reference to the data bytes where a specific …\nCompute the byte offset where the data of a specific pixel …\nResumes playback of a paused sink.\nPlays a new animation on the given <code>AnimationPlayer</code>, fading …\nStart playing an animation, unless the requested animation …\nIterates through all animations that this <code>AnimationPlayer</code> …\nIterates through all animations that this <code>AnimationPlayer</code> …\nReturns the state of all plugins. This is usually called …\nReturn the state of plugins.\nGet the position of the first point on the line segment\nGet the position of the first point on the line segment\nGet the position of the second point on the line segment\nGet the position of the second point on the line segment\n<code>Color</code> to use for drawing a <code>PointLight</code> gizmo when …\nPressing and dragging state, organized by pointer and …\nDispatches interaction events to the target entities.\nThe pointer that triggered this event\nThe location of the pointer during this event\nInstantaneous position of a point at parametric value <code>t</code>.\nCompute the position of a point on the cubic curve at the …\nInstantaneous position of a point at parametric value <code>t</code> in …\nCompute the position of a point on the curve at the …\nThe cursor position in logical pixels.\nWhere the window moved to in physical pixels.\nWhere the window should be placed.\nThe position of the finger on the touchscreen.\nWhether a node should be laid out in-flow with, or …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nControls if the prepass is enabled for the Material. For …\nReturns this material’s prepass fragment shader. If …\nReturns this material’s prepass fragment shader. If …\nReturns this material’s prepass fragment shader. If …\nReturns this material’s prepass vertex shader. If …\nReturns this material’s prepass vertex shader. If …\nReturns this material’s prepass vertex shader. If …\nPreregisters a loader for the given extensions, that will …\nPre-register a loader that will later be added.\nWhat presentation mode to give the window.\nRegisters a press for the given <code>input</code>.\nReturns <code>true</code> if the <code>input</code> has been pressed.\nReturns <code>true</code> if the <code>GamepadButton</code> has been pressed.\nStores the press location and start time for each button …\nWhether or not to stop events from propagating out of the …\nSettings for the primary window.\nRenders a 2D primitive with its associated details.\nRenders a 3D primitive with its associated details.\nReturns the topology of the mesh.\nPrints the names of the components and resources with <code>info</code>\nThe default file path to use (relative to the project …\nReturns the USB product ID as assigned by the vendor, if …\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nInjects the <code>point</code> into this plane transformed with the …\nTransforms the given 3D vector as a point, applying …\nTransforms the given <code>Vec3A</code> as a 3D point, applying …\nEnables or disables event propagation, allowing the same …\nThe property selector, which defines what component to …\nPushes the current value of the blend register onto the …\nAdds a segment to the curve\nAdds a segment to the curve.\nCreates a new <code>UiRect</code> from the values specified in logical …\nCreate a grid track with a fixed pixel size\nCreate a repeating set of grid tracks with a fixed pixel …\nSets the radii to logical pixel values.\nReturns <code>QueryState</code> for the given <code>QueryData</code>, which is used …\nReturns <code>QueryState</code> for the given filtered <code>QueryData</code>, which …\nPushes a generic <code>Command</code> to the command queue.\nPushes an <code>EntityCommand</code> to the queue, which will get …\nEnqueues any <code>Deferred</code> system parameters (or other system …\nCreates a <code>Rot2</code> from a counterclockwise angle in radians.\nGet the radius of the sector\nGet the radius of the segment\nSimulates a light source coming from a spherical volume …\nSimulates a light source coming from a spherical volume …\nThe radius of the circle\nThe radius of the circle\nThe radius of the capsule\nThe radius of the sphere\nThe radius of the cylinder\nThe radius of the capsule\nThe radius of the base\nThe radius of the base of the frustum\nThe radius of the top of the frustum\nGet an upper bound of the radius from the given <code>extents</code>.\nCut-off for the light’s area-of-effect. Fragments …\nRange in meters that this light illuminates.\nDraw a line in 3D from <code>start</code> to <code>start + vector</code>.\nDraw a line in 2D from <code>start</code> to <code>start + vector</code>.\nDetermines how mesh picking should consider <code>Visibility</code>. …\nDraw a line in 3D with a color gradient from <code>start</code> to …\nDraw a line in 2D with a color gradient from <code>start</code> to …\nCreates a new <code>Color</code> object storing a <code>LinearRgba</code> color.\nIterates over the events this <code>EventMutator</code> has not seen …\nIterates over the events this <code>EventReader</code> has not seen …\nIterates over the events this <code>RemovedComponents</code> has not …\nReads the current change tick of this world.\nLike <code>read</code>, except also returning the <code>EventId</code> of the events.\nLike <code>read</code>, except also returning the <code>EventId</code> of the events.\nLike <code>read</code>, except also returning the <code>EventId</code> of the events.\nFetch underlying <code>EventCursor</code>.\nFetch underlying <code>EventCursor</code> mutably.\nDestructures to get a mutable reference to the <code>EventCursor</code> …\nReturns whether the material would like to read from …\nReturns whether the material would like to read from …\nReturns whether the material would like to read from …\nHas the plugin finished its setup? This can be useful for …\nHas the plugin finished its setup? This can be useful for …\nHas the plugin finished its setup? This can be useful for …\nReturns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …\nReturns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …\nReturns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …\nReturns a <code>Commands</code> with a smaller lifetime. This is useful …\nReturns an <code>EntityCommands</code> with a smaller lifetime. This is …\nReturns a new <code>Query</code> reborrowing the access from this one. …\nReturns a <code>Deferred&lt;T&gt;</code> with a smaller lifetime. This is …\nReturns a new instance with a shorter lifetime. This is …\nReturns a new instance with a shorter lifetime. This is …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nSets whether this window recognizes <code>DoubleTapGesture</code>\nSets whether this window recognizes <code>PanGesture</code>, with a …\nSets whether this window recognizes <code>PinchGesture</code>\nSets whether this window recognizes <code>RotationGesture</code>\nDraw a wireframe rectangle in 3D with the given <code>isometry</code> …\nAn optional rectangle representing the region of the image …\nAn optional rectangle representing the region of the sprite…\nDraw a wireframe rectangle in 2D with the given <code>isometry</code> …\nCreates a new border as a rectangle, with:\nRetrieves the  <code>RecursiveDependencyLoadState</code> of a given …\nThe red channel. [0.0, 1.0]\nThe red channel. [0.0, 1.0]\nAdds <code>&amp;T</code> to the <code>FilteredAccess</code> of self.\nGets the value of this <code>States</code> type from the world as a …\nGets the value of this <code>Component</code> type from the entity as a …\nGets the value of this <code>Resource</code> type from the world as a …\nReturns the reflection vector for a given incident vector …\nReturns the reflection vector for a given incident vector …\nReturns the reflection vector for a given incident vector …\nGets a reference to the specified element on the given …\nGets a mutable reference to the specified element on the …\nReturns a hash of the value (which includes the type).\nReturns a hash of the value (which includes the type).\nReturns a hash of the value (which includes the type).\nReturns a zero-sized enumeration of “kinds” of type.\nReturns a zero-sized enumeration of “kinds” of type.\nReturns a zero-sized enumeration of “kinds” of type.\nReturns a mutable enumeration of “kinds” of type.\nGets the value of this <code>Component</code> type from the entity as a …\nGets the value of this <code>Resource</code> type from the world as a …\nReturns an owned enumeration of “kinds” of type.\nReturns a “partial equality” comparison result.\nReturns a “partial equality” comparison result.\nReturns a “partial equality” comparison result.\nReturns a reference to the value specified by <code>path</code>.\nReturns a reference to the value specified by <code>path</code>.\nReturns a reference to the value specified by <code>path</code>.\nReturns a mutable reference to the value specified by <code>path</code>.\nReturns a mutable reference to the value specified by <code>path</code>.\nReturns a mutable reference to the value specified by <code>path</code>.\nReturns an immutable enumeration of “kinds” of type.\nA macro that automatically generates type data for traits, …\nSafety\nSafety\nSpecular intensity for non-metals on a linear scale of …\nReturns the refraction direction for a given incident …\nReturns the refraction direction for a given incident …\nReturns the refraction direction for a given incident …\nRegisters a new <code>Asset</code> type. <code>Asset</code> types must be registered …\nRegisters the given <code>loader</code> in the <code>App</code>’s <code>AssetServer</code>.\nRegisters the given <code>processor</code> in the <code>App</code>’s <code>AssetProcessor</code>…\nRegisters the asset type <code>T</code> using <code>[App::register]</code>, and adds …\nRegisters the given <code>AssetSourceBuilder</code> with the given <code>id</code>.\nSimilar to <code>Self::register_system</code>, but allows passing in a …\nRegisters all of the components in the given <code>Bundle</code> and …\nRegisters a new <code>Component</code> type and returns the <code>ComponentId</code> …\nRegister the type of this <code>Component</code> in <code>World</code>, returning …\nReturns a mutable reference to the <code>ComponentHooks</code> for a …\nCalled when registering this component, allowing mutable …\nCalled when registering this component, allowing mutable …\nCalled when registering this component, allowing mutable …\nReturns a mutable reference to the <code>ComponentHooks</code> for a …\nRegisters a new <code>Component</code> type and returns the <code>ComponentId</code> …\nThis function sets up systems that compute the state …\nThis function sets up systems that compute the state …\nThis function sets up systems that compute the state …\nSets up the systems needed to compute <code>T</code> whenever any <code>State</code> …\nRegisters a new <code>AssetLoader</code>. <code>AssetLoader</code>s must be …\nRegisters components that are required by the components …\nRegisters the given component <code>R</code> as a required component …\nRegisters the given component <code>R</code> as a required component …\nRegisters required components.\nRegisters required components.\nRegisters required components.\nRegisters the given component <code>R</code> as a required component …\nRegisters the given component <code>R</code> as a required component …\nRegisters a new <code>Resource</code> type and returns the <code>ComponentId</code> …\nRegister the type of this <code>Resource</code> in <code>World</code>, returning the …\nRegisters a new <code>Resource</code> type and returns the <code>ComponentId</code> …\nThis function sets up systems that compute the state …\nThis function sets up systems that compute the state …\nThis function sets up systems that compute the state …\nSets up the systems needed to compute whether <code>T</code> exists …\nRegisters a system and returns a <code>SystemId</code> so it can later …\nSee <code>App::register_system</code>.\nRegisters a system and returns a <code>SystemId</code> so it can later …\nRegisters a system and returns a <code>SystemId</code> so it can later …\nRegisters a system or returns its cached <code>SystemId</code>.\nRegisters the type <code>T</code> in the <code>AppTypeRegistry</code> resource, …\nSee <code>App::register_type</code>.\nAssociates type data <code>D</code> with type <code>T</code> in the <code>AppTypeRegistry</code> …\nSee <code>App::register_type_data</code>.\nRegisters the state type <code>T</code> using <code>App::register_type</code>, and …\nRegisters the state type <code>T</code> using <code>App::register_type</code>, and …\nChanges the <code>size</code>, asserting that the total number of data …\nTakes a 2D image containing vertically stacked images of …\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the speed the clock advances relative to your …\nReturns the speed the clock advances relative to your …\nRegisters a release for the given <code>input</code>.\nRegister a release for a given touch input.\nRegisters a release for all currently pressed inputs.\nRegisters a release for all currently pressed touch inputs.\nKicks off a reload of the asset stored at the given path. …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the remaining time using Duration\nReturns the remaining time in seconds\nRemap <code>self</code> from the input range to the output range.\nRemoves the position data of the <code>input_device</code>, returning …\nRemoves (and returns) the <code>Asset</code> with the given <code>id</code>, if it …\nRemoves a <code>Bundle</code> of components from the entity.\nRemoves any components in the <code>Bundle</code> from the entity.\nRemoves this <code>Component</code> type from the entity. Does nothing …\nRemoves this <code>Resource</code> type from the world. Does nothing if …\nRemoves the schedule corresponding to the <code>label</code> from the …\nRemoves the data for a vertex attribute\nRemoves a component from the entity.\nRemoves a dynamic <code>Component</code> from the entity if it exists.\nRemoves the given children\nRemoves an edge between <code>from</code> and <code>to</code> if it exists.\nDespawns all entities with no components.\nRemoves the (schedule, label) pair corresponding to the …\nRemoves the vertex <code>indices</code> from the mesh and returns them.\nUnmasks the mask groups specified by the given <code>mask</code> …\nUnmasks the single mask group specified by <code>group</code>.\nRemoves the resource of a given type, if it exists. …\nRemoves a <code>!Send</code> resource from the world and returns it, if …\nRemoves the <code>Parent</code> of this entity.\nMake this entity parentless while preserving this entity’…\nPushes a <code>Command</code> to the queue for removing a <code>Resource</code> from …\nRemoves the resource of a given type and returns it, if it …\nRemoves the resource of a given type, if it exists. …\nRemoves the <code>SubApp</code> with the given label, if it exists.\nRemoves (and returns) the <code>Asset</code> with the given <code>id</code>, if it …\nRemoves all components in the <code>Bundle</code> components and remove …\nRemoves all components in the <code>Bundle</code> and remove all …\nReturns an iterator of entities that had components of …\nRetrieves this world’s <code>RemovedComponentEvents</code> collection\nReturns an iterator of entities that had components with …\nDescribes which rendering layers gizmos will be rendered …\nCreate a new <code>Curve</code> whose parameter space is related to the …\nCreate a new <code>Curve</code> whose parameter space is related to the …\nCreate a new <code>Curve</code> whose parameter space is related to the …\nCreate a new <code>Curve</code> whose parameter space is related to the …\nReparametrize this <code>Curve</code> by sampling from another curve.\nReparametrize this <code>Curve</code> by sampling from another curve.\nReparametrize this <code>Curve</code> by sampling from another curve.\nReparametrize this <code>Curve</code> by sampling from another curve.\nLinearly reparametrize this <code>Curve</code>, producing a new curve …\nLinearly reparametrize this <code>Curve</code>, producing a new curve …\nLinearly reparametrize this <code>Curve</code>, producing a new curve …\nLinearly reparametrize this <code>Curve</code>, producing a new curve …\nReturns the <code>Transform</code> <code>self</code> would have if it was a child of …\nCreate a new <code>Curve</code> repeating this curve <code>N</code> times, producing …\nCreate a new <code>Curve</code> repeating this curve <code>N</code> times, producing …\nCreate a new <code>Curve</code> repeating this curve <code>N</code> times, producing …\nCreate a new <code>Curve</code> repeating this curve <code>N</code> times, producing …\nCreate a repetition of a set of tracks\nRemoves all current children from this entity, replacing …\nOverwrites this smart pointer with the given value, if and …\nOverwrites this smart pointer with the given value, if and …\nOverwrites this smart pointer with the given value, if and …\nReturns <code>true</code> if the underlying value represents a value of …\nWhen set to <code>true</code> ray casting will only happen between …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nReserves a new <code>Handle</code> for an asset that will be stored in …\nClears the <code>pressed</code>, <code>just_pressed</code> and <code>just_released</code> data of …\nResets the timer. The reset doesn’t affect the <code>paused</code> …\nRemove any pending changes to <code>State&lt;S&gt;</code>\nClears the <code>pressed</code>, <code>just_pressed</code>, and <code>just_released</code> data …\nClears <code>pressed</code>, <code>just_pressed</code>, <code>just_released</code>, and …\nShould the window be resizable?\nResizes the image to the new size, by removing information …\nThe limits of the window’s logical size (found in its …\nWhat resolution the window should have.\nResolves a <code>Val</code> to its value in logical pixels and returns …\nCompute the logical border radius for a single corner from …\nGets a reference to the resource of the given type\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nReturns the <code>ComponentId</code> of the given <code>Resource</code> type <code>T</code>.\nGets a mutable reference to the resource of the given type\nGets a reference to the resource of the given type\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nTemporarily removes the requested resource from this <code>World</code>…\nResources stored in the dynamic scene.\nResume all active animations.\nRemoves all components except the given <code>Bundle</code> from the …\nRemoves any components except those in the <code>Bundle</code> (and its …\nCreate a new <code>Curve</code> inverting this curve on the x-axis, …\nCreate a new <code>Curve</code> inverting this curve on the x-axis, …\nCreate a new <code>Curve</code> inverting this curve on the x-axis, …\nCreate a new <code>Curve</code> inverting this curve on the x-axis, …\nReverse the <code>WindingOrder</code> of the triangle by swapping the …\nReverse the triangle by swapping the first and last …\nThis triangle but reversed.\nThis triangle but reversed.\nRewinds all active animations.\nCreates a new <code>Color</code> object storing a <code>Srgba</code> color with an …\nConstruct a new <code>LinearRgba</code> color from (r, g, b) …\nConstruct a new <code>Srgba</code> color from (r, g, b) components, …\nReads an array of floats to creates a new <code>Color</code> object …\nCreates a new <code>Color</code> object storing a <code>LinearRgba</code> color with …\nCreates a new <code>Color</code> object storing a <code>Srgba</code> color from <code>u8</code> …\nNew <code>Srgba</code> from sRGB colorspace.\nCreates a new <code>Color</code> object storing a <code>Srgba</code> color.\nCreates a new <code>Color</code> object storing a <code>Srgba</code> color from <code>u8</code> …\nNew <code>Srgba</code> from sRGB colorspace.\nReturn the local right vector (X).\nEquivalent to <code>local_x()</code>\nCreates a new <code>UiRect</code> where <code>right</code> takes the given value, …\nSets the radii for the top right and bottom right corners. …\nPixel padding to the right\nThe value corresponding to the right side of the UI rect.\nThe horizontal position of the right edge of the node.\nRight ear position relative to the <code>GlobalTransform</code>.\nGet the right-hand end point of the arc\nReturns the right stick as a <code>Vec2</code>\nThe index of the root node in the animation graph.\nCorresponds to the <code>root</code> field on <code>AnimationGraph</code>.\nReturns the topmost ancestor of the given <code>entity</code>.\nRotates this <code>Transform</code> by the given rotation.\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nRotates this <code>Transform</code> around a <code>point</code> in space.\nRotates this <code>Transform</code> around the given <code>axis</code> by <code>angle</code> (in …\nRotates the vertex positions, normals, and tangents of the …\nReturn a new version of this color with the hue channel …\nReturn a new version of this color with the hue channel …\nReturn a new version of this color with the hue channel …\nRotates this <code>Transform</code> by the given <code>rotation</code>.\nRotates this <code>Transform</code> around its local <code>axis</code> by <code>angle</code> (in …\nRotates this <code>Transform</code> around its local <code>X</code> axis by <code>angle</code> …\nRotates this <code>Transform</code> around its local <code>Y</code> axis by <code>angle</code> …\nRotates this <code>Transform</code> around its local <code>Z</code> axis by <code>angle</code> …\nRotates towards <code>rhs</code> up to <code>max_angle</code> (in radians).\nRotates towards <code>rhs</code> up to <code>max_angle</code> (in radians).\nRotates this <code>Transform</code> around the <code>X</code> axis by <code>angle</code> (in …\nRotates this <code>Transform</code> around the <code>Y</code> axis by <code>angle</code> (in …\nRotates this <code>Transform</code> around the <code>Z</code> axis by <code>angle</code> (in …\nRotates the vertex positions, normals, and tangents of the …\nGet the rotation as a <code>Quat</code>.\nRotation of the entity.\nThe rotational part of a two-dimensional isometry.\nThe rotational part of a three-dimensional isometry.\nWorld space rotation applied to the environment light …\nGet the rotation that rotates <code>other</code> to this direction.\nGet the rotation that rotates the X-axis to this direction.\nGet the rotation that rotates the Y-axis to this direction.\nGet the rotation that rotates this direction to <code>other</code>.\nGet the rotation that rotates this direction to the X-axis.\nGet the rotation that rotates this direction to the Y-axis.\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nDraw a wireframe cuboid with rounded corners in 3D.\nDraw a wireframe rectangle with rounded corners in 3D.\nDraw a wireframe rectangle with rounded corners in 2D.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nThe size of the gutters between items in a vertical …\nExecutes this system once. See <code>System::run</code> or …\nRuns the <code>App</code> by calling its runner.\nRuns all systems in this schedule on the <code>world</code>, using its …\nRuns the system with the given input in the world.\nRuns the system with the given input in the world.\nRuns the system with the given input in the world.\nRuns the default schedule.\nRun the systems only if the <code>Condition</code> is <code>true</code>.\nRun the systems only if the <code>Condition</code> is <code>true</code>.\nRun the systems only if the <code>Condition</code> is <code>true</code>.\nRun the systems in this set(s) only if the <code>Condition</code> is …\nRun the systems in this set(s) only if the <code>Condition</code> is …\nRun the systems in this set(s) only if the <code>Condition</code> is …\nA system that runs the “main schedule”\nA <code>Condition</code>-satisfying system that returns <code>true</code> on the …\nRuns this system with the given input in the world.\nRuns this system with the given input in the world.\nRuns this system with the given input in the world.\nRuns the <code>Schedule</code> associated with the <code>label</code> a single time.\nRuns the system corresponding to the given <code>SystemId</code>. …\nRun stored systems by their <code>SystemId</code>. Before running a …\nSimilar to <code>Self::run_system</code>, but caching the <code>SystemId</code> in a …\nRuns a cached system, registering it if necessary.\nSimilar to <code>Self::run_system_with_input</code>, but caching the …\nRuns a cached system with an input, registering it if …\nRuns the system corresponding to the given <code>SystemId</code>. …\nRun a stored chained system by its <code>SystemId</code>, providing an …\nRuns the system with the given input in the world. Unlike …\nGet the length of the sagitta of this arc, that is, the …\nGet the length of the sagitta of this sector\nGet the length of the sagitta of this segment, also known …\nSample a point on this curve at the parameter value <code>t</code>, …\nSample a point on this curve at the parameter value <code>t</code>, …\nSample a point on this curve at the parameter value <code>t</code>, …\nSample a point on this curve at the parameter value <code>t</code>, …\nUniformly sample a point from the surface of this shape, …\nSample a point on this curve at the parameter value <code>t</code>, …\nSample a point on this curve at the parameter value <code>t</code>, …")