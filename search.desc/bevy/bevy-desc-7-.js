searchState.loadedDescShard("bevy", 7, "Sample a point on this curve at the parameter value <code>t</code>, …\nSample a point on this curve at the parameter value <code>t</code>, …\nSample-interpolated curves constructed using the <code>Curve</code> API.\nUniformly sample a point from inside the area/volume of …\nSample a collection of <code>n &gt;= 0</code> points on this curve at the …\nSample a collection of <code>n &gt;= 0</code> points on this curve at the …\nSample a collection of <code>n &gt;= 0</code> points on this curve at the …\nSample a collection of <code>n &gt;= 0</code> points on this curve at the …\nSample a collection of <code>n &gt;= 0</code> points on this curve at the …\nSample a collection of <code>n &gt;= 0</code> points on this curve at the …\nSample a collection of <code>n &gt;= 0</code> points on this curve at the …\nSample a collection of <code>n &gt;= 0</code> points on this curve at the …\nSample a collection of <code>n &gt;= 0</code> points on this curve at the …\nSample a collection of <code>n &gt;= 0</code> points on this curve at the …\nSample a collection of <code>n &gt;= 0</code> points on this curve at the …\nSample a collection of <code>n &gt;= 0</code> points on this curve at the …\nSample a point on this curve at the parameter value <code>t</code>, …\nThe <code>ImageSampler</code> to use during rendering.\nExtract an iterator over evenly-spaced samples from this …\nExtract an iterator over evenly-spaced samples from this …\nExtract an iterator over evenly-spaced samples from this …\nExtract an iterator over evenly-spaced samples from this …\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nIn other words this computes …\nIn other words this computes …\nIn other words this computes …\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nThe saturation channel. [0.0, 1.0]\nThe saturation channel. [0.0, 1.0]\nSerializes the animation graph to the given <code>Write</code>r in RON …\nGet the scale as a <code>Vec3</code>.\nScale of the entity.\nScales the projection.\nScales the vertex positions, normals, and tangents of the …\nThe window’s scale factor.\nScales the vertex positions, normals, and tangents of the …\nHow the projection will scale to the viewport.\nHandle to the scene to spawn.\nHandle to the scene to spawn.\nAll scenes loaded from the glTF file.\nTemporarily removes the schedule associated with <code>label</code> …\nThe quality of the screen space specular transmission blur …\nHow many individual steps should be performed in the …\nThe scroll position of the node,\nScroll overflowing items on the x axis\nScroll overflowing items on the y axis\nSeeks all active animations forward or backward by the …\nThe list of segments contained in this <code>CubicCurve</code>.\nThe list of segments contained in this <code>RationalCurve</code>.\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nReturns the length of the semi-major axis. This …\nReturns the length of the semi-minor axis. This …\n“Sends” an <code>event</code> by writing it to the current event …\nSends an <code>event</code>, which can later be read by <code>EventReader</code>s. …\nSends a list of <code>events</code> all at once, which can later be …\nSends a list of <code>events</code> all at once, which can later be …\nSends the default value of the event. Useful when the …\nSends the default value of the event. Useful when the …\nSends an arbitrary <code>Event</code>.\nSends an <code>Event</code>. This method returns the ID of the sent …\nSends a batch of <code>Event</code>s from an iterator. This method …\nSends the default value of the <code>Event</code> of type <code>E</code>. This …\nGenerate a deterministic but quasi-randomly distributed …\nGenerate a deterministic but quasi-randomly distributed …\nGenerate a deterministic but quasi-randomly distributed …\nReturns a serializable version of the value.\nReturns a serializable version of the value.\nReturns a serializable version of the value.\nSerialize this dynamic scene into the official Bevy scene …\nPerforms a type-checked assignment of a reflected value to …\nSets the entity’s name.\nSets the value of the given <code>Plugin</code>, if it exists\nSets the value of the given <code>Plugin</code>, if it exists\nSets the value of the given <code>Plugin</code>, if it exists\nSets the position data of the <code>input_device</code> to <code>position_data</code>…\nTentatively set a pending state transition to <code>Some(state)</code>.\nSet the position to a specific point.\nSets the visibility to <code>true</code>. This should not be considered …\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSets the alpha component of this color.\nSet whether the schedule applies deferred system buffers …\nSAFETY: we call <code>set_archetype</code> for each member that …\nChanges miscellaneous build settings.\nFlags this value as having been changed.\nChange the color of a specific pixel (2D texture).\nChange the color of a specific pixel (1D texture).\nChange the color of a specific pixel (3D texture).\nSet the cursor position in this window in logical pixels.\nSets the default asset processor for the given <code>extension</code>.\nSets the duration of the timer.\nSet the duration of the clip in seconds.\nSet the two ears position.\nSets the elapsed time of the timer without any other …\nSet the emitter position.\nMutate the item, setting the <code>end</code> grid line\nSets the schedule’s execution strategy.\nSets the method that will be called by <code>extract</code>.\nSets the hue of this color.\nOverwrites this smart pointer with the given value, if and …\nOverwrites this smart pointer with the given value, if and …\nOverwrites this smart pointer with the given value, if and …\nManually sets the change tick recording the time when this …\nOverwrites the tick indicating the last time this system …\nSet the listener position, with an ear on each side …\nSets the maximum amount of time that can be added to this …\nSetting to true will attempt to maximize the window.\nSetting to true will attempt to minimize the window.\nSets the mode of the timer.\nSets the names of each morph target. This should …\nSet morph targets image for this mesh. This requires a “…\nTentatively set a pending state transition to a reflected …\nSets the parent of this entity.\nChange this entity’s parent while preserving this entity…\nSet the cursor position in this window in physical pixels.\nSets the speed the clock advances relative to your system …\nSets the speed the clock advances relative to your system …\nSets the function that will be called when the app is run.\nMutate the item, setting the number of tracks the item …\nChanges the speed of the sound.\nMutate the item, setting the <code>start</code> grid line\nSets the next state the app should move to.\nSAFETY: we call <code>set_table</code> for each member that implements …\nSets the amount of virtual time that must pass before the …\nSets the amount of virtual time that must pass before the …\nSets the amount of virtual time that must pass before the …\nChanges the volume of the sound.\nSets the modulus used to calculate <code>elapsed_wrapped</code>.\nInitial settings that the audio starts playing with. If …\nInitial settings that the audio starts playing with. If …\nInitial settings that the audio starts playing with. If …\nA bias used when sampling shadow maps to avoid “…\nA value that adjusts the tradeoff between self-shadowing …\nA value that adjusts the tradeoff between self-shadowing …\nThe distance from the light to near Z plane in the shadow …\nThe distance from the light to the near Z plane in the …\nA bias applied along the direction of the fragment’s …\nA bias applied along the direction of the fragment’s …\nA bias applied along the direction of the fragment’s …\nControls if shadows are enabled for the Material.\nWhether this light casts shadows.\nWhether this light casts shadows.\nWhether this light casts shadows.\nDraws the shortest arc between two points (<code>from</code> and <code>to</code>) …\nDraws the shortest arc between two points (<code>from</code> and <code>to</code>) …\nReturns a short, pretty-print enabled path to the type.\nShould this entity block entities below it from being …\nThis function gets called whenever one of the <code>SourceStates</code> …\nAttempts to determine if an <code>AppExit</code> was raised since the …\nGet the length of each side of the rhombus\nGet the length of one side of the regular polygon\nThe number of sides\nDefines how the 4 side parts of the 9 slices will scale\nComputes the shortest distance between a plane transformed …\nGet the signed volume of the tetrahedron.\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nThe sine of the rotation angle in radians.\nReturns the sine and cosine of the rotation angle in …\nReturns a single immutable query result when there is …\nReturns a single read-only query item when there is …\nReturns a single mutable query result when there is …\nReturns a single query item when there is exactly one …\nReturns the size of a 2D image.\nThe window’s client size in logical pixels\nThe calculated node size as width and height in physical …\nGet the size of the rectangle\nGet the size of the cuboid\nRectangle size.\nRectangle size.\nRectangle size.\nTotal size of texture atlas.\nReturns the size of a 2D image as f32.\nCreate a Sprite with a custom size\nAll skins loaded from the glTF file.\nSets whether the window should be shown in the taskbar.\nGet the slant height of the cone, the length of the line …\nPerforms a spherical linear interpolation between <code>self</code> and …\nPerforms a spherical linear interpolation between <code>self</code> and …\nPerforms a spherical linear interpolation between <code>self</code> and …\nPerforms a spherical linear interpolation between <code>self</code> and …\nPerforms a spherical linear interpolation between <code>self</code> and …\nSmoothly nudge this value towards the <code>target</code> at a given …\nSmoothly nudge this value towards the <code>target</code> at a given …\nSmoothly nudge this value towards the <code>target</code> at a given …\nSmoothly nudge this value towards the <code>target</code> at a given …\nCreate a solid color <code>ImageNode</code>.\nSorts children stably in place using the provided …\nSorts children stably in place using the provided key …\nSorts children stably in place using the provided key …\nSorts children unstably in place using the provided …\nSorts children unstably in place using the provided key …\nA mapping from each parent node index to the range within …\nA list of the children of each node, sorted in ascending …\nAsset containing the audio data to play.\nAsset containing the audio data to play.\nAsset containing the audio data to play.\nThe gltf root of the gltf asset, see …\nGet an iterator over equally-spaced points from this …\nPlace the grid item automatically, specifying how many …\nEnables spatial audio for this source.\nContains a transform that specifies the position of this …\nOptional scale factor applied to the positions of this …\nSpawns an entity with the given bundle and inserts it into …\nSchedule the spawn of a new instance of the provided scene.\nPushes a <code>Command</code> to the queue for creating a new entity …\nSpawns a new <code>Entity</code> with a given <code>Bundle</code> of components and …\nSchedule the spawn of a new instance of the provided scene …\nPushes a <code>Command</code> to the queue for creating entities with a …\nSpawns a batch of entities with the same component <code>Bundle</code> …\nSchedule the spawn of a new instance of the provided …\nSchedule the spawn of a new instance of the provided …\nImmediately spawns a new instance of the provided dynamic …\nSpawns an <code>Entity</code> with no components and inserts it into …\nReserves a new empty <code>Entity</code> to be spawned, and returns its …\nSpawns a new <code>Entity</code> and returns a corresponding …\nImmediately spawns all scenes scheduled for spawn.\nImmediately spawns a new instance of the provided scene.\nCustomizes the default <code>RenderPipelineDescriptor</code> for a …\nCustomizes the default <code>RenderPipelineDescriptor</code> for a …\nCustomizes the default <code>RenderPipelineDescriptor</code> for a …\nThe typically-sharper, mipmapped image that represents …\nThe amount of light transmitted <em>specularly</em> through the …\nGets the speed of the sound.\nSpeed to play at.\nDraw a wireframe sphere in 3D made out of 3 circles around …\nCreates a vector mask with all elements set to <code>v</code>.\nCreates a vector mask with all elements set to <code>v</code>.\nCreates a vector mask with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\n<code>Color</code> to use for drawing a <code>SpotLight</code> gizmo when …\nHow much the shadow should spread outward.\nSpecifies the rendering properties of the sprite, such as …\nCreates a new border as a square, with identical pixel …\nCreates a new <code>Color</code> object storing a <code>Srgba</code> color with an …\nReads an array of floats to creates a new <code>Color</code> object …\nCreates a new <code>Color</code> object storing a <code>Srgba</code> color from <code>u8</code> …\nCreates a new <code>Color</code> object storing a <code>Srgba</code> color.\nCreates a new <code>Color</code> object storing a <code>Srgba</code> color from <code>u8</code> …\nThe order of the node in the UI layout. Nodes with a …\nStart playing an animation, restarting it if necessary.\nPlace the grid item specifying the <code>start</code> grid line …\nGet the start of this interval.\nCalling this will attempt to start a drag-move of the …\nCalling this will attempt to start a drag-resize of the …\nPlace the grid item specifying <code>start</code> and <code>end</code> grid lines (…\nThe position of the pointer at drag start.\nPlace the grid item specifying the <code>start</code> grid line and how …\nReturns the <code>Instant</code> the clock was created.\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nStops the sink.\nStops playing the given animation, removing it from the …\nStops all currently-playing animations.\nRetrieves this world’s <code>Storages</code> collection.\nSubtracts the <code>rhs</code> quaternion from <code>self</code>.\nReturns a reference to the <code>SubApp</code> with the given label.\nReturns a reference to the <code>SubApp</code> with the given label.\nIf set, this camera will be a sub camera of a large view, …\nSubtracts two 2x2 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 4x4 matrices.\nSwaps the child at <code>a_index</code> with the child at <code>b_index</code>.\nMarker component that indicates that its entity needs to …\nMarker component that indicates that its entity needs to …\nMarker component that indicates that its entity needs to …\nMarker component that indicates that its entity needs to …\nMarker component that indicates that its entity needs to …\nMarker component that indicates that its entity needs to …\nReturns <code>Some</code> if this system set is a <code>SystemTypeSet</code>.\nReturns <code>Some</code> if this system set is a <code>SystemTypeSet</code>.\nReturns <code>Some</code> if this system set is a <code>SystemTypeSet</code>.\nGet the <code>TypeId</code> of the <code>System</code> produced after calling …\nGet the <code>TypeId</code> of the <code>System</code> produced after calling …\nGet the <code>TypeId</code> of the <code>System</code> produced after calling …\nReturns an iterator over all systems in this schedule.\nReturns the number of systems in this schedule.\nDowncasts the value to type <code>T</code>, unboxing and consuming the …\nRemoves all components in the <code>Bundle</code> from the entity and …\nTake the function that will be called by <code>extract</code> out of …\nAttempts to downcast the given value to <code>Self</code> using, …\nAttempts to downcast the given value to <code>Self</code> using, …\nAttempts to downcast the given value to <code>Self</code> using, …\nThe original target of this picking event, before bubbling\nThe “target” that this camera will render to.\nOptions for the <code>TaskPool</code> created at application start.\nTension\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nThe (optional) texture atlas used to render the image.\nThe (optional) texture atlas used to render the sprite\nMaps from a specific image handle to the index in <code>textures</code> …\nRetrieves the texture <em>section</em> index of the given <code>texture</code> …\nRetrieves the texture <em>section</em> rectangle of the given …\nRetrieves the current texture <code>URect</code> of the sprite sheet …\ntexture area to draw\nThe specific areas of the atlas where each texture can be …\nGet the thickness of the annulus\nThickness of the volume beneath the material surface.\nA cached postorder traversal of the graph.\nAdvance the timer by <code>delta</code> seconds. Non repeating timer …\nTransforms the given slice in an collection of tiled …\nReturns the number of times a repeating timer finished …\nReturns the amount of virtual time that must pass before …\nStores the title of the window.\nToggles showing the traffic light window buttons.\nToggles showing the window title.\nToggles drawing the titlebar.\nMakes the titlebar transparent, allowing the app content …\nReturns the angle (in radians) of this vector in the range …\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\nReturns the rotation axis (normalized) and angle (in …\nConvert to a form convenient for passing outside of rust.\nCreates a <code>[f32; 9]</code> array storing data in column major …\nCreates a <code>[f32; 4]</code> array storing data in column major …\nCreates a <code>[f32; 16]</code> array storing data in column major …\nCreates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f32; 2]; 2]</code> 2D array storing data in column …\nCreates a <code>[[f32; 4]; 4]</code> 4D array storing data in column …\nBuild a <code>CubicCurve</code> by computing the interpolation …\nBuild a <code>RationalCurve</code> by computing the interpolation …\nBuild a cyclic <code>CubicCurve</code> by computing the interpolation …\nGet the part connecting the hemispherical ends of the …\nExtract Euler angles with the given Euler rotation order.\nExtract Euler angles with the given Euler rotation order.\nReturns the rotation angles for the given euler rotation …\nConvert to an f32 array\nConvert to an f32 array without the alpha value\nGets the file extensions for a given format.\nConvert this color to CSS-style hexadecimal notation.\nGet the part connecting the semicircular ends of the …\nReturns the isometric part of the transformation as an …\nGet the isometry defined by this transform’s rotation …\nReturn the color as a linear RGBA color.\nConverts a physical size in this <code>Camera</code> to a logical size.\nGets the MIME types for a given format.\nReturns another <code>Query</code> from this that fetches the read-only …\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …\nReturns the rotation axis scaled by the rotation in …\nReturn the color as an SRGBA color.\nConvert to [u8; 4] where that makes sense (Srgba is most …\nConvert to [u8; 3] where that makes sense (Srgba is most …\nConvert to a Vec3\nConvert to a Vec4\nToggles the playback of this sink.\nToggles the playback of this sink.\nToggles the playback of this sink.\nToggles between <code>Visibility::Inherited</code> and …\nToggles between <code>Visibility::Inherited</code> and …\nToggles between <code>Visibility::Visible</code> and <code>Visibility::Hidden</code>.\nCreates a new <code>UiRect</code> where <code>top</code> takes the given value, and …\nSets the radii for the top left and top right corners. …\nPixel padding to the top\nThe value corresponding to the top side of the UI rect.\nThe vertical position of the top edge of the node.\nSets the radius for the top left corner. Remaining corners …\nSets the radius for the top right corner. Remaining …\nConstructs an event at the trace level.\nCall <code>trace!</code> once per call site.\nConstructs a span at the trace level.\nA system that synchronizes the state of assets in this …\nTransform of the scene root entity.\nTransform of the scene root entity.\nThe local transform of the sprite, relative to its parent.\nThe transform of the node\nThe transform of the node\nThe transform of the node\nThe transform of the node\nThe transform of the entity.\nTransforms the vertex positions, normals, and tangents of …\nTransform a point.\nTransforms the given point from local space to global …\nTransforms the given <code>point</code>, applying scale, rotation and …\nTransform a point by rotating and translating it using …\nTransform a point by rotating and translating it using …\nTransforms the given 2D vector as a point.\nTransforms the given 3D vector as a point.\nTransforms the given <code>Vec3A</code> as 3D point.\nRotates the given 2D vector.\nTransforms the give 3D vector as a direction.\nTransforms the give <code>Vec3A</code> as 3D vector.\nTransforms the vertex positions, normals, and tangents of …\nTranslates this <code>Transform</code> around a <code>point</code> in space.\nTranslates the vertex positions of the mesh in place by …\nTranslates the vertex positions of the mesh by the given …\nGet the translation as a <code>Vec3</code>.\nPosition of the entity. In 2d, the last value of the <code>Vec3</code> …\nThe translational part of a two-dimensional isometry.\nThe translational part of a three-dimensional isometry.\nGet the translation as a <code>Vec3A</code>.\nTransmute the existing builder adding required accesses. …\nUse this to transform a <code>QueryState</code> into a more generic …\nTransmute the existing builder adding required accesses. …\nCreates a new <code>QueryState</code> with the same underlying …\nReturns a <code>QueryLens</code> that can be used to get a query with a …\nEquivalent to <code>Self::transmute_lens</code> but also includes a …\nA transparent white 1x1x1 image.\nShould the window be transparent?\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nGet a list of this Mesh’s triangles as an iterator if …\nSends a “global” <code>Trigger</code> without any targets. This …\nSends a <code>Trigger</code> targeting this entity. This will run any …\nTriggers the given <code>event</code> for this entity, which will run …\nTriggers the given <code>Event</code>, which will run any <code>Observer</code>s …\nTriggers the given <code>Event</code> as a mutable reference, which …\nSends a <code>Trigger</code> for the given targets. This will run any …\nTriggers the given <code>Event</code> for the given <code>targets</code>, which will …\nTriggers the given <code>Event</code> as a mutable reference for the …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nTries to <code>apply</code> a reflected value to this value.\nAttempts to cast this type to a fully-reflected value.\nAttempts to cast this type to a mutable, fully-reflected …\nDespawns the entity. This will not emit a warning if the …\nPerforms the same function as <code>Self::despawn</code> but does not …\nSimilar to <code>Self::despawn_descendants</code> but does not emit …\nSimilar to <code>Self::despawn_recursive</code> but does not emit …\nDespawns the provided entity and its children. This will …\nDespawns the provided entity and its children. This will …\nDowncasts the value to type <code>T</code>, consuming the trait object.\nDowncasts the value to type <code>T</code> by mutable reference.\nDowncasts the value to type <code>T</code> by reference.\nReconstruct an <code>Entity</code> previously destructured with …\nCreates a <code>Font</code> from bytes\nTries to add a <code>Bundle</code> of components to the entity.\nPushes a <code>Command</code> to the queue for adding a <code>Bundle</code> type to …\nFor a given batch of (<code>Entity</code>, <code>Bundle</code>) pairs, adds the …\nPushes a <code>Command</code> to the queue for adding a <code>Bundle</code> type to …\nFor a given batch of (<code>Entity</code>, <code>Bundle</code>) pairs, adds the …\nAttempts to add a dynamic component to an entity.\nSimilar to <code>Self::try_insert</code> but will only try to insert if …\nTries to add a <code>Bundle</code> of components to the entity without …\nTries to add a <code>Bundle</code> of components to the entity without …\nConvert a <code>Image</code> to a <code>DynamicImage</code>. Useful for editing image\nAttempts to cast this type to a boxed, fully-reflected …\nReturns <code>self</code> with a length of <code>1.0</code> if possible, and <code>None</code> …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nTries to register the given component <code>R</code> as a required …\nTries to register the given component <code>R</code> as a required …\nTries to register the given component <code>R</code> as a required …\nTries to register the given component <code>R</code> as a required …\nAttempts to run the <code>Schedule</code> associated with the <code>label</code> a …\nTemporarily removes the schedule associated with <code>label</code> …\nDowncasts the value to type <code>T</code>, unboxing and consuming the …\nConverts to a typed Handle. This will panic if the …\nCreates a <code>Rot2</code> from a counterclockwise fraction of a full …\nReturns the <code>TypeId</code> of the referenced <code>Asset</code>.\nReturns the <code>TypeId</code> of the underlying system type.\nReturns the <code>TypeId</code> of the underlying system type.\nReturns the <code>TypeId</code> of the underlying system type.\nReturns the name of the type, or <code>None</code> if it is anonymous.\nReturns the name of the type, or <code>None</code> if it is anonymous.\nReturns the name of the type, or <code>None</code> if it is anonymous.\nReturns the fully qualified path of the underlying type.\nConverts to a typed Handle. This will panic if the …\nConverts to a typed Handle. This will check the type when …\nConverts to a typed Handle. This <em>will not check if the </em>…\nGenerates uniform knots that will generate the same curve …\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nWhether to apply only the base color to this material.\nResumes the clock if paused.\nUnpauses the Timer. Resumes the ticking of the timer.\nRemoves a system previously registered with …\nRemoves a registered system and returns the system, if it …\nRemoves a cached system and its <code>CachedSystemId</code> resource.\nThe calculated node size as width and height in physical …\nConverts this <code>Handle</code> to an “untyped” / “generic-less…\nConverts this to an “untyped” / “generic-less” …\nReturn the local up vector (Y).\nEquivalent to <code>local_y()</code>\nRuns the default schedules of all sub-apps (starting with …\nRuns the default schedule and updates internal component …\nUpdates the internal time measurements.\nSwaps the event buffers and clears the oldest event …\nUpdate the system’s archetype component <code>Access</code>.\nFor the given <code>archetype</code>, adds any component accessed used …\nUpdates the state’s internal view of the <code>World</code>’s …\nUpdates the state’s internal view of the <code>world</code>’s …\nSwaps the event buffers and drains the oldest event …\nUpdates the internal entity location to match the current …\nThe schedule that will be run by <code>update</code>.\nIterate through all instances of the provided scenes and …\nExtract data from the main world into the <code>SubApp</code> with the …\nUpdates time with a specified <code>Duration</code>.\nUpdates time with a specified <code>Instant</code>.\nReturns true if this mode uses slices internally (…\nThe transform applied to the UVs corresponding to …\nSafe version of <code>System::validate_param_unsafe</code>. that runs …\nSafe version of <code>System::validate_param_unsafe</code>. that runs …\nSafe version of <code>System::validate_param_unsafe</code>. that runs …\nValidates that all parameters can be acquired and that …\nPanics\nThe input value to be blended.\nContent of the extra data.\nThe value channel. [0.0, 1.0]\nInstantaneous velocity of a point at parametric value <code>t</code>.\nCompute the first derivative with respect to t at <code>t</code>. This …\nInstantaneous velocity of a point at parametric value <code>t</code> in …\nCompute the first derivative with respect to t at <code>t</code>. This …\nReturns the USB vendor ID as assigned by the USB-IF, if …\nReturns this materials vertex shader. If <code>ShaderRef::Default</code>…\nReturns this materials vertex shader. If <code>ShaderRef::Default</code>…\nReturns this materials vertex shader. If <code>ShaderRef::Default</code>…\nReturns this materials vertex shader. If <code>ShaderRef::Default</code>…\nReturns this material’s vertex shader. If …\nReturns this material’s vertex shader. If …\nReturns this material’s vertex shader. If …\nCreates a new <code>UiRect</code> where <code>top</code> and <code>bottom</code> take the given …\nGet the vertices of this polygon\nReturns an iterator over the vertices of the regular …\nThe vertices of the polyline\nThe vertices of the polyline\nThe vertices of the triangle\nThe vertices of the <code>Polygon</code>\nThe vertices of the <code>BoxedPolygon</code>\nThe vertices of the polyline\nThe vertices of the polyline\nThe vertices of the triangle.\nThe vertices of the tetrahedron.\nCreate a grid track with a percentage of the viewport’s …\nCreate a repeating set of grid tracks with the percentage …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed visibility of the scene root …\nAlgorithmically-computed visibility of the scene root …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nThe view visibility of the entity.\nIf set, this camera will render to the given <code>Viewport</code> …\nSpecifies the origin of the viewport as a normalized …\nReturns a ray originating from the camera, that passes …\nReturns a 2D world position computed from a position on …\nUser indication of whether an entity is visible\nUser indication of whether an entity is visible\nUser-driven visibility of the scene root entity.\nUser-driven visibility of the scene root entity.\nUser indication of whether an entity is visible\nDetermines how ray casting should consider <code>Visibility</code>.\nDescribes the visibility properties of the node\nDescribes the visibility properties of the node\nDescribes the visibility properties of the node\nDescribes the visibility properties of the node\nUser indication of whether an entity is visible\nEnables or disables the light\nEnables or disables the light\nEnables or disables the light\nThe visibility of the entity.\nThe visibility of the entity.\nShow overflowing items on both axes\nSets the window’s visibility.\nVisible unclipped area\nCreate a grid track with a percentage of the viewport’s …\nCreate a repeating set of grid tracks with the percentage …\nCreate a grid track with a percentage of the viewport’s …\nCreate a repeating set of grid tracks with the percentage …\nGets the volume of the sound.\nGet the volume of the shape\nGet the volume of the sphere\nGet the volume of the cuboid\nGet the volume of the cylinder\nGet the volume of the capsule\nGet the volume of the cone\nGet the volume of the torus. Note that this only produces …\nGet the volume of the tetrahedron.\nGet the volume of the extrusion\nVolume to play at.\nThe global volume of all audio.\nCreate a grid track with a percentage of the viewport’s …\nCreate a repeating set of grid tracks with the percentage …\nReturns a future that will suspend until the specified …\nReturns a future that will suspend until the specified …\nReturns a future that will suspend until the specified …\nWhether or not this command should output a warning if the …\nWhether or not this command should output a warning if the …\nConstructs an event at the warn level.\nCall <code>warn!</code> once per call site.\nConstructs a span at the warn level.\nReturns <code>true</code> if the clock was paused at the start of this …\nObserve the given <code>entity</code>. This will cause the <code>Observer</code> to …\nIf set, will override the default “watch for changes” …\nReturns true if the <code>AssetServer</code> watches for changes.\nCreate a new <code>Handle::Weak</code> with the given <code>u128</code> encoding of …\nThe individual item’s weight. This may not be bound to …\nThe weight of this node, which signifies its contribution …\nCorresponds to the <code>weight</code> field on <code>AnimationGraphNode</code>.\nThe homogeneous weight coefficients.\nWeights\nThe whiteness channel. [0.0, 1.0]\nReturns the width of a 2D image.\nThe window’s client area width in logical pixels.\nRectangle width (max.x - min.x).\nRectangle width (max.x - min.x).\nRectangle width (max.x - min.x).\nThe ideal width of the node. <code>width</code> is used when it is …\nThe width of the outline.\nGet the <code>WindingOrder</code> of the triangle\nWindow that the cursor moved inside.\nWindow that the cursor entered.\nWindow that the cursor left.\nWindow that moved.\nThe window entity registering the touch.\nWhere should the window appear relative to other …\nSets a specific theme for the window.\nAdds <code>With&lt;T&gt;</code> to the <code>FilteredAccess</code> of self.\nReturn a copy of this color with the ‘a’ channel set …\nReturn a new version of this color with the given alpha …\nReturn a copy of this color with the ‘b’ channel set …\nReturn a copy of this color with the blackness channel set …\nReturn a copy of this color with the blue channel set to …\nReturn a copy of this color with the blue channel set to …\nReturns the <code>UiRect</code> with its <code>bottom</code> field set to the given …\nReturns the <code>BorderRadius</code> with its <code>bottom_left</code> and …\nReturns the <code>BorderRadius</code> with its <code>bottom_left</code> field set to …\nReturns the <code>BorderRadius</code> with its <code>bottom_right</code> field set …\nSpawns the passed bundle and adds it to this entity as a …\nTakes a closure which builds children for this entity …\nReturn a copy of this color with the chroma channel set to …\nReturn a copy of this color with the ‘chroma’ channel …\nSet the color tint\nObserve the given <code>component</code>. This will cause the <code>Observer</code> …\nSpecify a custom component <code>SceneFilter</code> to be used with …\nConsumes the mesh and returns a mesh with calculated …\nConsumes the mesh and returns a mesh with calculated …\nConsumes the mesh and returns a mesh with calculated …\nConsumes the mesh and returns a mesh with no shared …\nSet the early exit test to apply to the ray cast.\nObserve the given <code>entity</code>. This will cause the <code>Observer</code> to …\nReturns a <code>Command</code> which executes this <code>EntityCommand</code> for …\nReturns a <code>Command</code> which executes this <code>EntityCommand</code> for …\nReturns a <code>Command</code> which executes this <code>EntityCommand</code> for …\nObserve the given <code>event</code>. This will cause the <code>Observer</code> to …\nSet the filter to apply to the ray cast.\nFlip the image along its x-axis\nFlip the image along its y-axis\nReturns this <code>TextFont</code> with the specified font face handle.\nReturns this <code>TextFont</code> with the specified font size.\nReturns this <code>TextFont</code> with the specified <code>FontSmoothing</code>.\nConsumes the mesh and returns a mesh with tangents …\nReturn a copy of this color with the green channel set to …\nReturn a copy of this color with the green channel set to …\nReturn a new version of this color with the hue channel …\nAdds <code>With&lt;T&gt;</code> to the <code>FilteredAccess</code> of self from a runtime …\nConsumes the mesh and returns a mesh with data set for a …\nConsumes the mesh and returns a mesh with the given vertex …\nConsumes the mesh and returns a mesh with inverted winding …\nReturns this <code>TextLayout</code> with the specified <code>JustifyText</code>.\nReturns the <code>UiRect</code> with its <code>left</code> field set to the given …\nReturns the <code>BorderRadius</code> with its <code>top_left</code> and <code>bottom_left</code> …\nReturn a copy of this color with the lightness channel set …\nReturn a copy of this color with the lightness channel set …\nReturn a copy of this color with the lightness channel set …\nReturn a copy of this color with the ‘lightness’ …\nReturn a copy of this color with the ‘lightness’ …\nReturns this <code>TextLayout</code> with the specified <code>LineBreak</code>.\nReturn a new version of this color with the given …\nAdd a margin on each edge of the visual box in logical …\nConsumes the mesh and returns a mesh with morph target …\nConsumes the mesh and returns a mesh with the given morph …\nReturns this <code>TextLayout</code> with soft wrapping disabled. Hard …\nCreate a configuration that forces using the given number …\nReturn a copy of this color with the red channel set to …\nReturn a copy of this color with the red channel set to …\nConsumes the mesh and returns a mesh without the data for …\nConsumes the mesh and returns a mesh without the vertex …\nSpecify a custom resource <code>SceneFilter</code> to be used with this …\nReturns the <code>UiRect</code> with its <code>right</code> field set to the given …\nReturns the <code>BorderRadius</code> with its <code>top_right</code> and …\nReturns this <code>Transform</code> with a new rotation.\nReturn a copy of this color with the saturation channel …\nReturn a copy of this color with the saturation channel …\nReturns this <code>Transform</code> with a new scale.\nHelper to enable or disable spatial audio.\nHelper to use a custom spatial scale.\nHelper to set the speed from start of playback.\nReturns the <code>UiRect</code> with its <code>top</code> field set to the given …\nReturns the <code>BorderRadius</code> with its <code>top_left</code> and <code>top_right</code> …\nReturns the <code>BorderRadius</code> with its <code>top_left</code> field set to …\nReturns the <code>BorderRadius</code> with its <code>top_right</code> field set to …\nReturns this <code>Transform</code> with a new translation.\nReturn a copy of this color with the value channel set to …\nSet the <code>RayCastVisibility</code> setting to apply to the ray cast.\nHelper to set the volume from start of playback.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nReturn a copy of this color with the whiteness channel set …\nReturn a copy of this color with the ‘x’ channel set …\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nReturn a copy of this color with the ‘y’ channel set …\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nReturn a copy of this color with the ‘z’ channel set …\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nAdds <code>Without&lt;T&gt;</code> to the <code>FilteredAccess</code> of self.\nAdds <code>Without&lt;T&gt;</code> to the <code>FilteredAccess</code> of self from a …\nReturns a reference to the main <code>SubApp</code>’s <code>World</code>. This is …\nReturns a reference to the <code>World</code>.\nReturns a reference to the world passed to <code>Self::new</code>.\nGets read-only access to the world that the current entity …\nThe world of the scene, containing its entities and …\nReturns a mutable reference to the main <code>SubApp</code>’s <code>World</code>. …\nReturns a mutable reference to the <code>World</code>.\nReturns a mutable reference to the world passed to …\nReturns this entity’s world.\nGives mutable access to this entity’s <code>World</code> in a …\nGiven a position in world space, use the camera’s …\nGiven a position in world space, use the camera to compute …\nGiven a position in world space, use the camera to compute …\nConverts a <code>SystemInput::Inner</code> into a <code>SystemInput::Param</code>.\nReturns the modulus used to calculate <code>elapsed_wrapped</code>.\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 4 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 16 elements in …\nComputes and write the vertex data of the mesh into a …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the quaternion to an unaligned slice.\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrite the resources, the dynamic entities, and their …\nWrite the resources, the dynamic entities, and their …\nWrite the entities and their corresponding components to …\nThe x-axis. [0.0, 1.0]\nWhether to show or clip overflowing items on the x axis\nHorizontal offset\nReturns a new run condition that only returns <code>true</code> if <code>self</code> …\nReturns a new run condition that only returns <code>true</code> if <code>self</code> …\nReturns a new run condition that only returns <code>true</code> if <code>self</code> …\nReturns a new run condition that only returns <code>true</code> if …\nReturns a new run condition that only returns <code>true</code> if …\nReturns a new run condition that only returns <code>true</code> if …\nCreates a new <code>Color</code> object storing a <code>Xyza</code> color with an …\nConstruct a new <code>Xyza</code> color from (x, y, z) components, with …\nReturns the vector part of the quaternion.\nCreates a new <code>Color</code> object storing a <code>Xyza</code> color.\nThe y-axis, intended to represent luminance. [0.0, 1.0]\nWhether to show or clip overflowing items on the y axis\nVertical offset\nThe z-axis. [0.0, 1.0]\nIndicates the depth at which the node should appear in the …\nIndicates the depth at which the node should appear in the …\nIndicates the depth at which the node should appear in the …\nIndicates the depth at which the node should appear in the …\nCreate a new <code>Curve</code> by zipping this curve together with …\nCreate a new <code>Curve</code> by zipping this curve together with …\nCreate a new <code>Curve</code> by zipping this curve together with …\nCreate a new <code>Curve</code> by zipping this curve together with …\nExpected number of knots\nExpected number of weights\nProvided number of knots\nProvided number of weights\nThe number of control points provided\nPath to the file that was dropped in.\nPath to the file that might be dropped in.\nWindow the file was dropped into.\nWindow a file is possibly going to be dropped into.\nWindow that had a canceled file drop.\nMultiplier applied to the world distance (within the …\nMultiplier applied to the world distance (within the …\nDistance from the camera where fog is completely opaque, …\nControls how much light is removed due to atmospheric …\nControls how much light is added due to light scattering …\nDistance from the camera where fog is completely …\nIndex of this material\nUsed to set the <code>Face</code> of the material, useful if it is used …\nIndex of the mesh for this primitive\nIndex of the mesh for this primitive\nIndex of this primitive in its parent mesh\nIndex of this primitive in its parent mesh\nCursor begin and end position.\nCurrent value.\nInput string\nWindow that received the event.\nWindow that received the event.\nWindow that received the event.\nWindow that received the event.\nHow many additional steps to use at most to find the depth …\nThe slice will repeat when the ratio between the <em>drawing </em>…\nThe texture will repeat when the ratio between the <em>drawing </em>…\nShould the image repeat horizontally\nShould the image repeat vertically\nThe curve that results from chaining one curve with …\nA curve with a constant value over its domain.\nThe curve that results from chaining two curves.\nA curve that has been reparametrized by another curve, …\nThe curve that results from repeating a curve forever.\nA curve defined by a function together with a fixed domain.\nA curve that is the graph of another curve over its …\nA curve that has had its domain changed by a linear …\nA curve whose samples are defined by mapping samples from …\nThe curve that results from chaining a curve with its …\nA curve whose sample space is mapped onto that of some …\nThe curve that results from repeating a curve <code>N</code> times.\nThe curve that results from reversing another.\nA curve that combines the output data from two constituent …\nThis value lies on the interior, in between two points, …\nThe data core of a curve using uneven samples (i.e. …\nAn error that indicates that a <code>ChunkedUnevenCore</code> could not …\nThe data core of a curve derived from evenly-spaced …\nAn error indicating that an <code>EvenCore</code> could not be …\nThis value lies exactly on a value in the family.\nThis type expresses the relationship of a value to a fixed …\nThis value is off the left tail of the family; the inner …\nThe length of the value buffer is supposed to be the <code>width</code> …\nTried to infer the width, but the ratio of lengths wasn’…\nNot enough samples were provided.\nNot enough samples were provided.\nAt least two sample times are necessary to interpolate in …\nThis value is off the right tail of the family; the inner …\nUnbounded domains are not compatible with <code>EvenCore</code>.\nThe data core of a curve defined by unevenly-spaced …\nAn error indicating that an <code>UnevenCore</code> could not be …\nThe width of a <code>ChunkedUnevenCore</code> cannot be zero.\nThe domain of the curve derived from this core.\nThe domain of the curve derived from this core.\nThe domain of the curve derived from this core.\nThe domain over which the samples are taken, which …\nGiven a domain and a number of samples taken over that …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMap all values using a given function <code>f</code>, leaving the …\nThis core, but with the sample times moved by the map <code>f</code>. …\nCreate a new <code>EvenCore</code> from the specified <code>domain</code> and <code>samples</code>…\nCreate a new <code>UnevenCore</code>. The given samples are filtered to …\nCreate a new <code>ChunkedUnevenCore</code>. The given <code>times</code> are …\nCreate a new <code>ChunkedUnevenCore</code>, inferring the width from …\nGiven a time <code>t</code>, obtain a <code>InterpolationDatum</code> which governs …\nGiven a time <code>t</code>, obtain a <code>InterpolationDatum</code> which governs …\nGiven a time <code>t</code>, obtain a <code>InterpolationDatum</code> which governs …\nLike <code>sample_interp</code>, but the returned values include the …\nLike <code>sample_interp</code>, but the returned values include the …\nLike <code>sample_interp</code>, but the returned values include the …\nObtain a value from the held samples using the given …\nObtain a value from the held samples using the given …\nThe samples that are interpolated to extract values.\nThe samples corresponding to the times for this curve.\nThe times for the samples of this curve.\nThe times, one for each sample.\nGiven a list of <code>times</code> and a target value, get the …\nThe values that are used in sampling. Each width-worth of …\nThe sample width: the number of values that are contained …\nThe actual length of the value buffer.\nThe expected length of the value buffer.\nThe number of samples that were provided.\nThe length of the time buffer.\nThe length of the value buffer.\nThe number of samples that were provided.\nThe number of samples that were provided.\n<code>f(t) = 2.70158 * t³ - 1.70158 * t²</code>\nBehaves as <code>EaseFunction::BackIn</code> for t &lt; 0.5 and as …\n<code>f(t) = 1.0 +  2.70158 * (t - 1.0)³ - 1.70158 * (t - 1.0)²</code>\nbouncy at the start!\nBehaves as <code>EaseFunction::BounceIn</code> for t &lt; 0.5 and as …\nbouncy at the end!\n<code>f(t) = 1.0 - sqrt(1.0 - t²)</code>\nBehaves as <code>EaseFunction::CircularIn</code> for t &lt; 0.5 and as …\n<code>f(t) = sqrt((2.0 - t) * t)</code>\n<code>f(t) = t³</code>\nBehaves as <code>EaseFunction::CubicIn</code> for t &lt; 0.5 and as …\n<code>f(t) = (t - 1.0)³ + 1.0</code>\nA type whose values can be eased between.\nCurve functions over the unit interval, commonly used for …\nA <code>Curve</code> that is defined by\n…\n…\nBehaves as <code>EaseFunction::ElasticIn</code> for t &lt; 0.5 and as …\n…\n<code>f(t) = 2.0^(10.0 * (t - 1.0))</code>\nBehaves as <code>EaseFunction::ExponentialIn</code> for t &lt; 0.5 and as …\n<code>f(t) = 1.0 - 2.0^(-10.0 * t)</code>\n<code>f(t) = t</code>\n<code>f(t) = t²</code>\nBehaves as <code>EaseFunction::QuadraticIn</code> for t &lt; 0.5 and as …\n<code>f(t) = -(t * (t - 2.0))</code>\n<code>f(t) = t⁴</code>\nBehaves as <code>EaseFunction::QuarticIn</code> for t &lt; 0.5 and as …\n<code>f(t) = (t - 1.0)³ * (1.0 - t) + 1.0</code>\n<code>f(t) = t⁵</code>\nBehaves as <code>EaseFunction::QuinticIn</code> for t &lt; 0.5 and as …\n<code>f(t) = (t - 1.0)⁵ + 1.0</code>\n<code>f(t) = 1.0 - cos(t * π / 2.0)</code>\nBehaves as <code>EaseFunction::SineIn</code> for t &lt; 0.5 and as …\n<code>f(t) = sin(t * π / 2.0)</code>\n<code>n</code> steps connecting the start and the end\nGiven <code>start</code> and <code>end</code> values, produce a curve with unlimited …\nA nonempty closed interval, possibly unbounded in either …\nAn error that indicates that an operation would have …\nAn error indicating that spaced points could not be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an <code>Interval</code> with a given <code>start</code> and <code>end</code>. Alias of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA curve which provides samples in the form of <code>Iterator</code>s.\nThe interval over which this curve is parametrized.\nSample this curve at a specified time <code>t</code>, producing an …\nSample this curve at a specified time <code>t</code>, producing an …\nSample a point on this curve at the parameter value <code>t</code>, …\nApproximations for converting the wattage of lamps to …\nPredefined for lux values in several locations.\nThe amount of light (lux) from ambient daylight (not …\nThe amount of light (lux) during the dark limit of civil …\nThe amount of light (lux) during sunrise or sunset on a …\nThe amount of light (lux) in very dark overcast day\nThe amount of light (lux) in direct sunlight.\nThe amount of light (lux) in full daylight (not direct …\nThe amount of light (lux) during a full moon on a clear …\nThe amount of light (lux) in an office building’s …\nThe amount of light (lux) in family living room lights.\nThe amount of light (lux) in a moonless, overcast night …\nThe amount of light (lux) in an office.\nThe amount of light (lux) on a overcast day; typical TV …\nThis extension trait covers shortfall in determinacy from …\nComputes the arccosine of a number. Return value is in …\nInverse hyperbolic cosine function.\nComputes the arcsine of a number. Return value is in …\nInverse hyperbolic sine function.\nComputes the arctangent of a number. Return value is in …\nComputes the four-quadrant arctangent of <code>y</code> and <code>x</code> in …\nInverse hyperbolic tangent function.\nReturns the cube root of a number.\nComputes the cosine of a number (in radians).\nHyperbolic cosine function.\nCubes the f32\nReturns <code>e^(self)</code>, (the exponential function).\nReturns <code>2^(self)</code>.\nReturns <code>e^(self) - 1</code> in a way that is accurate even if the …\nCompute the distance between the origin and a point <code>(x, y)</code> …\nReturns the natural logarithm of the number.\nReturns <code>ln(1+n)</code> (natural logarithm) more accurately than if\nReturns the base 10 logarithm of the number.\nReturns the base 2 logarithm of the number.\nRaises a number to a floating point power.\nComputes the sine of a number (in radians).\nSimultaneously computes the sine and cosine of the number, …\nHyperbolic sine function.\nSquares the f32\nComputes the tangent of a number (in radians).\nHyperbolic tangent function.\nA curve that is defined by neighbor interpolation over a …\nA curve that is defined by explicit neighbor interpolation …\nA curve that is defined by interpolation over unevenly …\nA curve that is defined by interpolation over unevenly …\nA singular element access within a path. Multiple accesses …\nAn error originating from an <code>Access</code> of an element within a …\nThe kind of <code>AccessError</code>, along with some kind-specific …\nA enumeration of all error outcomes that might happen when …\nA trait used to power array-like operations via reflection.\nAn array-like type.\nA container for compile-time array info.\nAn iterator over an <code>Array</code>.\nA const parameter.\nType information for a const generic parameter.\nAttempted to apply to types with mismatched sizez, e.g. a […\nA fixed-size list of reflected values.\nA dynamic representation of an enum.\nA list of reflected values.\nAn ordered mapping between reflected values.\nAn ordered set of reflected values.\nA struct type which allows fields to be added at runtime.\nA tuple which allows fields to be added at runtime.\nA tuple struct which allows fields to be added at runtime.\nDynamic dispatch for <code>TypePath</code>.\nDynamic dispatch for <code>Typed</code>.\nA dynamic representation of an enum variant.\nA trait used to power enum-like operations via reflection.\nAn enum-like type.\nA container for compile-time enum info, used by <code>TypeInfo</code>.\nA name-based field access on a struct.\nA index-based field access on a struct.\nAn iterator over the field values of a struct.\nA trait that enables types to be dynamically constructed …\nDerives the <code>FromReflect</code> trait.\nTrait used to generate <code>TypeData</code> for trait reflection.\nAn enum representing a generic parameter.\nThe generic parameters of a type.\nA convenience trait which combines fetching and …\nA trait which allows nested <code>Reflect</code> values to be retrieved …\nA convenience trait which combines fetching and …\nA convenience trait which combines fetching and …\nA trait which allows a type to generate its …\nAn error that occurs when using an <code>Access</code> on the wrong …\nAn error that occurs when using an <code>Access</code> on the wrong …\nAn error caused by trying to access a path that’s not …\nAn error that occurs when a type cannot downcast to a …\nCaused when a type was expected to be of a certain kind, …\nA trait used to power list-like operations via reflection.\nA list-like type.\nAn index-based access on a list.\nA container for compile-time list info.\nAn iterator over an <code>List</code>.\nA trait used to power map-like operations via reflection.\nA map-like type.\nA container for compile-time map info.\nAn iterator over the key-value pairs of a <code>Map</code>.\nAttempted to apply the wrong kind to a type, e.g. a struct …\nTried to apply incompatible types.\nEnum variant that we tried to apply to was missing a field.\nAn error that occurs when a certain type doesn’t contain …\nThe named field of a reflected struct.\nAn <code>Access</code> combined with an <code>offset</code> for more helpful error …\nAn opaque type.\nA container for compile-time info related to …\nAn error that occurs when parsing reflect path strings.\nAn error caused by an invalid path string that couldn’t …\nA pre-parsed path to an element within a type.\nThe foundational trait of <code>bevy_reflect</code>, used for accessing …\nA core trait of <code>bevy_reflect</code>, used for downcasting to …\nThe main derive macro used by <code>bevy_reflect</code> for deriving …\nA struct used to deserialize reflected instances of a type.\n<code>Reflect</code> values are commonly used in situations where the …\nType data that represents the <code>FromReflect</code> trait and allows …\nAn enumeration of the “kinds” of a reflected type.\nCaused when a type was expected to be of a certain kind, …\nA mutable enumeration of “kinds” of a reflected type.\nAn owned enumeration of “kinds” of a reflected type.\nSomething that can be interpreted as a reflection path in …\nAn error returned from a failed path string query.\nAn immutable enumeration of “kinds” of a reflected …\nMarks a type as a reflectable wrapper for a remote type.\nA struct used to serialize reflected instances of a type.\nA catch-all trait that is bound by the core reflection …\nThe remote type this type represents via reflection.\nA trait used to power set-like operations via reflection.\nA set-like type.\nA container for compile-time set info.\nA trait used to power struct-like operations via reflection…\nA struct-like type.\nStruct enums take the form:\nStruct enums take the form:\nA container for compile-time named struct info.\nType info for struct variants.\nA trait used to power tuple-like operations via reflection.\nA tuple-like type.\nTuple enums take the form:\nTuple enums take the form:\nAn iterator over the field values of a tuple.\nAn index-based access on a tuple.\nA container for compile-time tuple info.\nA trait used to power tuple struct-like operations via …\nA tuple-struct-like type.\nAn iterator over the field values of a tuple struct.\nA container for compile-time tuple struct info.\nType info for tuple variants.\nThe base representation of a Rust type.\nA type parameter.\nA trait used to type-erase type metadata.\nCompile-time type information for various reflected types.\nA <code>TypeInfo</code>-specific error.\nCaused when a variant was expected to be of a certain type…\nType information for a generic type parameter.\nA static accessor to type paths and names.\nDerives the <code>TypePath</code> trait, providing a stable alternative …\nProvides dynamic access to all methods on <code>TypePath</code>.\nRuntime storage for type metadata, registered into the …\nA registry of reflected types.\nA synchronized wrapper around a <code>TypeRegistry</code>.\nA static accessor to compile-time type information.\nUnit enums take the form:\nUnit enums take the form:\nType info for unit variants.\nThe enum we tried to apply to didn’t contain a variant …\nThe unnamed field of a reflected tuple or tuple struct.\nAn iterator over the fields in the current enum variant.\nA container for compile-time enum variant info.\nA <code>VariantInfo</code>-specific error.\nDescribes the form of an enum variant.\nRepresentation for individual element accesses within a …\nThe returns the <code>Access</code> that this <code>AccessError</code> occurred in.\nThe <code>Access</code> itself.\nAttempts to register the type described by <code>registration</code>.\nApplies the reflected array data to the given array.\nThe default debug formatter for <code>Array</code> types.\nReturns the <code>u64</code> hash of the given array.\nCompares two arrays (one concrete and one reflected) to …\nTries to apply the reflected array data to the given array …\nReturns the value as a <code>&amp;dyn Any</code>.\nReturns the value as a <code>&amp;mut dyn Any</code>.\nAttempts a cast to a <code>Array</code> trait object.\nAttempts a cast to a <code>Array</code> trait object.\nAttempts a cast to <code>ArrayInfo</code>.\nAttempts a cast to a <code>Enum</code> trait object.\nAttempts a cast to a <code>Enum</code> trait object.\nAttempts a cast to <code>EnumInfo</code>.\nAttempts a cast to a <code>List</code> trait object.\nAttempts a cast to a <code>List</code> trait object.\nAttempts a cast to <code>ListInfo</code>.\nAttempts a cast to a <code>Map</code> trait object.\nAttempts a cast to a <code>Map</code> trait object.\nAttempts a cast to <code>MapInfo</code>.\nAttempts a cast to a <code>PartialReflect</code> trait object.\nAttempts a cast to a <code>PartialReflect</code> trait object.\nAttempts a cast to <code>OpaqueInfo</code>.\nCasts this type to a reflected value.\nCasts this type to a mutable, reflected value.\nCasts this type to a fully-reflected value.\nConvert <code>Ptr</code> into <code>&amp;dyn Reflect</code>.\nCasts this type to a mutable, fully-reflected value.\nConvert <code>PtrMut</code> into <code>&amp;mut dyn Reflect</code>.\nConverts a reference of this wrapper to a reference of its …\nConverts a mutable reference of this wrapper to a mutable …\nAttempts a cast to a <code>Set</code> trait object.\nAttempts a cast to a <code>Set</code> trait object.\nAttempts a cast to a <code>Struct</code> trait object.\nAttempts a cast to a <code>Struct</code> trait object.\nAttempts a cast to <code>StructInfo</code>.\nAttempts a cast to <code>StructVariantInfo</code>.\nAttempts a cast to a <code>Tuple</code> trait object.\nAttempts a cast to a <code>Tuple</code> trait object.\nAttempts a cast to <code>TupleInfo</code>.\nAttempts a cast to a <code>TupleStruct</code> trait object.\nAttempts a cast to a <code>TupleStruct</code> trait object.\nAttempts a cast to <code>TupleStructInfo</code>.\nAttempts a cast to <code>TupleVariantInfo</code>.\nAttempts a cast to <code>UnitVariantInfo</code>.\nConverts a reference of the remote type to a reference of …\nConverts a mutable reference of the remote type to a …\nThe compile-time capacity of the array.\nClones the map, producing a <code>DynamicMap</code>.\nClones the set, producing a <code>DynamicSet</code>.\nClones the struct into a <code>DynamicStruct</code>.\nClones the struct into a <code>DynamicTuple</code>.\nClones the struct into a <code>DynamicTupleStruct</code>.\nClones the list, producing a <code>DynamicArray</code>.\nClones the list, producing a <code>DynamicList</code>.\nClones the value as a <code>Reflect</code> trait object.\nChecks if the given value is contained in the set\nReturns true if this registration contains the given type …\nReturns true if this registration contains the given type …\nChecks if a variant with the given name exists within this …\nSee <code>TypePath::crate_name</code>.\nSee <code>TypePath::crate_name</code>.\nReturns the custom attributes for this item.\nReturns the custom attributes for this item.\nReturns the custom attributes for this item.\nReturns the custom attributes for this item.\nReturns the custom attributes for this item.\nReturns the custom attributes for this variant.\nReturns the custom attributes for this item.\nReturns the custom attributes for this item.\nReturns the custom attributes for this item.\nReturns a reference to the value of type <code>T</code> in this …\nReturns a reference to the value with the given <code>TypeId</code> in …\nReturns a mutable reference to the value of type <code>T</code> in this …\nReturns a mutable reference to the value with the given …\nThe default type for the parameter, if any.\nThe default value for the parameter, if any.\nReturns a reference to this <code>Access</code>’s inner value as a …\nThe docstring of this array, if any.\nThe docstring of this field, if any.\nThe docstring of this field, if any.\nThe docstring of this list, if any.\nThe docstring of this map, if any.\nThe docstring of this set, if any.\nThe docstring of this struct, if any.\nThe docstring of this tuple, if any.\nThe docstring of this struct, if any.\nThe docstring of the underlying type, if any.\nThe docstring of this dynamic type, if any.\nThe docstring of this enum, if any.\nThe docstring of the underlying variant, if any.\nThe docstring of this variant, if any.\nThe docstring of this variant, if any.\nThe docstring of this variant, if any.\nReturns a boxed object from a boxed trait object if the …\nReturns a mutable reference to the object within the trait …\nReturns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …\nReturns a reference to the object within the trait object …\nDrain the elements of this array to get a vector of owned …\nDrain the elements of this list to get a vector of owned …\nDrain the key-value pairs of this map to get a vector of …\nDrain the values of this set to get a vector of owned …\nDrain the fields of this tuple to get a vector of owned …\nCreate a type registry with <em>no</em> registered types.\nThe default debug formatter for <code>Enum</code> types.\nReturns the <code>u64</code> hash of the given enum.\nCompares an <code>Enum</code> with a <code>PartialReflect</code> value.\nReturns a reference to the value of the field named <code>name</code> …\nReturns a reference to the value of the field with index …\nReturns a reference to the value of the field with index …\nReturns a reference to the value of the field (in the …\nGet the field with the given name.\nGet the field with the given name.\nReturns a reference to the value of the field with index …\nReturns a reference to the value of the field (in the …\nGet the field at the given index.\nGet the field at the given index.\nGet the field at the given index.\nGet the field at the given index.\nGet the field at the given index.\nReturns a mutable reference to the value of the field with …\nReturns a mutable reference to the value of the field (in …\nReturns the number of fields in the struct.\nReturns the number of fields in the tuple.\nReturns the number of fields in the tuple struct.\nReturns the number of fields in the current variant.\nThe total number of fields in this struct.\nThe total number of fields in this tuple.\nThe total number of fields in this struct.\nThe total number of fields in this variant.\nThe total number of fields in this variant.\nReturns a mutable reference to the value of the field …\nReturns a mutable reference to the value of the field with …\nReturns a mutable reference to the value of the field with …\nReturns a mutable reference to the value of the field (in …\nA slice containing the names of all fields in order.\nA slice containing the names of all fields in order.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a <code>DynamicEnum</code> from an existing one.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a dynamic struct that doesn’t represent a type …\nGet a function pointer to turn a <code>Ptr</code> into <code>&amp;dyn Reflect</code> for …\nGet a function pointer to turn a <code>PtrMut</code> into …\nCreate a <code>DynamicEnum</code> from an existing one.\nConstructs a concrete instance of <code>Self</code> from a reflected …\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nGets the generic parameters for this type.\nGets the generic parameters for this type.\nGets the generic parameters for this type.\nGets the generic parameters for this type.\nGets the generic parameters for this type.\nGets the generic parameters for this type.\nGets the generic parameters for this type.\nGets the generic parameters for this type.\nGets the generic parameters for this type.\nGets the generic parameters for this type.\nReturns a reference to the element at <code>index</code>, or <code>None</code> if …\nReturns a reference to the element at <code>index</code>, or <code>None</code> if …\nReturns a reference to the value associated with the given …\nReturns a reference to the value.\nReturns a reference to the <code>TypeRegistration</code> of the type …\nReturns the key-value pair at <code>index</code> by reference, or <code>None</code> …\nReturns the key-value pair at <code>index</code> by reference where the …\nGets a custom attribute by type.\nGets a custom attribute by type.\nGets a custom attribute by type.\nGets a custom attribute by type.\nGets a custom attribute by type.\nGets a custom attribute by type.\nGets a custom attribute by type.\nGets a custom attribute by type.\nGets a custom attribute by type.\nGets a custom attribute by its <code>TypeId</code>.\nGets a custom attribute by its <code>TypeId</code>.\nGets a custom attribute by its <code>TypeId</code>.\nGets a custom attribute by its <code>TypeId</code>.\nGets a custom attribute by its <code>TypeId</code>.\nGets a custom attribute by its <code>TypeId</code>.\nGets a custom attribute by its <code>TypeId</code>.\nGets a custom attribute by its <code>TypeId</code>.\nGets a custom attribute by its <code>TypeId</code>.\nReturns a reference to the value of the field named <code>name</code>, …\nReturns a reference to the value of the field with index …\nReturns a reference to the value of the field with index …\nReturns a mutable reference to the value of the field …\nReturns a mutable reference to the value of the field with …\nReturns a mutable reference to the value of the field with …\nReturns a mutable reference to the element at <code>index</code>, or …\nReturns a mutable reference to the element at <code>index</code>, or …\nReturns a mutable reference to the value associated with …\nReturns a mutable reference to the <code>TypeRegistration</code> of the …\nFinds the generic parameter with the given name.\nWill return <code>None</code> if <code>TypeInfo</code> is not available.\nWill return <code>None</code> if <code>TypeInfo</code> is not available.\nWill return <code>None</code> if <code>TypeInfo</code> is not available.\nWill return <code>None</code> if <code>TypeInfo</code> is not available.\nWill return <code>None</code> if <code>TypeInfo</code> is not available.\nReturns the <code>TypeInfo</code> of the type <em>represented</em> by this value.\nReturns a reference to the <code>TypeData</code> of type <code>T</code> associated …\nReturns a mutable reference to the <code>TypeData</code> of type <code>T</code> …\nReturns the <code>TypeInfo</code> associated with the given <code>TypeId</code>.\nReturns the default <code>TypeRegistration</code> for this type.\nReturns a reference to the <code>TypeRegistration</code> of the type …\nReturns a mutable reference to the <code>TypeRegistration</code> of the …\nReturns a reference to the <code>TypeRegistration</code> of the type …\nReturns a mutable reference to the <code>TypeRegistration</code> of the …\nReturns <code>true</code> if this item has a custom attribute of the …\nReturns <code>true</code> if this item has a custom attribute of the …\nReturns <code>true</code> if this item has a custom attribute of the …\nReturns <code>true</code> if this item has a custom attribute of the …\nReturns <code>true</code> if this item has a custom attribute of the …\nReturns <code>true</code> if this variant has a custom attribute of the …\nReturns <code>true</code> if this item has a custom attribute of the …\nReturns <code>true</code> if this item has a custom attribute of the …\nReturns <code>true</code> if this item has a custom attribute of the …\nReturns <code>true</code> if this item has a custom attribute with the …\nReturns <code>true</code> if this item has a custom attribute with the …\nReturns <code>true</code> if this item has a custom attribute with the …\nReturns <code>true</code> if this item has a custom attribute with the …\nReturns <code>true</code> if this item has a custom attribute with the …\nReturns <code>true</code> if this variant has a custom attribute with …\nReturns <code>true</code> if this item has a custom attribute with the …\nReturns <code>true</code> if this item has a custom attribute with the …\nReturns <code>true</code> if this item has a custom attribute with the …\nReturns the <code>TypeId</code> of the type.\nSee <code>TypePath::type_ident</code>.\nSee <code>TypePath::type_ident</code>.\nA macro used to generate a <code>FromReflect</code> trait …\nA replacement for <code>#[derive(Reflect)]</code> to be used with …\nA macro used to generate reflection trait implementations …\nA replacement for deriving <code>TypePath</code> for use on foreign …\nReturns the index of the field.\nReturns the index of the field (in the current variant) …\nGet the index of the field with the given name.\nGets the index of the field with the given name.\nGet the index of the variant with the given name.\nGet the index of the field with the given name.\nInserts an element at position <code>index</code> within the list, …\nInserts an instance of <code>T</code> into this registration’s type …\nInserts a typed key-value pair into the map.\nInserts a typed value into the set.\nInserts a field named <code>name</code> with the typed value <code>value</code> into …\nAppends a typed element with value <code>value</code> to the tuple.\nAppends a typed element with value <code>value</code> to the tuple …\nInserts a key-value pair into the map.\nInserts a value into the set.\nInserts a field named <code>name</code> with value <code>value</code> into the …\nAppends an element with value <code>value</code> to the tuple.\nAppends an element with value <code>value</code> to the tuple struct.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the value as a <code>Box&lt;dyn Any&gt;</code>.\nAttempts a cast to a <code>Array</code> trait object.\nAttempts a cast to a <code>Enum</code> trait object.\nAttempts a cast to a <code>List</code> trait object.\nAttempts a cast to a <code>Map</code> trait object.\nConverts this into an “owned” value.\nCasts this type to a boxed, reflected value.\nCasts this type to a boxed, fully-reflected value.\nConverts this wrapper into its remote type.\nAttempts a cast to a <code>Set</code> trait object.\nAttempts a cast to a <code>Struct</code> trait object.\nAttempts a cast to a <code>Tuple</code> trait object.\nAttempts a cast to a <code>TupleStruct</code> trait object.\nAttempts a cast to a <code>PartialReflect</code> trait object.\nConverts the remote type into this wrapper.\nReturns true if the trait object wraps an object of type …\nCheck if the given type matches this one.\nCheck if the given type matches this one.\nCheck if the given type matches this one.\nCheck if the given type matches this one.\nCheck if the given type matches this one.\nCheck if the given type matches this one.\nCheck if the given type matches this one.\nCheck if the given type matches this one.\nCheck if the given type matches this one.\nCheck if the given type matches this one.\nCheck if the given type matches this one.\nCheck if the given type matches this one.\nCheck if the given type matches this one.\nCheck if the given type matches this one.\nCheck if the given type matches this one.\nCheck if the given type matches this one.\nReturns <code>true</code> if the given short type path is ambiguous, …\nWhether the generic parameter is a const parameter.\nReturns <code>true</code> if the collection contains no elements.\nReturns <code>true</code> if the collection contains no elements.\nReturns <code>true</code> if the list contains no elements.\nReturns <code>true</code> if the list contains no elements.\nReturns true if this registration has no type data.\nReturns true if the current variant’s type matches the …\nThe <code>TypeInfo</code> of the array item.\nThe <code>TypeInfo</code> of the list item.\nThe type of the array item.\nThe type of the list item.\nReturns an iterator over the array.\nReturns an iterator over the list.\nReturns an iterator over the key-value pairs of the map.\nReturns an iterator over the values of the set.\nReturns an iterator over the <code>TypeRegistration</code>s of the …\nReturns an iterator over all type data in this …\nIterate over the fields of this struct.\nIterate over the fields of this tuple.\nIterate over the fields of this struct.\nIterate over the variants of this enum.\nIterate over the fields of this variant.\nIterate over the fields of this variant.\nReturns an iterator over the values of the reflectable …\nReturns an iterator over the values of the tuple’s …\nReturns an iterator over the values of the tuple struct’…\nReturns an iterator over the values of the current variant…\nReturns a mutable iterator over the <code>TypeRegistration</code>s of …\nReturns a mutable iterator over all type data in this …\nChecks to see if the <code>TypeData</code> of type <code>T</code> is associated with …\nThe <code>TypeInfo</code> of the key type.\nThe type of the key type.\nReturns the “kind” of this reflected type without any …\nReturns the “kind” of this reflected type without any …\nReturns the “kind” of this reflected type without any …\nReturns the kind of <code>AccessError</code>.\nReturns the kind of this <code>TypeInfo</code>.\nReturns the number of elements in the array.\nReturns the number of elements in the list.\nReturns the number of elements in the map.\nReturns the number of elements in the set.\nThe total count of type data in this registration.\nApplies the elements of <code>b</code> to the corresponding elements of …\nThe default debug formatter for <code>List</code> types.\nReturns the <code>u64</code> hash of the given list.\nCompares a <code>List</code> with a <code>Reflect</code> value.\nTries to apply the elements of <code>b</code> to the corresponding …\nApplies the elements of reflected map <code>b</code> to the …\nThe default debug formatter for <code>Map</code> types.\nCompares a <code>Map</code> with a <code>PartialReflect</code> value.\nTries to apply the elements of reflected map <code>b</code> to the …\nSee <code>TypePath::module_path</code>.\nSee <code>TypePath::module_path</code>.\nThe name of the field.\nThe name of this variant.\nThe name of this variant.\nThe name of this variant.\nThe name of the generic parameter.\nThe name of the type parameter.\nThe name of the const parameter.\nReturns the name of the field with index <code>index</code>.\nReturns the name of the field (in the current variant) …\nCreates a new <code>ArrayIter</code>.\nCreates a new <code>ListIter</code>.\nCreates a new <code>MapIter</code>.\nCreate a type registry with default registrations for …\nCreate a new <code>ArrayInfo</code>.\nCreate a new <code>NamedField</code>.\nCreate a new <code>ListInfo</code>.\nCreate a new <code>MapInfo</code>.\nCreate a new <code>SetInfo</code>.\nCreate a new <code>StructInfo</code>.\nCreate a new <code>TupleInfo</code>.\nCreate a new <code>TupleStructInfo</code>.\nCreate a new <code>DynamicEnum</code> to represent an enum at runtime.\nCreate a new <code>EnumInfo</code>.\nCreate a new <code>StructVariantInfo</code>.\nCreate a new <code>TupleVariantInfo</code>.\nCreate a new <code>UnitVariantInfo</code>.\nCreates an empty set of generics.\nCreates a new type parameter with the given name.\nCreates a new const parameter with the given name.\nCreate a new <code>DynamicEnum</code> with a variant index to represent …\nCreates type registration information for <code>T</code>.\nCreate a new <code>Type</code> from a type that implements <code>TypePath</code>.\nCreates a new table from a type.\nIf the <code>Access</code> was created with a parser or an offset was …\nA character offset in the string the path was parsed from.\nRegisters the type described by <code>registration</code>.\nParses a <code>ParsedPath</code> from a string.\nSimilar to <code>Self::parse</code> but only works on <code>&amp;&#39;static str</code> and …\nSee <code>TypePath::type_path</code>.\nSee <code>TypePath::type_path</code>.\nRemoves the <em>back</em> element from the list and returns it, or …\nThe reflect prelude.\nAppends an element to the <em>back</em> of the list.\nAppends a typed value to the list.\nAppends a <code>Reflect</code> trait object to the list.\nTakes a read lock on the underlying <code>TypeRegistry</code>.\nSee <code>TypePath::crate_name</code>.\nGets a reference to the specified element on the given …\nGets a mutable reference to the specified element on the …\nSee <code>TypePath::module_path</code>.\nReturns a mutable enumeration of “kinds” of type.\nReturns an owned enumeration of “kinds” of type.\nReturns an immutable enumeration of “kinds” of type.\nGenerates a wrapper type that can be used to “derive …\nSee <code>TypePath::short_type_path</code>.\nA macro that automatically generates type data for traits, …\nSee <code>TypePath::type_ident</code>.\nSee <code>Typed::type_info</code>.\nSee <code>TypePath::type_path</code>.\nAttempts to register the type <code>T</code> if it has not yet been …\nRegisters the type data <code>D</code> for type <code>T</code>.\nRegisters other types needed by this type.\nRemoves and returns the element at position <code>index</code> within …\nRemoves an entry from the map.\nRemoves a value from the set.\nPerforms a type-checked assignment of a reflected value to …\nApplies the elements of reflected set <code>b</code> to the …\nThe default debug formatter for <code>Set</code> types.\nCompares a <code>Set</code> with a <code>PartialReflect</code> value.\nSets the type to be represented by this <code>DynamicArray</code>.\nSets the type to be represented by this <code>DynamicList</code>.\nSets the type to be represented by this <code>DynamicMap</code>.\nSets the type to be represented by this <code>DynamicSet</code>.\nSets the type to be represented by this <code>DynamicStruct</code>.\nSets the type to be represented by this <code>DynamicTuple</code>.\nSets the type to be represented by this <code>DynamicTupleStruct</code>.\nSets the type to be represented by this <code>DynamicEnum</code>.\nTries to apply the elements of reflected set <code>b</code> to the …\nSet the current enum variant represented by this struct.\nSet the current enum variant represented by this struct …\nSee <code>TypePath::short_type_path</code>.\nSee <code>TypePath::short_type_path</code>.\nReturns a short, pretty-print enabled path to the type.\nThe default debug formatter for <code>Struct</code> types.\nCompares a <code>Struct</code> with a <code>PartialReflect</code> value.\nTries to <code>apply</code> a reflected value to this value.\nAttempts to cast this type to a fully-reflected value.\nAttempts to cast this type to a mutable, fully-reflected …\nAttempts to cast this type to a boxed, fully-reflected …\nApplies the elements of <code>b</code> to the corresponding elements of …\nThe default debug formatter for <code>Tuple</code> types.\nCompares a <code>Tuple</code> with a <code>PartialReflect</code> value.\nThe default debug formatter for <code>TupleStruct</code> types.\nCompares a <code>TupleStruct</code> with a <code>PartialReflect</code> value.\nTries to apply the elements of <code>b</code> to the corresponding …\nThe underlying Rust type.\nThe underlying Rust type.\nThe underlying Rust type.\nThe underlying Rust type.\nThe underlying Rust type.\nThe underlying Rust type.\nThe underlying Rust type.\nThe underlying Rust type.\nThe underlying Rust type.\nThe underlying Rust type.\nThe underlying Rust type.\nThe underlying Rust type.\nThe underlying Rust type.\nThe underlying Rust type.\nThe underlying Rust type.\nReturns the <code>TypeId</code> of the type.\nThe <code>TypeId</code> of this type.\nThe <code>TypeId</code> of this type.\nThe <code>TypeId</code> of this type.\nThe <code>TypeId</code> of this type.\nThe <code>TypeId</code> of this type.\nThe <code>TypeId</code> of this type.\nThe <code>TypeId</code> of this type.\nThe <code>TypeId</code> of this type.\nThe <code>TypeId</code> of this type.\nThe <code>TypeId</code> of the underlying type.\nThe <code>TypeId</code> of this type.\nReturns the <code>TypeId</code> that the <code>ReflectFromPtr</code> was constructed …\nThe <code>TypeId</code> of this type.\nThe <code>TypeId</code> of this type.\nThe <code>TypeId</code> of this type.\nThe <code>TypeId</code> of this type.\nReturns the compile-time info for the underlying type.\nReturns a reference to the registration’s <code>TypeInfo</code>\nThe <code>TypeInfo</code> of the field.\nThe <code>TypeInfo</code> of the field.\nReturns the fully qualified path of the underlying type.\nThe stable, full type path of this type.\nThe stable, full type path of this type.\nThe stable, full type path of this type.\nThe stable, full type path of this type.\nThe stable, full type path of this type.\nThe stable, full type path of this type.\nThe stable, full type path of this type.\nThe stable, full type path of this type.\nThe stable, full type path of this type.\nThe stable, full type path of the underlying type.\nThe stable, full type path of this type.\nThe stable, full type path of this type.\nThe stable, full type path of this type.\nThe stable, full type path of this type.\nThe stable, full type path of this type.\nA representation of the type path of this type.\nA representation of the type path of this type.\nA representation of the type path of this type.\nA representation of the type path of this type.\nA representation of the type path of this type.\nA representation of the type path of this type.\nA representation of the type path of this type.\nA representation of the type path of this type.\nA representation of the type path of this type.\nA representation of the type path of the underlying type.\nA representation of the type path of this.\nA representation of the type path of this type.\nA representation of the type path of this type.\nA representation of the type path of this type.\nA representation of the type path of this type.\nA representation of the type path of this type.\nHelpers for working with Bevy reflection.\nThe <code>TypeInfo</code> of the value type.\nThe type of the value type.\nThe type of the value.\nGet a variant with the given name.\nGet a variant at the given index.\nThe index of the current variant.\nThe number of variants in this enum.\nThe name of the current variant.\nA slice containing the names of all variants in order.\nReturns the full path to the current variant.\nReturns the full path to the given variant.\nThe type of the current variant.\nReturns the type of this variant.\nAdds the given generic parameter to the set.\nSets the custom attributes for this field.\nSets the custom attributes for this field.\nSets the custom attributes for this struct.\nSets the custom attributes for this struct.\nSets the custom attributes for this enum.\nSets the custom attributes for this variant.\nSets the custom attributes for this variant.\nSets the custom attributes for this variant.\nSets the default type for the parameter.\nSets the default value for the parameter.\nSets the docstring for this array.\nSets the docstring for this field.\nSets the docstring for this field.\nSets the docstring for this list.\nSets the docstring for this map.\nSets the docstring for this set.\nSets the docstring for this struct.\nSets the docstring for this tuple.\nSets the docstring for this struct.\nSets the docstring for this type.\nSets the docstring for this enum.\nSets the docstring for this variant.\nSets the docstring for this variant.\nSets the docstring for this variant.\nSets the generic parameters for this type.\nSets the generic parameters for this type.\nSets the generic parameters for this type.\nSets the generic parameters for this type.\nSets the generic parameters for this type.\nSets the generic parameters for this type.\nSets the generic parameters for this type.\nSets the generic parameters for this type.\nSets the generic parameters for this type.\nTakes a write lock on the underlying <code>TypeRegistry</code>.\nThe actual <code>ReflectKind</code> that was found.\nThe actual <code>VariantType</code> that was found.\nThe <code>ReflectKind</code> that was expected based on the <code>Access</code>.\nThe <code>VariantType</code> that was expected based on the <code>Access</code>.\nThe underlying error.\nPosition in <code>path</code>.\nThe path that the error occurred in.\nA singular element access within a path. Multiple accesses …\nA name-based field access on a struct.\nA index-based field access on a struct.\nAn index-based access on a list.\nAn index-based access on a tuple.\nA collection of custom attributes for a type, field, or …\nReturns <code>true</code> if this collection contains a custom …\nReturns <code>true</code> if this collection contains a custom …\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nGets a custom attribute by type.\nGets a custom attribute by its <code>TypeId</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this collection is empty.\nReturns an iterator over all custom attributes.\nReturns the number of custom attributes in this collection.\nInserts a custom attribute into the collection.\nAn object-safe equivalent of Serde’s <code>Deserializer</code> trait.\nContains the error value\nError when a <code>Serializer</code> or <code>Deserializer</code> trait object fails.\nContains the success value\nResult type alias where the error is <code>erased_serde::Error</code>.\nAn object-safe equivalent of Serde’s <code>Serialize</code> trait.\nAn object-safe equivalent of Serde’s <code>Serializer</code> trait.\nDeserialize a value of type <code>T</code> from the given trait object.\nConvert any Serde <code>Deserializer</code> to a trait object.\nConvert any Serde <code>Serializer</code> to a trait object.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialize the given type-erased serializable value.\nImplement <code>serde::Serialize</code> for a trait object that has …\nA trait that enables types to be dynamically constructed …\nDerives the <code>FromReflect</code> trait.\nA convenience trait which combines fetching and …\nA trait which allows nested <code>Reflect</code> values to be retrieved …\nA convenience trait which combines fetching and …\nThe foundational trait of <code>bevy_reflect</code>, used for accessing …\nA core trait of <code>bevy_reflect</code>, used for downcasting to …\nThe main derive macro used by <code>bevy_reflect</code> for deriving …\nA struct used to provide the default value of a type.\nA struct used to deserialize reflected instances of a type.\nType data that represents the <code>FromReflect</code> trait and allows …\nSomething that can be interpreted as a reflection path in …\nA struct used to serialize reflected instances of a type.\nA trait used to power struct-like operations via reflection…\nA trait used to power tuple struct-like operations via …\nA static accessor to type paths and names.\nDerives the <code>TypePath</code> trait, providing a stable alternative …\nReturns the value as a <code>&amp;dyn Any</code>.\nReturns the value as a <code>&amp;mut dyn Any</code>.\nCasts this type to a reflected value.\nCasts this type to a mutable, reflected value.\nCasts this type to a fully-reflected value.\nCasts this type to a mutable, fully-reflected value.\nClones the struct into a <code>DynamicStruct</code>.\nClones the struct into a <code>DynamicTupleStruct</code>.\nClones the value as a <code>Reflect</code> trait object.\nReturns a reference to the value of the field named <code>name</code> …\nReturns a reference to the value of the field with index …\nReturns a reference to the value of the field with index …\nReturns a mutable reference to the value of the field with …\nReturns the number of fields in the struct.\nReturns the number of fields in the tuple struct.\nReturns a mutable reference to the value of the field …\nReturns a mutable reference to the value of the field with …\nConstructs a concrete instance of <code>Self</code> from a reflected …\nReturns a reference to the value of the field named <code>name</code>, …\nReturns a reference to the value of the field with index …\nReturns a mutable reference to the value of the field …\nReturns a mutable reference to the value of the field with …\nReturns the <code>TypeInfo</code> of the type <em>represented</em> by this value.\nReturns the value as a <code>Box&lt;dyn Any&gt;</code>.\nCasts this type to a boxed, reflected value.\nCasts this type to a boxed, fully-reflected value.\nReturns an iterator over the values of the reflectable …\nReturns an iterator over the values of the tuple struct’…\nReturns the name of the field with index <code>index</code>.\nGets a reference to the specified element on the given …\nGets a mutable reference to the specified element on the …\nReturns a mutable enumeration of “kinds” of type.\nReturns an owned enumeration of “kinds” of type.\nReturns an immutable enumeration of “kinds” of type.\nA macro that automatically generates type data for traits, …\nPerforms a type-checked assignment of a reflected value to …\nReturns a short, pretty-print enabled path to the type.\nTries to <code>apply</code> a reflected value to this value.\nAttempts to cast this type to a fully-reflected value.\nAttempts to cast this type to a mutable, fully-reflected …\nAttempts to cast this type to a boxed, fully-reflected …\nReturns the fully qualified path of the underlying type.\nTrait used to provide finer control when deserializing a …\nType data used to deserialize a <code>PartialReflect</code> type with a …\nA general purpose deserializer for reflected types.\nAllows overriding the default deserialization behavior of …\nType data used to serialize a <code>Reflect</code> type with a custom …\nA general purpose serializer for reflected types.\nAllows overriding the default serialization behavior of …\nA type-erased serializable value.\nContains data relevant to the automatic reflect powered …\nTrait used to provide finer control when serializing a …\nData needed for (de)serialization of a skipped field.\nA deserializer for type registrations.\nA deserializer for reflected types whose <code>TypeRegistration</code> …\nA serializer for reflected types whose type will be known …\nDeserialize a <code>PartialReflect</code> type with this type data’s …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates a default instance of the skipped field at the …\nGenerates a default instance of the field.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if there are no skipped fields.\nReturns true if the given index corresponds to a field …\nReturns an iterator over the skipped fields.\nReturns the number of skipped fields.\nCreates a deserializer with no processor.\nCreates a typed deserializer with no processor.\nCreates a serializer with no processor.\nCreates a serializer with no processor.\nCreates a new <code>SerializationData</code> instance with the given …\nCreate a new <code>SkippedField</code>.\nCreates a new <code>TypedReflectDeserializer</code> for the given type <code>T</code>\nSerialize a <code>Reflect</code> type with this type data’s custom …\nAttempts to deserialize the value which a …\nAttempts to serialize the value which a …\nCreates a deserializer with a processor.\nCreates a typed deserializer with a processor.\nCreates a serializer with a processor.\nCreates a serializer with a processor.\nA struct used to provide the default value of a type.\nA container for <code>TypedProperty</code> over generic types, allowing …\nSee <code>GenericTypeCell</code>.\nSee <code>GenericTypeCell</code>.\nA container for <code>TypeInfo</code> over non-generic types, allowing …\nSee <code>NonGenericTypeCell</code>.\nUsed to store a <code>String</code> in a <code>GenericTypePathCell</code> as part of …\nA type that can be stored in a (<code>Non</code>)<code>GenericTypeCell</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nReturns a reference to the <code>TypedProperty</code> stored in the …\nReturns a reference to the <code>TypedProperty</code> stored in the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInitialize a <code>NonGenericTypeCell</code> for non-generic types.\nInitialize a <code>GenericTypeCell</code> for generic types.\nDeterministic fixed state hasher to be used by …\nCleanup render resources here.\nA helper for accessing <code>MainWorld</code> content using a system …\nThis is used for applying the commands from the …\nSchedule which extract data from the main world and …\nThe simulation <code>World</code> of the application, stored as a …\nCreate any additional views such as those used for shadow …\nSort the <code>SortedRenderPhase</code>s and <code>BinKey</code>s here.\nFinal cleanup occurs: all entities will be despawned.\nPrepare render resources from extracted data for the GPU …\nPrepare assets that have been created/modified/removed …\nA sub-set within <code>Prepare</code> for constructing bind groups, or …\nA sub-set within <code>Prepare</code> for initializing buffers, …\nFlush buffers after <code>PrepareResources</code>, but before …\nQueue drawable entities as phase items in render phases …\nA sub-set within <code>Queue</code> where mesh entity queue systems are …\nThe main render schedule.\nActual rendering happens here. In most cases, only the …\nA label for the rendering sub-app.\nContains the default Bevy rendering backend based on wgpu.\nThe systems sets of the default <code>App</code> rendering schedule.\nSets up the base structure of the rendering <code>Schedule</code>.\nInitializes the renderer, sets up the <code>RenderSet</code> and …\nInfrastructure for recording render diagnostics.\nConvenience logic for turning components from the main …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe render prelude.\nThe modular rendering abstraction responsible for queuing, …\nIf <code>true</code>, disables asynchronous pipeline compilation. This …\nCombines the color of the fragments with the colors behind …\nSets how a material’s base color alpha channel is used …\nSpreads the fragment out over a hardware-dependent number …\nThe base color alpha value defines the opacity of the …\nReduce transparency to fully opaque or fully transparent …\nCombines the color of the fragments with the colors behind …\nBase color alpha values are overridden to be fully opaque …\nSimilar to <code>AlphaMode::Blend</code>, however assumes RGB channel …\nThe per-instance data to be inserted into the …\nThe per-instance data that was inserted into the …\nData used for comparison between phase items. If the …\nA trait to support getting data used for batching draw …\nA trait to support getting data used for batching draw …\nAdd this component to mesh entities to disable automatic …\nThe system parameters <code>GetBatchData::get_batch_data</code> needs in\nReturns the argument unchanged.\nGet the per-instance data to be inserted into the …\nPushes <code>gpu_preprocessing::IndirectParameters</code> necessary to …\nGet the per-instance data to be inserted into the …\nReturns the index of the <code>GetFullBatchData::BufferInputData</code> …\nReturns the index of the <code>GetFullBatchData::BufferInputData</code> …\nBatching functionality when GPU preprocessing is in use.\nCalls <code>U::from(self)</code>.\nBatching functionality when GPU preprocessing isn’t in …\nSorts a render phase that uses bins.\nThe GPU buffers holding the data needed to render batches.\nBoth GPU preprocessing and GPU culling are available.\nRecords whether GPU preprocessing and/or GPU culling are …\nThe <code>wgpu</code> indirect parameters structure.\nThe buffer containing the list of <code>IndirectParameters</code>, for …\nNo GPU preprocessing support is available at all.\nOne invocation of the preprocessing shader: i.e. one mesh …\nThe buffer of GPU preprocessing work items for a single …\nGPU preprocessing is available, but GPU culling isn’t.\nFor <code>ArrayIndirectParameters</code>, <code>first_instance</code>; for …\nCreates batches for a render phase that uses bins.\nBatch the items in a sorted render phase, when GPU …\nThe buffer of work items.\nClears out the buffers in preparation for a new frame.\nA system that runs early in extraction and clears out all …\nThe uniform data inputs for the current frame.\nA storage area for the buffer data that the GPU compute …\nA system that removes GPU preprocessing work item buffers …\nFor <code>ArrayIndirectParameters</code>, this is padding; for …\nFor <code>ArrayIndirectParameters</code>, <code>first_vertex</code>; for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nTrue if we’re using GPU culling.\nThe index of the batch input data in the input buffer that …\nThe number of instances we’re going to draw.\nReturns the binding of the buffer that contains the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates new buffers.\nCreates the indirect parameters buffer.\nIn direct mode, this is the index of the <code>MeshUniform</code> in …\nThe uniform data inputs for the previous frame.\nFor <code>ArrayIndirectParameters</code>, <code>vertex_count</code>; for …\nThe index of the buffer data in the current input buffer …\nA system that writes all instance buffers to the GPU.\nThe GPU buffers holding the data needed to render batches.\nCreates batches for a render phase that uses bins, when …\nBatch the items in a sorted render phase, when GPU …\nA system that clears out the <code>BatchedInstanceBuffer</code> for the …\nReturns the argument unchanged.\nReturns the binding of the buffer that contains the …\nCalls <code>U::from(self)</code>.\nCreates a new buffer.\nWrites the instance buffer data to the GPU.\nKeeping the aspect ratio while the axes can’t be bigger …\nKeeping the aspect ratio while the axes can’t be smaller …\nThis value was calibrated to match Blender’s …\nThe defining <code>Component</code> for camera entities, storing …\nThis component lets you control the <code>TextureUsages</code> field of …\nControl how this camera outputs once rendering is …\nTrait to control the projection matrix of a camera.\nAdds <code>Camera</code> driver systems for a given projection type.\nConfigures the <code>RenderGraph</code> name assigned to be run for a …\nLabel for <code>camera_system&lt;T&gt;</code>, shared across all <code>T</code>.\nA <code>Resource</code> that stores the color that is used to clear the …\nFor a camera, specifies the color used to clear the …\nHolds internally computed <code>Camera</code> values.\nThe given clear color is used, overriding the <code>ClearColor</code> …\nThe clear color is taken from the world’s <code>ClearColor</code> …\nThis value was calibrated to match Blender’s …\nHow much energy a <code>Camera3d</code> absorbs from incoming light.\nManually specify the projection’s size, ignoring window …\nKeep the projection’s width constant; height will be …\nKeep the projection’s height constant; width will be …\nImage to which the camera’s view is rendered.\nImage to which the camera’s view is rendered.\nThe Normalized Device Coordinates could not be computed …\nA manually managed <code>TextureView</code> for use as a …\nA unique id that corresponds to a specific …\nStores manually managed <code>ManualTextureView</code>s for use as a …\nCamera component specifying a mip bias to apply when …\nThe pre-computed size of the viewport was not available.\nNo clear color is used: the camera will simply draw on top …\nNormalized version of the render target.\nProject a 3D space onto a 2D surface using parallel lines, …\nThe computed coordinate was beyond the <code>Camera</code>’s far …\nThe computed coordinate was beyond the <code>Camera</code>’s near …\nA 3D camera projection in which distant objects appear …\nParameters based on physical camera characteristics for …\nA configurable <code>CameraProjection</code> that can select its …\nThe “target” that a <code>Camera</code> will render to. For …\nInformation about the current <code>RenderTarget</code>.\nScaling mode for <code>OrthographicProjection</code>.\nSkips writing the camera output to the configured render …\nCameras sorted by their order field. This is updated in …\nSettings to define a camera sub view.\nA subpixel offset to jitter a perspective camera’s …\nTexture View to which the camera’s view is rendered. …\nTexture View to which the camera’s view is rendered. …\nRender viewport configuration for the <code>Camera</code> component.\nError returned when a conversion between world-space and …\nWindow to which the camera’s view is rendered.\nWindow to which the camera’s view is rendered.\nMatch the viewport size.\nWrites the camera output to configured render target.\nhttps://en.wikipedia.org/wiki/F-number\nThe area that the projection covers relative to …\nGet a handle to the render target’s image, or <code>None</code> if …\nThe aspect ratio (width divided by height) of the viewing …\nSystem in charge of updating a <code>Camera</code> when its window or …\nThe clear color operation to perform on the render target.\nCompute camera frustum for camera with given projection …\nComputed values for this camera, such as the projection …\nThe minimum and maximum depth to render (on a scale from …\nCalculate the EV100.\n…\nConverts EV100 values to exposure values. …\nThe distance from the camera in world units of the viewing …\nThe distance of the far clipping plane in world units.\nThe vertical field of view (FOV) in radians.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nSize of the entire camera view\nRetrieves the <code>TextureFormat</code> of this render target, if it …\nIf this is set to <code>true</code>, the camera will use an …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf this is set to <code>true</code>, this camera will be rendered to …\nIf this is enabled, a previous camera exists that shares …\nThe distance from the camera in world units of the viewing …\nThe distance of the near clipping plane in world units.\nCreates a new <code>CameraRenderGraph</code> from any string-like type.\nNormalize the render target down to a more concrete value, …\nOffset of the sub camera\nOffset is in range [-0.5, 0.5].\nCameras with a higher order are rendered later, and thus …\nThe <code>CameraOutputMode</code> for this camera.\nThe physical position to render this viewport to within …\nThe physical size of the viewport rectangle to render to …\nThe physical size of this render target (in physical …\nScales the projection.\nThe scale factor of this render target.\nHow the projection will scale to the viewport.\nhttps://en.wikipedia.org/wiki/Film_speed\nThe height of the image sensor format in meters.\nSets the graph name.\nhttps://en.wikipedia.org/wiki/Shutter_speed\nSize of the sub camera\nIf set, this camera will be a sub camera of a large view, …\nThe “target” that this camera will render to.\nIf set, this camera will render to the given <code>Viewport</code> …\nSpecifies the origin of the viewport as a normalized …\nThe blend state that will be used by the pipeline that …\nThe clear color operation to perform on the final render …\nGuard returned by <code>RecordDiagnostics::pass_span</code>.\nAllows recording diagnostic spans.\nEnables collecting render diagnostics, such as CPU/GPU …\nGuard returned by <code>RecordDiagnostics::time_span</code>.\nEnd the span. You have to provide the same encoder which …\nEnd the span. You have to provide the same encoder which …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBegin a pass span, which will record elapsed CPU and GPU …\nBegin a time span, which will record elapsed CPU and GPU …\nStores all uniforms of the component type.\nStores the index of a uniform inside of <code>ComponentUniforms</code>.\nDescribes how a component gets extracted for rendering.\nImplements <code>ExtractComponent</code> trait for a component.\nThis plugin extracts the components into the render world …\nThe output from extraction.\nECS <code>ReadOnlyQueryData</code> to fetch the components to extract.\nFilters the entities with additional constraints.\nThis plugin prepares the components of the corresponding …\nDefines how the component is transferred into the “…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDescribes how to extract data needed for rendering from a …\nThis plugin extracts one or more components into the “…\nStores all extract instances of a type in the render world.\nECS <code>ReadOnlyQueryData</code> to fetch the components to extract.\nFilters the entities with additional constraints.\nDefines how the component is transferred into the “…\nCreates a new <code>ExtractInstancesPlugin</code> that extracts to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>ExtractInstancesPlugin</code> that unconditionally …\nDescribes how a resource gets extracted for rendering.\nThis plugin extracts the resources into the “render world…\nThis system extracts the resource of the corresponding …\nDefines how the resource is transferred into the “render …\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nThe buffer containing the <code>GlobalsUniform</code>\nContains global values useful when writing shaders. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis plugin prepares the components of the corresponding …\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nA plugin that enables reading back gpu buffers and …\nA component that registers the wrapped handle for gpu …\nAn event that is triggered when a gpu readback is complete.\nCreate a readback component for a buffer using the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a readback component for a texture using the given …\nConvert the raw bytes of the event to a shader type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis error occurs when you try to invert the winding for a …\nA builder for creating a <code>Mesh</code> with an <code>Annulus</code> shape.\nUV space is distributed by how much of the capsule …\nThe center of the base circle\nOur base mesh pipeline key bits start from the highest bit …\nThe center of the bottom circle cap\nA builder used for creating a <code>Mesh</code> with a <code>Capsule2d</code> shape.\nA builder used for creating a <code>Mesh</code> with a <code>Capsule3d</code> shape.\nManner in which UV coordinates are distributed vertically.\nA builder used for creating a <code>Mesh</code> with a <code>Circle</code> shape.\nSpecifies how to generate UV-mappings for the …\nA builder used for creating a <code>Mesh</code> with a <code>CircularSector</code> …\nA builder used for creating a <code>Mesh</code> with a <code>CircularSegment</code> …\nAnchoring options for <code>ConeMeshBuilder</code>\nA builder used for creating a <code>Mesh</code> with a <code>Cone</code> shape.\nA builder used for creating a <code>Mesh</code> with a <code>ConicalFrustum</code> …\nA builder used for creating a <code>Mesh</code> with a <code>ConvexPolygon</code> …\nAnchoring options for <code>CylinderMeshBuilder</code>\nA builder used for creating a <code>Mesh</code> with a <code>Cylinder</code> shape.\nA builder used for creating a <code>Mesh</code> with an <code>Ellipse</code> shape.\nA trait required for implementing <code>Meshable</code> for <code>Extrusion&lt;T&gt;</code>…")