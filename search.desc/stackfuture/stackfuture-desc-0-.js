searchState.loadedDescShard("stackfuture", 0, "This crate defines a <code>StackFuture</code> wrapper around futures …\nCaptures information about why a future could not be …\nA wrapper that stores a future in space allocated by the …\nReturns true if the target <code>StackFuture</code>’s alignment was …\nReturns the alignment of the target <code>StackFuture</code>, which is …\nReturns the amount of space that was available in the …\nReturns the argument unchanged.\nCreates a <code>StackFuture</code> from an existing future\nReturns the argument unchanged.\nCreates a StackFuture from the given future, boxing if …\nDetermines whether this <code>StackFuture</code>’s alignment is …\nDetermines whether this <code>StackFuture</code>’s alignment is …\nDetermines whether this <code>StackFuture</code> can hold a value of …\nDetermines whether this <code>StackFuture</code> can hold the …\nReturns true if the target <code>StackFuture</code> was too small to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the alignment of the wrapped future.\nReturns the size of the wrapped future.\nAttempts to create a <code>StackFuture</code> from an existing future")