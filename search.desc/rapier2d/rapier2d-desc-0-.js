searchState.loadedDescShard("rapier2d", 0, "Rapier\nThe string version of Rapier.\nUtilities for controlling the trajectories of objects in a …\nCounters for benchmarking various parts of the physics …\nData structures modified with guaranteed deterministic …\nStructures related to dynamics: bodies, impulse_joints, …\nStructures related to geometry: colliders, shapes, etc.\nElementary mathematical entities (vectors, matrices, …\nStructure for combining the various physics components to …\nPrelude containing the common types defined by Rapier.\nMiscellaneous utilities.\nThe length is specified as an absolute value, independent …\nConfiguration for the auto-stepping character controller …\nA collision between the character and its environment …\nA length measure used for various options of a character …\nThe effective movement computed by the character …\nA character controller for kinematic bodies.\nThe length is specified relative to some of the character …\nShould the character automatically step over small …\nThe position of the character when the collider was hit.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIs the character touching the ground after applying …\nThe collider hit by the character.\nGeometric information about the hit.\nCan the character automatically step over dynamic bodies …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs the character sliding down a slope due to slope angle …\nReturns <code>self</code> with its value changed by the closure <code>f</code> if …\nReturns <code>self</code> with its value changed by the closure <code>f</code> if …\nThe maximum step height a character can automatically step …\nThe maximum angle (radians) between the floor’s normal …\nThe minimum angle (radians) between the floor’s normal …\nThe minimum width of free space that must be available …\nComputes the possible movement for a shape.\nIncrease this number if your character appears to get …\nA small gap to preserve between the character and its …\nShould the character try to slide against the floor if it …\nShould the character be automatically snapped to the …\nFor the given collisions between a character and its …\nThe movement to apply.\nThe translation that was already applied to the character …\nThe translations that was still waiting to be applied to …\nThe direction that goes “up”. Used to determine where …\nPerformance counters related to continuous collision …\nPerformance counters related to collision detection.\nAggregation of all the performances counters tracked by …\nPerformance counters related to constraints resolution.\nPerformance counters related to each stage of the time …\nA timer.\nStop this timer.\nStart this timer.\nGets the time elapsed for this timer.\nStop this timer.\nStart this timer.\nGets the time elapsed for this timer.\nThe total time spent by the broad-phase in the CCD …\nTime spent for the broad-phase of the collision detection.\nCounters for the CCD resolution stage.\nStop this timer.\nStart this timer.\nGets the time elapsed for this timer.\nTotal time spent for CCD and CCD resolution.\nCounters of the collision-detection stage.\nStop this timer.\nStart this timer.\nGets the time elapsed for this timer.\nTotal time spent for the collision detection (including …\nTimer used for debugging.\nNotify that the custom operation has finished.\nNotify that the custom operation has started.\nTotal time of a custom event.\nDisable all the counters.\nEnable all the counters.\nReturn <code>true</code> if the counters are enabled.\nWhether this counter is enabled or not.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStop this timer.\nStart this timer.\nGets the time elapsed for this timer.\nTime spent for the computation of collision island and …\nStop this timer.\nStart this timer.\nGets the time elapsed for this timer.\nThe total time spent by the narrow-phase in the CCD …\nTime spent for the narrow-phase of the collision detection.\nNumber of constraints generated.\nNumber of contact pairs detected.\nNumber of contacts found.\nCreates a new counter initialized to zero.\nCreates a new counter initialized to zero.\nCreates a new counter initialized to zero.\nCreate a new counter initialized to zero.\nCreates a new timer initialized to zero and not started.\nCreate a new set of counters initialized to zero.\nThe number of substeps actually performed by the CCD …\nPause the timer.\nTotal time spent updating the query pipeline (if provided …\nStop this timer.\nStart this timer.\nGets the time elapsed for this timer.\nResets this counter to 0.\nResets all the coounters and timers.\nReset all the counters to zero.\nResets all the counters and timers.\nResets the timer to 0.\nResets all the counters and timers.\nResume the timer.\nSet the number of constraints generated.\nSet the number of contact pairs generated.\nSet the number of contacts generated.\nCounters of the constraints resolution and force …\nStop this timer.\nStart this timer.\nGets the time elapsed for this timer.\nThe total time spent for force computation and integration …\nTotal time spent for the constraints resolution and …\nCounters of every satge of one time step.\nStart the timer.\nNotify that the time-step has finished.\nNotify that the time-step has started.\nTotal time spent for one  of the physics engine.\nTimer for a whole timestep.\nThe measured time between the last <code>.start()</code> and <code>.pause()</code> …\nThe total time spent for TOI computation in the CCD …\nStop this timer.\nStart this timer.\nGets the time elapsed for this timer.\nTime spent for updating the kinematic and dynamics of …\nTotal time spent propagating user changes.\nTime spent for the assembly of all the velocity …\nStop this timer.\nStart this timer.\nGets the time elapsed for this timer.\nTime spent for the resolution of the constraints (force …\nStop this timer.\nStart this timer.\nGets the time elapsed for this timer.\nTime spent for the update of the velocity of the bodies.\nTime spent to write force back to user-accessible data.\nA container for data associated to item existing into …\nArena adapted from the generational-arena crate.\nEnsure that the given element exists in thihs coarena, and …\nEnsure that elements at the two given indices exist in …\nReturns the argument unchanged.\nGets a specific element from the coarena, if it exists.\nGets a mutable reference to a specific element from the …\nGets a specific element from the coarena without …\nInserts an element into this coarena.\nCalls <code>U::from(self)</code>.\nIterates through all the elements of this coarena.\nA coarena with no element.\nPublish-subscribe mechanism for internal events.\nDeletes an element for the coarena and returns its value.\nThe <code>Arena</code> allows inserting and removing elements that are …\nAn iterator that removes elements from the arena.\nAn index (and generation) into an <code>Arena</code>.\nAn iterator over the elements in an arena.\nAn iterator over shared references to the elements in an …\nAn iterator over exclusive references to elements in this …\nGet the capacity of this arena.\nClear all the items inside the arena, but keep its …\nIs the element at index <code>i</code> in the arena?\nIterate over elements of the arena and remove them.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>Index</code> from its raw parts.\nGet a shared reference to the element at index <code>i</code> if it is …\nGet a pair of exclusive references to the elements at …\nGet an exclusive reference to the element at index <code>i</code> if it …\nGiven an i of <code>usize</code> without a generation, get a shared …\nGiven an i of <code>usize</code> without a generation, get an exclusive …\nInsert <code>value</code> into the arena, allocating more capacity if …\nInsert the value returned by <code>create</code> into the arena, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this <code>Index</code> into its raw parts.\nReturns true if the arena contains no elements\nIterate over shared references to the elements in this …\nIterate over exclusive references to the elements in this …\nGet the length of this arena.\nConstructs a new, empty <code>Arena</code>.\nRemove the element at index <code>i</code> from the arena.\nAllocate space for <code>additional_capacity</code> more elements in …\nRetains only the elements specified by the predicate.\nAttempts to insert <code>value</code> into the arena using existing …\nAttempts to insert the value returned by <code>create</code> into the …\nConstructs a new, empty <code>Arena&lt;T&gt;</code> with the specified …\nA pub-sub queue.\nA permanent subscription to a pub-sub queue.\nMakes the given subscribe acknowledge all the messages in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new empty pub-sub queue.\nPublish a new message.\nGet the messages not yet read by the given subscriber.\nRead the i-th message not yet read by the given subscriber.\nSubscribe to the queue.\nThe set of all angular degrees of freedom.\nThe angular degree of freedom of a joint.\nThe solved spring-like equation is: …\nThe rotational degree of freedom along the joint’s local …\nThe two coefficients are averaged.\nA pair of rigid body handles.\nThe type of a body, governing the way it is affected by …\nSolver responsible for performing motion-clamping on …\nFlag indicating that the <code>RigidBodyColliders</code> component of …\nRules used to combine two coefficients.\nFlag indicating that the <code>RigidBodyDominance</code> component of …\nThe joint is disabled by the user explicitly.\nThe joint wasn’t disabled by the user explicitly but it …\nA <code>RigidBodyType::Dynamic</code> body can be affected by all …\nA <code>RigidBodyType::Dynamic</code> body can be affected by all …\nFlag indicating that the rigid-body was enabled or …\nThe joint is enabled.\nThe set of degrees of freedom left free by a fixed joint.\nThe set of degrees of freedom left free by a prismatic …\nThe set of degrees of freedom left free by a revolute …\nA <code>RigidBodyType::Fixed</code> body cannot be affected by external …\nA <code>RigidBodyType::Fixed</code> body cannot be affected by external …\nA fixed joint, locks all relative motion between two …\nCreate fixed joints using the builder pattern.\nThe solved spring-like equation is: …\nA generic joint.\nCreate generic joints using the builder pattern.\nAn impulse-based joint attached to two bodies.\nThe unique identifier of a joint added to the joint set. …\nA set of impulse_joints that can be handled by a physics …\nParameters for a time-step of the physics engine.\nOptions for the jacobian-based Inverse Kinematics solver …\nStructure responsible for maintaining the set of active …\nA bit mask identifying multiple degrees of freedom of a …\nIdentifiers of degrees of freedoms of a joint.\nEnum indicating whether or not a joint is enabled.\nThe limits of a joint along one of its degrees of freedom.\nA joint’s motor along one of its degrees of freedom.\nA <code>RigidBodyType::KinematicPositionBased</code> body cannot be …\nA <code>RigidBodyType::KinematicPositionBased</code> body cannot be …\nA <code>RigidBodyType::KinematicVelocityBased</code> body cannot be …\nA <code>RigidBodyType::KinematicVelocityBased</code> body cannot be …\nThe set of all translational degrees of freedom.\nThe linear (translational) degree of freedom along the …\nThe linear (translational) degree of freedom along the …\nFlag indicating that the local mass-properties of this …\nThe set of degrees of freedom locked by a fixed joint.\nThe set of degrees of freedom locked by a prismatic joint.\nThe set of degrees of freedom locked by a revolute joint.\nThe linear (translational) degree of freedom along the …\nThe linear (translational) degree of freedom along the …\nFlags affecting the behavior of the constraints solver for …\nFlag indicating that any component of this rigid-body has …\nMass to be added to the rigid-body. This will also …\nThe local mass properties of a rigid-body.\nMass properties to be added as-is.\nThe greatest coefficient is chosen.\nThe smallest coefficient is chosen.\nThe spring-like model used for constraints resolution.\nAn articulated body simulated using the …\nThe temporary index of a multibody added to a …\nAn joint attached to two bodies based on the reduced …\nThe unique handle of an multibody_joint added to a …\nA set of rigid bodies that can be handled by a physics …\nOne link of a multibody.\nIndexes usable to get a multibody link from a …\nThe two coefficients are multiplied.\nFlag indicating that the <code>RigidBodyPosition</code> component of …\nA prismatic joint, locks all relative motion between two …\nCreate prismatic joints using the builder pattern.\nCombination of flags indicating that the rigid-body cannot …\nFlag indicating that the rigid-body cannot rotate along …\nFlag indicating that the rigid-body cannot rotate along …\nFlag indicating that the rigid-body cannot rotate along …\nA revolute joint, locks all relative motion except for …\nCreate revolute joints using the builder pattern.\nA rigid body.\nThe rb_activation status of a body.\nMass and angular inertia added to a rigid-body on top of …\nA builder for rigid-bodies.\nInformation used for Continuous-Collision-Detection.\nFlags describing how the rigid-body has been modified by …\nThe set of colliders attached to this rigid-bodies.\nDamping factors to progressively slow down a rigid-body.\nThe dominance groups of a rigid-body.\nThe user-defined external forces applied to this …\nThe unique handle of a rigid body added to a <code>RigidBodySet</code>.\nInternal identifiers used by the physics engine.\nThe mass properties of a rigid-body.\nThe position of this rigid-body.\nA set of rigid bodies that can be handled by a physics …\nThe status of a body, governing the way it is affected by …\nThe velocities of this rigid-body.\nA rope joint, limits the maximum distance between two …\nCreate rope joints using the builder pattern.\nFlag indicating that the <code>RigidBodyActivation</code> component of …\nA spring-damper joint, applies a force proportional to the …\nA SpringJoint joint using the builder pattern.\nFlag indicating that the rigid-body cannot translate along …\nFlag indicating that the rigid-body cannot translate along …\nFlag indicating that the rigid-body cannot translate along …\nFlag indicating that the rigid-body cannot translate along …\nFlag indicating that the <code>RigidBodyType</code> component of this …\nThe activation status of this rigid-body.\nMutable reference to the activation status of this …\nCreate a new rb_activation status initialised with the …\nIter through all the active dynamic rigid-bodies on this …\nIter through all the active kinematic rigid-bodies on this …\nAdds to this rigid-body a constant force applied at its …\nAdds to this rigid-body a constant force at the given …\nAdds to this rigid-body a constant torque at its …\nMass-properties of this rigid-bodies, added to the …\nSets the additional mass of the rigid-body being built.\nSets the additional mass-properties of the rigid-body …\nSet the additional number of solver iterations run for …\nSets the additional number of solver iterations run for …\nThe additional number of solver iterations run for this …\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nAmount of penetration the engine won’t attempt to …\nThe angle along the free degree of freedom of this …\nThe angular damping coefficient of this rigid-body.\nSets the damping factor for the angular part of the …\nDamping factor for gradually slowing down the angular …\nDamping factor for gradually slowing down the angular …\nThe angular linear velocity bellow which the body can fall …\nThe angular velocity of this rigid-body.\nSets the initial angular velocity of the rigid-body to be …\nThe angular velocity of the rigid-body.\nThe angular velocity of the rigid-body to be built.\nReturns the update velocities after applying the given …\nApply a displacement to the multibody_joint.\nApply displacements, in generalized coordinates, to this …\nApplies a force at the given world-space point of the …\nApplies an impulse at the center-of-mass of this …\nApplies an impulse at the center-of-mass of this …\nApplies an impulse at the given world-space point of this …\nApplies an impulse at the given world-space point of this …\nApplies an angular impulse at the center-of-mass of this …\nApplies an angular impulse at the center-of-mass of this …\nConverts the joint to its specific variant, if it is one.\nConverts the joint to its specific mutable variant, if it …\nThis velocity seen as a mutable slice.\nConverts the joint to its specific variant, if it is one.\nConverts the joint to its specific mutable variant, if it …\nConverts the joint to its specific variant, if it is one.\nConverts the joint to its specific mutable variant, if it …\nConverts the joint to its specific variant, if it is one.\nConverts the joint to its specific mutable variant, if it …\nThis velocity seen as a slice.\nThis velocity seen as a vector.\nThis velocity seen as a mutable vector.\nAttach a collider to this rigid-body.\nIterate through the handles of all the rigid-bodies …\nIterates through all the enabled impulse joints attached …\nIterates through all the impulse joints attached to the …\nIterates through all the joints attached to the given …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nIterate through the handles of all the rigid-bodies …\nHandle to the first body attached to this joint.\nThe first rigid body handle.\nHandle to the second body attached to this joint.\nThe second rigid body handle.\nThe body jacobian for link <code>link_id</code> calculated by the last …\nThe position of the multibody link containing this …\nThe type of this rigid-body.\nThe type of rigid-body being constructed.\nBuild the fixed joint.\nBuilds the generic joint.\nBuilds the prismatic joint.\nBuilds the revolute joint.\nBuilds the rope joint.\nBuilds the spring joint.\nBuild a new rigid-body with the parameters configured with …\nSets whether the rigid-body to be created can sleep if it …\nWhether the rigid-body to be created can sleep if it …\nCreate a new activation status that prevents the …\nIs CCD active for this rigid-body?\nSets whether Continuous Collision-Detection is enabled for …\nIs CCD enabled for this rigid-body?\nWhether Continuous Collision-Detection is enabled for the …\nThe max distance between this rigid-body’s center of …\nThe distance used by the CCD solver to decide if a …\nThe world-space center-of-mass of this rigid-body.\nApply motion-clamping to the bodies affected by the given …\nUpdate this data-structure after one or multiple …\nThe handles of colliders attached to this rigid body.\nCombines the coefficients used for solving the spring …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nAdds to <code>self</code> the gravitational force that would result in …\nThe axes the IK solver will solve for.\nThe contact’s spring angular frequency for constraints …\nThe CFM factor to be used in the constraint resolution.\n0: the damping ratio used by the springs for contact …\nThe effective Error Reduction Parameter applied for …\nThe <code>Self::contact_erp</code> coefficient, multiplied by the …\n0: the natural frequency used by the springs for contact …\nAre contacts between the attached rigid-bodies enabled?\nSets whether contacts between the attached rigid-bodies …\nAre contacts between the attached rigid-bodies enabled?\nSets whether contacts between the attached rigid-bodies …\nAre contacts between the attached rigid-bodies enabled?\nSets whether contacts between the attached rigid-bodies …\nAre contacts between the attached rigid-bodies enabled?\nSets whether contacts between the attached rigid-bodies …\nAre contacts between the attached rigid-bodies enabled?\nSets whether contacts between the attached rigid-bodies …\nAre contacts between the attached rigid-bodies enabled?\nSets whether contacts between the attached rigid-bodies …\nAre contacts between the attached rigid-bodies enabled?\nWhether all set bits in a source flags value are also set …\nIs the given joint handle valid?\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nIs the given body handle valid?\nCopy all the characteristics from <code>other</code> to <code>self</code>.\nSets the coupled degrees of freedom for this joint’s …\nThe coupled degrees of freedom of this joint.\nThe vector of damping applied to this multibody.\nThe damping coefficient of the motor’s spring-like …\nA damping coefficient.\nMutable vector of damping applied to this multibody.\nThe underlying generic joint.\nThe underlying generic joint.\nThe underlying generic joint.\nThe underlying generic joint.\nThe underlying joint data.\nThe joint’s description.\nThe joint’s description.\nThe underlying joint data.\nThe underlying joint data.\nThe underlying joint data.\nThe underlying joint data.\nThe default angular velocity bellow which a body can be …\nFill <code>out</code> with the non-zero entries of a damping that can …\nThe default linear velocity bellow which a body can be put …\nThe amount of time the rigid-body must remain bellow …\nDetach a collider from this rigid-body.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe dominance group of this rigid-body.\nSets the dominance group of this rigid-body.\nThe dominance group of the rigid-body to be built.\nThe timestep length (default: <code>1.0 / 60.0</code>).\nInitializes the builder of a new dynamic rigid body.\nThe effective world-space angular inertia (that takes the …\nThe square root of the effective world-space angular …\nThe dominance group of this rigid-body.\nThe actual dominance group of this rigid-body, after …\nThe inverse mass taking into account translation locking.\nThe effective mass (that takes the potential translation …\nThe square-root of the world-space inverse angular inertia …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nEnables of disable CCD (Continuous Collision-Detection) …\nEnable or disable the rigid-body after its creation.\nWhether or not the joint is enabled.\nWill the rigid-body being built be enabled?\nOnly allow translations of this rigid-body around specific …\nThe error threshold on the angular error.\nThe error threshold on the linear error.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nFind the first time a CCD-enabled body has a non-sensor …\nInitializes the builder of a new fixed rigid body.\nFlags for locking rotation and translation.\nFlips the orientation of the joint, including limits and …\nAccumulation of external forces (only for dynamic bodies).\nApply forward-kinematics to this multibody.\nApply forward-kinematics to compute the position of a …\nApply forward-kinematics to compute the position of a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nComputes the mass properties of a ball.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nComputes the mass properties of a capsule.\nComputes the mass properties of a compound shape.\nComputes the mass properties of a convex polygon.\nComputes the mass properties of a cuboid.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nReconstructs an handle from its (index, generation) …\nReconstructs an handle from its (index, generation) …\nReconstructs an handle from its (index, generation) …\nConverts a slice to a rigid-body velocity.\nComputes the mass properties of a triangle.\nComputes the mass properties of a triangle-mesh.\nThe generalized accelerations of this multibodies.\nThe generalized velocities of this multibodies.\nThe mutable generalized velocities of this multibodies.\nGets the joint with the given handle.\nGets a reference to the multibody identified by its <code>handle</code>.\nGets the rigid-body with the given handle.\nGets a reference to a multibody, based on its temporary …\nGets a mutable reference to a multibody, based on its …\nGets a mutable reference to a multibody, based on its …\nGets a mutable reference to the joint with the given …\nGets a mutable reference to the multibody identified by …\nGets a mutable reference to the rigid-body with the given …\nGets a mutable reference to the multibody identified by …\nGets the joint with the given handle without a known …\nGets the joint with the given handle without a known …\nGets the rigid-body with the given handle without a known …\nGets a mutable reference to the joint with the given …\nGets a mutable reference to the rigid-body with the given …\nThe potential energy of this body in a gravity field.\nThe scale factor applied to the gravity affecting this …\nSets the scale applied to the gravity force affecting the …\nGravity is multiplied by this scaling factor before it’s …\nThe scale factor applied to the gravity affecting the …\nThe multibody link index to be given to <code>Multibody::link</code>.\nThe impulse applied to enforce the joint’s limit.\nThe impulse applied by this motor.\nThe impulses applied by this joint.\nCreate a new rb_activation status initialised with the …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nInserts a new joint into this set and retrieve its handle.\nInserts a new multibody joint into this set.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nInsert a rigid body into this set and retrieve its handle.\nInserts a new kinematic multibody joint into this set.\nIntegrate the position of this multibody_joint.\nIntegrate the velocities in <code>self</code> to compute obtain new …\nIntegrate these forces to compute new velocities.\nCompute new positions after integrating the given forces …\nComputes the velocity need to travel from <code>self.position</code> to …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this handle into its (index, generation) …\nConverts this handle into its (index, generation) …\nConverts this handle into its (index, generation) …\nThe inverse augmented mass matrix of this multibody.\nThe inverse of the time-stepping length, i.e. the steps …\nThe inverse of the mass of a rigid-body.\nThe inverse of the principal angular inertia of the …\nAn always-invalid joint handle.\nAn always-invalid rigid-body handle.\nAn always-invalid rigid-body handle.\nComputes the displacement needed to have the link …\nComputes the displacement needed to have the link …\nComputes the displacement needed to have a link with the …\nReturns <code>true</code> if the body is not asleep.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nIs CCD active for this rigid-body?\nIs CCD (continuous collision-detection) enabled for this …\nIs this rigid-body dynamic (i.e. can move and be affected …\nIs this rigid body dynamic?\nWhether all bits in this flags value are unset.\n<code>true</code> if there are no impulse_joints in this set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\n<code>true</code> if there are no rigid bodies in this set.\nIs this joint enabled?\nIs this rigid-body enabled?\nIs this rigid-body fixed (i.e. cannot move)?\nIs this rigid body fixed?\nIs this rigid-body kinematic (i.e. can move but is …\nIs this rigid body kinematic?\nIs the velocity of this body not zero?\nIs this rigid-body moving fast enough so that it may cause …\nChecks if this link is the root of the multibody.\nAre the rotations of this rigid-body locked?\nIs this rigid body sleeping?\nAre the translations of this rigid-body locked?\nAre these velocities exactly equal to zero?\nYield a set of contained flags values.\nIterates through all the joint on this set.\nIterates through all the multibody joints from this set.\nYield a set of contained flags values.\nYield a set of contained flags values.\nIterates through all the rigid-bodies on this set.\nIterates mutably through all the joint on this set.\nIterates mutably through all the rigid-bodies on this set.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nSets in <code>out</code> the non-zero entries of the multibody_joint …\nMultiply the multibody_joint jacobian by generalized …\nThe multibody joint of this link.\nThe multibody joint of this link.\nThe joint’s spring angular frequency for constraint …\nReturns the the joint between two rigid-bodies (if it …\nThe CFM (constraints force mixing) coefficient applied to …\nThe fraction of critical damping applied to the joint for …\nThe effective Error Reduction Parameter applied for …\nThe <code>Self::joint_erp</code> coefficient, multiplied by the inverse …\nRetrieve the joint graph where edges are impulse_joints …\n0: the natural frequency used by the springs for joint …\nThe generalized velocity at the multibody_joint of the …\nIterates through all the joints between two rigid-bodies.\nIs the joint a kinematic joint?\nComputes the ids of all the links between the root and the …\nInitializes the builder of a new position-based kinematic …\nInitializes the builder of a new velocity-based kinematic …\nThe kinetic energy of this rigid-body.\nThe kinetic energy of this body.\nThe number of impulse_joints on this set.\nThe number of rigid bodies on this set.\nThe approximate size of most dynamic objects in the scene.\nThe degrees-of-freedoms limited by this joint.\nThe joint limits along the specified axis.\nSets the joint limits along the specified axis.\nThe limit distance attached bodies can translate along the …\nSets the <code>[min,max]</code> limit distances attached bodies can …\nThe limit angle attached bodies can translate along the …\nSets the <code>[min,max]</code> limit angles attached bodies can rotate …\nThe limits, along each degrees of freedoms of this joint.\nThe linear damping coefficient of this rigid-body.\nSets the damping factor for the linear part of the …\nDamping factor for gradually slowing down the …\nDamping factor for gradually slowing down the …\nReference <code>i</code>-th multibody link of this multibody.\nThe handle of this multibody link.\nMutable reference to the multibody link with the given id.\nIterator through all the links of this multibody.\nMutable iterator through all the links of this multibody.\nThe linear velocity of this rigid-body.\nSets the initial linear velocity of the rigid-body to be …\nThe linear velocity of the rigid-body.\nThe linear velocity of the rigid-body to be built.\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe anchor of this joint, expressed in the first …\nSets the anchor of this joint, expressed in the first …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe anchor of this joint, expressed in the second …\nSets the anchor of this joint, expressed in the second …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe joint’s anchor, expressed in the local-space of the …\nSets the joint’s anchor, expressed in the local-space of …\nThe principal (local X) axis of this joint, expressed in …\nSets the principal (local X) axis of this joint, expressed …\nThe principal axis of the joint, expressed in the …\nSets the principal axis of the joint, expressed in the …\nThe principal (local X) axis of this joint, expressed in …\nSets the principal (local X) axis of this joint, expressed …\nThe principal axis of the joint, expressed in the …\nSets the principal axis of the joint, expressed in the …\nThe center of mass of a rigid-body expressed in its …\nThe joint’s frame, expressed in the first rigid-body’s …\nSets the joint’s frame, expressed in the first …\nSets the joint’s frame, expressed in the first …\nThe joint’s frame, expressed in the first rigid-body’s …\nThe joint’s frame, expressed in the second …\nSets joint’s frame, expressed in the second …\nSets the joint’s frame, expressed in the second …\nThe joint’s frame, expressed in the second …\nThe local mass properties of the rigid-body.\nThe position of the rigid-body attached to this link …\nThe world-space transform of the rigid-body attached to …\nAdd the specified axes to the set of axes locked by this …\nLocks or unlocks all the rotations of this rigid-body.\nPrevents this rigid-body from rotating because of forces.\nLocks or unlocks all the rotations of this rigid-body.\nPrevents this rigid-body from translating because of …\nSets the degrees of freedom locked by the joint.\nThe axes along which this rigid-body cannot translate or …\nSets the axes along which this rigid-body cannot translate …\nThe degrees-of-freedoms locked by this joint.\nIterates through all the impulse joints attached to the …\nThe mass.\nThe mass of the rigid-body.\nThe mass of this rigid body.\nThe mass-properties of this rigid-body.\nThe maximum bound of the joint limit.\nMaximum number of substeps performed by the  solver …\nMaximum amount of penetration the solver will attempt to …\nThe maximum distance allowed between the attached objects.\nSets the maximum allowed distance between the attached …\nThe maximum force this motor can deliver.\nThe maximum number of iterations the iterative IK solver …\nThe maximum velocity any point of any collider attached to …\nThe minimum bound of the joint limit.\nMinimum timestep size when using CCD with multiple …\nMinimum number of dynamic bodies in each active island …\nThe spring-like model used for simulating this motor.\nThe motor affecting the joint’s degree of freedom along …\nThe motor affecting the joint’s translational degree of …\nThe motor affecting the joint’s rotational degree of …\nConfigure both the target angle and target velocity of the …\nThe motor affecting the joint’s translational degree of …\nThe degrees-of-freedoms motorised by this joint.\nSets the maximum force the motor can deliver along the …\nSets the maximum force the motor can deliver.\nSets the maximum force the motor can deliver.\nSets the maximum force the motor can deliver.\nThe spring-like motor model along the specified axis of …\nSet the spring-like model used by the motor to reach the …\nSet the spring-like model used by the motor to reach the …\nSet the spring-like model used by the motor to reach the …\nSet the spring-like model used by the motor to reach the …\nSets the target angle this motor needs to reach.\nSets the target angle this motor needs to reach.\nSets the target angle this motor needs to reach.\nSets the target angle this motor needs to reach.\nSets the target velocity this motor needs to reach.\nSets the target velocity this motor needs to reach.\nSets the target velocity this motor needs to reach.\nSets the target velocity this motor needs to reach.\nThe motors, along each degrees of freedoms of this joint.\nIterates through all the multibodies on this set.\nThe multibody index to be used as …\nThe total number of freedoms of this multibody.\nThe number of degrees of freedom allowed by the …\nInitializes a new CCD solver\nCreates a new empty island manager.\nCreates a new fixed joint.\nCreates a new builder for fixed joints.\nCreates a new generic joint that locks the specified …\nCreates a new generic joint builder.\nCreates a new empty set of impulse_joints.\nCreates a new multibody with no link.\nCreate a new empty set of multibodies.\nCreates a new multibody link.\nCreates a new multibody joint from its description.\nCreates a new prismatic joint allowing only relative …\nCreates a new builder for prismatic joints.\nCreates a new revolute joint allowing only relative …\nCreates a new revolute joint builder.\nCreates a new rope joint limiting the max distance between …\nCreates a new builder for rope joints.\nCreates a new spring joint limiting the max distance …\nCreates a new builder for spring joints.\nInitializes the mass properties with the given …\nCreate a new rigid-body velocity component.\nInitialize a new builder for a rigid body which is either …\nBuilds a new pair of rigid-body handles.\nCreate a new empty set of rigid bodies.\nInitializes the builder of a new position-based kinematic …\nInitializes the builder of a new velocity-based kinematic …\nInitializes the builder of a new fixed rigid body.\nThe predicted position of this rigid-body.\nThe next position of the rigid-body.\nAmount of penetration the engine won’t attempt to …\nThe threshold linear velocity bellow which the body can …\nMaximum amount of penetration the solver will attempt to …\nThe maximal distance separating two objects that will …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nNumber of addition friction resolution iteration run …\nNumber of internal Project Gauss Seidel (PGS) iterations …\nThe number of stabilization iterations run at each solver …\nThe number of links on this multibody.\nThe number of solver iterations run by the constraints …\nMaximum number of velocity constrains that can be …\nThe handle of the parent link.\nInitializes the integration parameters to match the legacy …\nThe world-space position of this rigid-body.\nSets the initial position (translation and orientation) of …\nThe world-space position of the rigid-body.\nThe initial position of the rigid-body to be built.\nOutputs the set of bodies as well as their first …\nPredicts the next position of this rigid-body, by …\nPredicts the next position of this rigid-body, by …\nThe maximal distance separating two objects that will …\nThe angular inertia along the principal inertia axes and …\nUpdate colliders positions after rigid-bodies moved.\nThe approximate kinetic energy of this rigid-body.\nRecompute the mass-properties of this rigid-bodies based …\nRecompute the mass-properties of this rigid-bodies based …\nThe intersection of a source flags value with the …\nRemoves a joint from this set.\nRemoves a multibody_joint from this set.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nRemoves a rigid-body, and all its attached colliders and …\nDeletes all the impulse_joints attached to the given …\nRemoves all the multibody joints attached to a rigid-body.\nRemoves all the multibody_joints from the multibody the …\nResets to zero all the constant (linear) forces manually …\nResets to zero all the constant torques manually applied …\nLocks or unlocks rotations of this rigid-body along each …\nLocks or unlocks rotations of this rigid-body along each …\nOnly allow translations of this rigid-body around specific …\nThe handle of the rigid-body of this link.\nReturns the link of this multibody attached to the given …\nThe first link of this multibody.\nMutable reference to the first link of this multibody.\nThe rotational part of this rigid-body’s position.\nSets the initial orientation of the rigid-body to be …\nWhether self-contacts are enabled on this multibody.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSets the rigid-body’s additional mass.\nSets the rigid-body’s additional mass-properties.\nSet the additional number of solver iterations run for …\nSets the angular damping coefficient of this rigid-body.\nThe angular velocity of this rigid-body.\nSets the type of this rigid-body.\nSets whether contacts between the attached rigid-bodies …\nSets whether contacts between the attached rigid-bodies …\nSets whether contacts between the attached rigid-bodies …\nSets whether contacts between the attached rigid-bodies …\nSets whether contacts between the attached rigid-bodies …\nSets whether contacts between the attached rigid-bodies …\nThe dominance group of this rigid-body.\nSets the time-stepping length.\nSet whether this joint is enabled or not.\nSets whether this rigid-body is enabled or not.\nLocks or unlocks rotations of this rigid-body along each …\nLocks or unlocks rotations of this rigid-body along each …\nSets the gravity scale facter for this rigid-body.\nSets the inverse time-stepping length (i.e. the frequency).\nSets the joint limits along the specified axis.\nSets the <code>[min,max]</code> limit distances attached bodies can …\nSets the <code>[min,max]</code> limit angle attached bodies can …\nSets the linear damping coefficient of this rigid-body.\nThe linear velocity of this rigid-body.\nSets the joint’s anchor, expressed in the local-space of …\nSets anchor of this joint, expressed in the first …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets anchor of this joint, expressed in the second …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the principal (local X) axis of this joint, expressed …\nSets the principal axis of the joint, expressed in the …\nSets the principal (local X) axis of this joint, expressed …\nSets the principal axis of the joint, expressed in the …\nSets the joint’s frame, expressed in the first …\nSets the joint’s frame, expressed in the first …\nSets joint’s frame, expressed in the second …\nSets the joint’s frame, expressed in the second …\nSets the axes along which this rigid-body cannot translate …\nChanges the mass on these mass-properties.\nSets the maximum allowed distance between the attached …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nSets the maximum force the motor can deliver along the …\nSets the maximum force the motor can deliver.\nSets the maximum force the motor can deliver.\nSets the maximum force the motor can deliver.\nSet the spring-like model used by the motor to reach the …\nSet the spring-like model used by the motor to reach the …\nSet the spring-like model used by the motor to reach the …\nSet the spring-like model used by the motor to reach the …\nSets the target angle this motor needs to reach.\nSets the target angle this motor needs to reach.\nSets the target angle this motor needs to reach.\nSets the target angle this motor needs to reach.\nSets the target velocity this motor needs to reach.\nSets the target velocity this motor needs to reach.\nSets the target velocity this motor needs to reach.\nSets the target velocity this motor needs to reach.\nIf this rigid body is kinematic, sets its future position …\nIf this rigid body is kinematic, sets its future …\nIf this rigid body is kinematic, sets its future …\nSets the position and <code>next_kinematic_position</code> of this …\nSets the rotational part of this rigid-body’s position.\nSets whether self-contacts are enabled on this multibody.\nSets the maximum prediction distance Soft Continuous …\nSet the spring model used by this joint to reach the …\nSets the translational part of this rigid-body’s …\nPut this rigid-body to sleep.\nPut this rigid body to sleep.\nSets whether the rigid-body is to be created asleep.\nIs this body sleeping?\nWhether the rigid-body is to be created asleep.\nThe soft-CCD prediction distance for this rigid-body.\nSets the maximum prediction distance Soft Continuous …\nThe soft-CCD prediction distance for this rigid-body.\nThe maximum prediction distance Soft Continuous …\nSet the spring used by this joint to reach the desired …\nThe stiffness coefficient of the motor’s spring-like …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe target position of the motor.\nThe target velocity of the motor.\nInitialize the simulation parameters with settings …\nInitialize the simulation parameters with settings …\nSince how much time can this body sleep?\nThe amount of time the rigid-body must remain below the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nAccumulation of external torques (only for dynamic bodies).\nTransform each element of the mass properties.\nReturn <code>self</code> rotated by <code>rotation</code>.\nThe translational part of this rigid-body’s position.\nSets the initial translation of the rigid-body to be …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nInitializes and generate the velocity constraints …\nInitializes and generate the velocity constraints …\nUpdates the set of bodies that needs CCD to be resolved.\nUpdate the positions of all the colliders attached to this …\nUpdate the rigid-body poses based on this multibody joint …\nUpdate the world-space mass properties of <code>self</code>, taking …\nAn arbitrary user-defined 128-bit integer associated to …\nAn arbitrary user-defined 128-bit integer associated to …\nUser-defined data associated to this joint.\nUser-defined data associated to this rigid-body.\nAn arbitrary user-defined 128-bit integer associated to …\nRetrieves the constant force(s) that the user has added to …\nForces applied by the user.\nRetrieves the constant torque(s) that the user has added …\nTorque applied by the user.\nThe velocity of the given world-space point on this …\nThe velocity of the given world-space point on this …\nInitialize and generate velocity constraints to enforce, …\nForces the specified rigid-body to wake up if it is …\nWakes up this rigid-body.\nWakes up this rigid body if it is sleeping.\nThe coefficient in <code>[0, 1]</code> applied to warmstart impulses, …\nInitializes a CCD solver with a custom <code>QueryDispatcher</code> …\nThe world-space center of mass of the rigid-body.\nThe world-space center of mass of the rigid-body.\nThe world-space inverse angular inertia tensor of the …\nVelocities set to zero.\nAll of the groups.\nAn axis-aligned bounding box.\nThe mesh is replaced by its AABB.\nFlags affecting whether or not collision-detection happens …\nA potential new collision pair has been detected by the …\nAt least two adjacent triangles have opposite orientations.\nFound a triangle with two or three identical vertices.\nA ball shape.\nA ball shape.\nA ball shape.\nTrait of bounding volumes.\nTrait implemented by broad-phase algorithms supported by …\nA broad-phase combining a Hierarchical Grid and …\nAn event emitted by the broad-phase.\nThe constraint solver will take this contact manifold into …\nIf set, the connected components of the trimesh will be …\nA capsule shape.\nA capsule shape.\nA capsule shape.\nOrientation with a clockwise orientation, i.e., with a …\nA geometric entity that can be attached to a body so it …\nData associated to a collider that takes part to a …\nA structure responsible for building a new collider.\nFlags describing how the collider has been modified by the …\nEnum indicating whether or not a collider is enabled.\nA set of flags for controlling collision/intersection …\nIndex of a node of the interaction graph.\nThe unique identifier of a collider added to a collider …\nThe mass-properties of a collider.\nThe constraints solver-related properties of this collider …\nA pair of collider handles.\nInformation about the rigid-body this collider is attached …\nThe position of a collider.\nA set of colliders that can be handled by a physics <code>World</code>.\nThe shape of a collider.\nThe type of collider.\nEvents occurring when two colliders start or stop colliding\nFlags providing more information regarding a collision …\nA compound shape with an aabb bounding volume.\nA Compound shape.\nA Compound shape.\nA contact between two colliders.\nA single contact between two collider.\nEvent occurring when the sum of the magnitudes of the …\nA contact manifold between two colliders.\nA contact manifold between two colliders.\nThe description of all the contacts between a pair of …\nThe mesh is replaced by its convex-hull.\nThe convex hull calculation carried out by the …\nA 2D convex polygon.\nOrientation with a clockwise orientation, i.e., with a …\nA cuboid shape.\nA cuboid shape.\nA cuboid shape.\nA custom user-defined shape.\nA custom user-defined shape.\nIf set, any triangle that results in a failing half-hedge …\nIf set, the triangles sharing two vertices with identical …\nIf set, two triangles sharing three vertices with …\nEnable collision-detection between a collider attached to …\nEnable collision-detection between a collider attached to …\nEnable collision-detection between a collider attached to …\nThe default broad-phase implementation recommended for …\nDegenerate triangle.\nThe two colliders are guaranteed not to touch any more.\nThe collider is given a density.\nThe collider is disabled by the user explicitly.\nThe collider wasn’t disabled by the user explicitly but …\nFlag indicating that whether or not the collider is …\nThe collider is enabled.\nEnable collision-detection between a collider attached to …\nIf set, a special treatment will be applied to contact …\nShape-dependent identifier of a face.\nAn identifier of a feature of a convex polyhedron.\nFlag indicating that the collision groups of the collider …\nThe group n°1.\nThe group n°10.\nThe group n°11.\nThe group n°12.\nThe group n°13.\nThe group n°14.\nThe group n°15.\nThe group n°16.\nThe group n°17.\nThe group n°18.\nThe group n°19.\nThe group n°2.\nThe group n°20.\nThe group n°21.\nThe group n°22.\nThe group n°23.\nThe group n°24.\nThe group n°25.\nThe group n°26.\nThe group n°27.\nThe group n°28.\nThe group n°29.\nThe group n°3.\nThe group n°30.\nThe group n°31.\nThe group n°32.\nThe group n°4.\nThe group n°5.\nThe group n°6.\nThe group n°7.\nThe group n°8.\nThe group n°9.\nA bit mask identifying groups for interaction.\nIf set, the half-edge topology of the trimesh will be …\nA half-space delimited by an infinite plane.\nA shape representing a full half-space.\nA shape representing a full half-space.\nA heightfield shape.\nA heightfield shape.\nA heightfield shape.\nIndicates if a cell of a heightfield is removed or not. …\nA graph where nodes are collision objects and edges are …\nPairwise filtering using bit masks.\nThe description of all the contacts between a pair of …\nEnable collision-detection between a collider attached to …\nEnable collision-detection between a collider attached to …\nFlag indicating that the density or mass-properties of …\nAdditional shape-specific projection information\nIf set, the duplicate vertices of the trimesh will be …\nFlag indicating that any component of the collider has …\nThe collider is given a mass.\nThe collider is given explicit mass-properties.\nDetermines how meshes (generally when loaded from a file) …\nError that can be generated by the <code>MeshConverter</code>.\nNone of the groups.\nThe narrow-phase responsible for computing precise contact …\nIf set, the trimesh will be assumed to be oriented (with …\nThe mesh is replaced by its Oriented Bounding Box …\nThe point lies on the segment interior.\nThe point lies on an edge.\nThe point lies on the triangle interior.\nThe point lies on the triangle interior (for “solid” …\nThe point lies on a vertex.\nThe point lies on a vertex.\nFlag indicating that the <code>ColliderParent</code> component of the …\nFlag indicating that the dominance groups of the parent of …\nFlag indicating that the <code>ColliderPosition</code> component of the …\nA feature id where the feature type is packed into the …\nThe projection of a point on a collider.\nTrait of objects that can be tested for point inclusion …\nReturns shape-specific info in addition to generic …\nA polygonal feature representing the local polygonal …\nTrait implemented by convex shapes with features with …\nA polyline.\nA set of segments.\nA set of segments.\nFlag set if a <code>CollisionEvent::Stopped</code> was fired because at …\nA ray that can be cast against colliders.\nTraits of objects which can be transformed and tested for …\nThe intersection between a ray and a  collider.\nIndex of a node of the interaction graph.\nA convex polygon dilated by a sphere (so it has round …\nA convex polygon with rounded corners.\nA convex polygon with rounded corners.\nA cuboid dilated by a sphere (so it has round corners).\nA cuboid with rounded corners.\nA cuboid with rounded corners.\nA shape with rounded borders.\nA triangle dilated by a sphere (so it has round corners).\nA triangle with rounded corners.\nA triangle with rounded corners.\nFlag set if at least one of the colliders involved in the …\nFlag indicating that the <code>ColliderShape</code> component of the …\nA segment shape.\nA segment shape.\nA segment shape.\nLogical description of the location of a point on a …\nA collider that can generate intersection and intersection …\nTrait implemented by shapes usable by Rapier.\nThe result of a shape-cast between two shapes.\nEnum representing the type of a shape.\nThe shape of a collider.\nThe shape of a collider.\nTrait implemented by shapes composed of multiple simpler …\nA collider that can generate contacts and contact events.\nA contact seen by the constraints solver for computing …\nFlags affecting the behavior of the constraints solver for …\nEvent occurring when two colliders start colliding\nEvent occurring when two colliders stop colliding.\nTraits of convex shapes representable by a support mapping …\nFlag indicating that the <code>ColliderType</code> component of the …\nTemporary index to and edge of the interaction graph.\nA face of a triangle-mesh’s half-edge topology.\nA half-edge of a triangle-mesh’s half-edge topology.\nA vertex of a triangle-mesh’s half-edge topology.\nIndicated an inconsistency in the topology of a triangle …\nA single contact between two shape.\nA triangle mesh.\nA triangle mesh shape.\nA triangle mesh shape.\nThe mesh is loaded as-is without any particular processing.\nThe connected-components of a triangle mesh.\nThe status of the cell of an heightfield.\nThe half-edge topology information of a triangle mesh.\nThe mesh is loaded with the specified flags.\nA triangle shape.\nA triangle shape.\nA triangle shape.\nOrientation of a triangle.\nDescription of the location of a point on a triangle.\nThe pseudo-normals of a triangle providing approximations …\nEnum representing the shape with its actual type\nPacked feature id identifying an unknown feature.\nUnknown identifier.\nShape-dependent identifier of a vertex.\nThe segment first point.\nThe triangle first point.\nComputes the world-space <code>Aabb</code> of this half-space.\nCompute the axis-aligned bounding box of this polyline.\nComputes the world-space <code>Aabb</code> of this convex polygon, …\nCompute the axis-aligned bounding box of this triangle …\nThe shapes Aabbs.\nThe collision types enabled for this collider.\nThe set of active collision types for this collider.\nControls whether collision-detection happens between two …\nContact pairs enabled for this collider.\nThe events enabled for this collider.\nThe set of events enabled for this collider.\nThe events enabled for this collider.\nEvents enabled for this collider.\nThe physics hooks enabled for this collider.\nThe set of physics hooks enabled for this collider.\nThe physics hooks enabled for contact pairs and …\nPhysics hooks enabled for this collider.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nAllow interaction with everything.\nGet a flags value with all known bits set.\nAppends a second triangle mesh to this triangle mesh.\nConverts this abstract shape to a ball, if it is one.\nConverts this abstract shape to a mutable ball, if it is …\nConverts this abstract shape to a capsule, if it is one.\nConverts this abstract shape to a mutable capsule, if it …\nConverts this abstract shape to a compound shape, if it is …\nConverts this abstract shape to a mutable compound shape, …\nConverts this abstract shape to a convex polygon, if it is …\nConverts this abstract shape to a mutable convex polygon, …\nConverts this abstract shape to a cuboid, if it is one.\nConverts this abstract shape to a mutable cuboid, if it is …\nConverts this abstract shape to a halfspace, if it is one.\nConverts this abstract shape to a halfspace, if it is one.\nConverts this abstract shape to a heightfield, if it is …\nConverts this abstract shape to a mutable heightfield, if …\nConverts this shape to a polygonal feature-map, if it is …\nConverts this abstract shape to a polyline, if it is one.\nConverts this abstract shape to a mutable polyline, if it …\nConverts this abstract shape to a round convex polygon, if …\nConverts this abstract shape to a mutable round convex …\nConverts this abstract shape to a round cuboid, if it is …\nConverts this abstract shape to a mutable round cuboid, if …\nConverts this abstract shape to a round triangle, if it is …\nConverts this abstract shape to a round triangle, if it is …\nConverts this abstract shape to a segment, if it is one.\nConverts this abstract shape to a mutable segment, if it …\nConverts this abstract shape to the given shape, if it is …\nConverts this abstract shape to the given mutable shape, …\nConverts this shape into its support mapping, if it has …\nConverts this abstract shape to a triangle, if it is one.\nConverts this abstract shape to a mutable triangle, if it …\nConverts this abstract shape to a triangle mesh, if it is …\nConverts this abstract shape to a mutable triangle mesh, …\nGets the underlying shape as an enum.\nThe segment second point.\nThe triangle second point.\nInitialize a ball shape defined by its radius.\nInitialize a new collider builder with a ball shape …\nThe barycentric coordinates corresponding to this point …\nThe barycentric coordinates corresponding to this point …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe radius of the rounded border.\nThe radius of the rounded border.\nThe radius of the rounded border.\nThe radius of the rounded border.\nComputes the world-space bounding sphere of this …\nComputes the world-space bounding sphere of this polyline, …\nComputes the world-space bounding sphere of this convex …\nComputes the world-space bounding sphere of this triangle …\nBuilds a new collider attached to the given rigid-body.\nThe triangle third point.\nInitialize a capsule shape from its endpoints and radius.\nInitialize a new collider builder with a capsule defined …\nInitialize a capsule shape aligned with the <code>x</code> axis.\nInitialize a new collider builder with a capsule shape …\nInitialize a capsule shape aligned with the <code>y</code> axis.\nInitialize a new collider builder with a capsule shape …\nComputes the time of impact between this transform shape …\nComputes the time of impact, and normal between this …\nComputes the time of impact between this transform shape …\nComputes the time of impact, and normal between this …\nReturns a point inside of this bounding volume. This is …\nClears all the contacts of this contact pair.\nClones this shape into a boxed trait-object.\nClones this shape into a boxed trait-object.\nThe handle of the first collider involved in this …\nThe first collider involved in the contact.\nThe handle of the first collider involved in this pair.\nThe first collider involved in the contact pair.\nThe handle of the second collider involved in this …\nThe second collider involved in the contact.\nThe handle of the second ocllider involved in this pair.\nThe second collider involved in the contact pair.\nThe collision groups used by this collider.\nSets the collision groups used by this collider.\nThe groups controlling the pairs of colliders that can …\nThe collision groups for the collider being built.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nInitialize a compound shape defined by its subshapes.\nInitialize a new collider builder with a compound shape.\nComputes the <code>Aabb</code> of this shape with the given position.\nCompute the axis-aligned bounding box of this collider.\nComputes the bounding-sphere of this shape with the given …\nCompute the axis-aligned bounding box of this collider, …\nComputes the <code>Aabb</code> of this shape.\nComputes the bounding-sphere of this shape.\nComputes the swept <code>Aabb</code> of this shape, i.e., the space it …\nCompute the axis-aligned bounding box of this collider …\nReturns the connected-component of this mesh.\nReturns the connected-component information of this …\nThe total force magnitude beyond which a contact force …\nSets the total force magnitude beyond which a contact …\nThe total force magnitude beyond which a contact force …\nThe contact graph containing all contact pairs and their …\nThe contact pair involving two specific colliders.\nReturns the contact pair at the given temporary index.\nThe contact pair involving two specific colliders.\nAll the contact pairs maintained by this narrow-phase.\nAll the contact pairs involving the given collider.\nAll the contacts involving the given collider.\nThe contact skin of this collider.\nSets the contact skin of the collider.\nAn extra thickness around the collider shape to keep them …\nComputes the contacts between two polygonal features.\nChecks if this bounding volume contains another one.\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nIs this collider handle valid?\nTests if the given point is inside of <code>self</code>.\nTests if the given point is inside of <code>self</code> transformed by <code>m</code>…\nApplies the conversion rule described by this <code>MeshConverter</code>…\nInitializes a collider builder with a shape converted from …\nInitializes a compound shape obtained from the …\nInitializes a collider builder with a compound shape …\nInitializes a compound shape obtained from the …\nInitializes a collider builder with a compound shape …\nCreates a new shared shape that is the convex-hull of the …\nInitializes a new collider builder with a 2D convex …\nCreates a new shared shape that is a convex polygon formed …\nCreates a new collider builder that is a convex polygon …\nCopy all the characteristics from <code>other</code> to <code>self</code>.\nCopy to <code>self</code> the geometric information from <code>contact</code>.\nInitialize a cuboid shape defined by its half-extents.\nInitialize a new collider builder with a cuboid shape …\nUser-data associated to this contact.\nAdditional tracked data associated to this contact …\nUser-data associated to this contact.\nCreate a compound shape from the <code>TriMesh</code>. This involves …\nThe default density used by the collider builder.\nThe default friction coefficient used by the collider …\nSet the position of this collider in the local-space of …\nThe density of this collider.\nSets the uniform density of the collider this builder will …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nDirection of the ray.\nThe distance between the two contact points.\nThe distance between the two contact points.\nThe distance between the two original contacts points …\nComputes the minimal distance between a point and <code>self</code>.\nComputes the minimal distance between a point and <code>self</code> …\nReturns a boxed object from a boxed trait object if the …\nReturns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …\nReturns a mutable reference to the object within the trait …\nReturns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …\nReturns a reference to the object within the trait object …\nThe edges pseudo-normals, in no particular order.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nEnable or disable the collider after its creation.\nWhether or not the collider is enabled.\nWill the collider being built be enabled?\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nExtracts the connected components of this polyline, …\nConverts a face feature id into a packed feature id.\nThe face associated to this half-edge.\nThe triangle’s face normal.\nThe <code>face_colors[i]</code> gives the connected-component index of …\nComputes the contacts between two polygonal faces.\nCompute contacts points between a face and a vertex.\nThe faces of this half-edge representation.\nFeature at the intersection point.\nThe normal of the given feature.\nThe shape’s normal at the given point located on a …\nGets the normal of the triangle represented by <code>feature</code>.\nThe feature ID of this polygonal feature.\nThe feature ID of the first shape involved in the contact.\nThe feature ID of the first shape involved in the contact.\nThe feature ID of the second shape involved in the contact.\nThe feature ID of the second shape involved in the contact.\nGroups filter.\nFinds the contact with the smallest signed distance.\nThe flags of this triangle mesh.\nA flat view of the index buffer of this mesh.\nA flat view of the index buffer of this mesh.\nCreates a new tracked contact where its input may need to …\nThe friction coefficient of this collider.\nSets the friction coefficient of the collider this builder …\nThe friction coefficient of this collider.\nThe effective friction coefficient at this contact point.\nThe friction coefficient of the collider to be built.\nThe combine rule used by this collider to combine its …\nSets the rule to be used to combine two friction …\nThe rule applied to combine the friction coefficients of …\nThe rule used to combine two friction coefficients.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nInit a contact force event from a contact pair.\nCreates a new 2D convex polygon from an arbitrary set of …\nCreates a new 2D convex polygon from a set of points …\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nCreate a <code>TriMesh</code> from a set of points assumed to describe …\nReconstructs an handle from its (index, generation) …\nGet the collider with the given handle.\nGets a mutable reference to the collider with the given …\nGets the collider with the given handle without a known …\nGets a mutable reference to the collider with the given …\nThe set of faces grouped by connected components.\nOne of the half-edge with this vertex as endpoint.\nThe half-edge adjacent to this face, with a starting point …\nThe half-edges of this half-edge representation.\nThe half-extents of the cuboid.\nInitialize a plane shape defined by its outward normal.\nInitialize a new collider build with a half-space shape …\nHandle of the rigid-body this collider is attached to.\nMaintain the narrow-phase internal state by taking …\nIs there any active contact in this contact pair?\nInitializes a heightfield shape defined by its set of …\nInitializes a collider builder with a heightfield shape …\nThe identity position.\nThe impulse, along the contact normal, applied by this …\nGets the interaction with the given index.\nThe index buffer of this mesh.\nThe index buffer of this mesh.\nThe shape being rounded.\nThe shape being rounded.\nThe shape being rounded.\nThe shape being rounded.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nInserts a new collider to this set and retrieve its handle.\nInserts a new collider to this set, attach it to the given …\nThe interaction between the two collision objects …\nThe interaction between the two collision objects …\nAll the interactions on this graph.\nAll the interaction involving the collision object with …\nAll the interactions on this graph with the corresponding …\nAll the mutable references to interactions involving the …\nAn internal index associated to this collider by the …\nAre the colliders intersecting?\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe intersection graph containing all intersection pairs …\nThe intersection pair involving two specific colliders.\nThe intersection pair involving two specific colliders.\nAll the intersection pairs maintained by this narrow-phase.\nAll the intersection pairs involving the given collider, …\nAll the intersection pairs involving the given collider.\nChecks if this bounding volume intersect with another one.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nTests whether a ray intersects this transformed shape.\nTests whether a ray intersects this transformed shape.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this handle into its (index, generation) …\nAn always-invalid collider handle.\nAn always-invalid collider handle.\nReturns true if the trait object wraps an object of type …\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nDoes the given feature ID identify a backface of this …\nShould we treat this contact as a bouncy contact? If <code>true</code>, …\nIs this shape known to be convex?\nIs this shape a <code>ConvexPolyhedron</code>?\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\n<code>true</code> if there are no colliders in this set.\nIs this collider enabled?\nIs the identified feature a face?\nWhether or not the point to project was inside of the …\nWhether or not this contact existed during the last …\nReturns <code>true</code> if the point is located on the relative …\nIs this collider a sensor?\nIs this collider a sensor?\nIs this collider a sensor?\nIs the identified feature unknown?\nIs the identified feature a vertex?\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nIterate through all the colliders on this set.\nIterate through all the enabled colliders on this set.\nIterates mutably through all the enabled colliders on this …\nIterates mutably through all the colliders on this set.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe number of colliders on this set.\nThe <code>Aabb</code> of this compound in its local-space.\nComputes the local-space <code>Aabb</code> of this half-space.\nGets the local axis-aligned bounding box of this polyline.\nComputes the local-space <code>Aabb</code> of this convex polygon.\nGets the local axis-aligned bounding box of this triangle …\nThe bounding-sphere of this compound in its local-space.\nComputes the local-space bounding sphere of this …\nComputes the local-space bounding sphere of this polyline.\nComputes the local-space bounding sphere of this convex …\nComputes the local-space bounding sphere of this triangle …\nThe contact normal of all the contacts of this manifold, …\nThe contact normal of all the contacts of this manifold, …\nThe contact point in the local-space of the first shape.\nThe contact point in the local-space of the first shape.\nThe contact point in the local-space of the second shape.\nThe contact point in the local-space of the second shape.\nCompute the support polygonal face of <code>self</code> towards the <code>dir</code>.\nSame as <code>self.local_support_point</code> except that <code>dir</code> is …\nEnlarges this bounding volume.\nCreates a new, enlarged version, of this bounding volume.\nIf this shape is shared, then the content of <code>self</code> is …\nThe set of contact manifolds between the two colliders.\nApplies a function to one sub-shape of this composite …\nThe mass of this collider.\nSets the mass of the collider this builder will build.\nCompute the mass-properties of this shape given its …\nThe mass-properties of this collider.\nCompute the local-space mass properties of this collider.\nSets the mass properties of the collider this builder will …\nControls the way the collider’s mass-properties are …\nThe material (friction and restitution properties) of this …\nThe world-space (unit) direction of the force with …\nThe magnitude of the largest force at a contact point of …\nThe magnitude and (unit) direction of the maximum impulse …\nGroups memberships.\nMerges this bounding volume with another one. The merge is …\nMerges this bounding volume with another one.\nDo these changes justify a broad-phase update?\nDo these changes justify a narrow-phase update?\nCreates a new tracked contact.\nBuilds a new compound shape.\nBuilds a new halfspace from its center and its normal.\nCreates a new polyline from a vertex buffer and an index …\nCreates a new triangle mesh from a vertex buffer and an …\nWraps the given shape as a shared shape.\nCreate a new empty broad-phase.\nCreates a new pair of collider handles.\nCreates a new collider material with the given friction …\nCreates a new empty collection of collision objects.\nInitializes with the given interaction groups and …\nCreates a new empty narrow-phase.\nInitialize a new collider builder with the given shape.\nCreate a new empty set of colliders.\nThe next half-edge.\nPrevent all interactions.\nThe normal at the intersection point.\nThe halfspace planar boundary’s outward normal.\nThe world-space contact normal shared by all the contact …\nThe local-space outward normal on the first shape at the …\nThe local-space outward normal on the second shape at the …\nThe normals of the edges of this convex polygon.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nNumber of actives contacts, i.e., contacts that will be …\nThe total number of connected components.\nThe number of segments forming this polyline.\nThe number of triangles forming this mesh.\nThe number of vertices on this polygon (must be &lt;= 4).\nReturns a mitered offset of the polygon.\nStarting point of the ray.\nThe rigid body this collider is attached to.\nThe projection result.\nThe contact point in world-space.\nThe vertices of this convex polygon.\nThe contacts points.\nInitializes a polyline shape defined by its vertex and …\nInitializes a collider builder with a polyline shape …\nConst position of this collider relative to its parent …\nThe world-space position of this collider.\nSets the initial position (translation and orientation) of …\nThe position of this collider.\nThe position of this collider with respect to the body it …\nSets the initial position (translation and orientation) of …\nProjects the given direction to it is contained in the …\nProjects a point on <code>self</code>.\nProjects a point on the boundary of <code>self</code> and returns the …\nProjects a point on <code>self</code>.\nProjects a point on <code>self</code>, with a maximum projection …\nProjects a point on <code>self</code>, with a maximum projection …\nPerform a point projection assuming a solid interior based …\nProjects a point on <code>self</code>, unless the projection lies …\nProjects a point on <code>self</code> transformed by <code>m</code>, unless the …\nProjects a point on <code>self</code> transformed by <code>m</code>.\nProjects a point on the boundary of <code>self</code> transformed by <code>m</code> …\nProjects a point on <code>self</code> transformed by <code>m</code>.\nProjects a point on <code>self</code> transformed by <code>m</code>, with a maximum …\nProjects a point on <code>self</code> transformed by <code>m</code>, unless the …\nGets the acceleration structure of the composite shape.\nThe acceleration structure used by this compound shape.\nThe acceleration structure used by this triangle-mesh.\nThe query dispatcher used by this narrow-phase to select …\nThe radius of the ball.\nThe radius of the capsule.\nThe range of connected components. …\nThe underlying raw graph structure of this interaction …\nThe relative dominance of the bodies involved in this …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nRemove a collider from this set and update its parent …\nWas at least one of the colliders involved in the …\nThe restitution coefficient of this collider.\nSets the restitution coefficient of the collider this …\nThe restitution coefficient of this collider.\nThe effective restitution coefficient at this contact …\nThe restitution coefficient of the collider to be built.\nThe combine rule used by this collider to combine its …\nSets the rule to be used to combine two restitution …\nThe rule applied to combine the restitution coefficients …\nThe rule used to combine two restitution coefficients.\nReverse the orientation of this polyline by swapping the …\nReverse the orientation of the triangle mesh.\nThe first rigid-body involved in this contact manifold.\nThe second rigid-body involved in this contact manifold.\nThe rotational part of this collider’s position.\nSets the initial orientation of the collider to be created.\nInitializes a compound shape obtained from the …\nInitializes a collider builder with a compound shape …\nInitializes a compound shape obtained from the …\nInitializes a collider builder with a compound shape …\nCreates a new shared shape with rounded corners that is the\nInitializes a new collider builder with a round 2D convex …\nCreates a new shared shape with round corners that is a …\nCreates a new collider builder that is a round convex …\nInitialize a round cuboid shape defined by its …\nInitialize a new collider builder with a round cuboid …\nInitializes a triangle shape with round corners.\nInitializes a collider builder with a triangle shape with …\nScales this shape by <code>scale</code> into a boxed trait-object.\nComputes a scaled version of this half-space.\nComputes a scaled version of this polyline.\nComputes a scaled version of this convex polygon.\nReturns a scaled version of this triangle mesh.\nGet the <code>i</code>-th segment of this mesh.\nInitialize a segment shape from its endpoints.\nInitializes a collider builder with a segment shape.\nThe endpoints of the capsule’s principal axis.\nTransforms  the feature-id of a segment to the feature-id …\nAn iterator through all the segments of this mesh.\nWas at least one of the colliders involved in the …\nSets whether or not the collider built by this builder is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSets the collision types enabled for this collider.\nSets the events enabled for this collider.\nSets the physics hooks enabled for this collider.\nSets the collision groups of this collider.\nSets the total force magnitude beyond which a contact …\nSets the contact skin of this collider.\nSets the uniform density of this collider.\nSets whether or not this collider is enabled.\nSets the flags of this triangle mesh, controlling its …\nSets the friction coefficient of this collider.\nSets the combine rule used by this collider to combine its …\nSets the internal index associated to this collider by the …\nSets the mass of this collider.\nSets the mass properties of this collider.\nSets the parent of the given collider.\nSets the position of this collider.\nSets the position of this collider with respect to its …\nSets the restitution coefficient of this collider.\nSets the combine rule used by this collider to combine its …\nSets the rotational part of this collider’s position.\nSets the rotational part of this collider’s rotation …\nSets whether or not this is a sensor collider.\nSets the shape of this collider.\nSets the solver groups of this collider.\nSets the translational part of this collider’s position.\nSets the translational part of this collider’s …\nThe geometric shape of this collider.\nThe shape of the collider to be built.\nA mutable reference to the geometric shape of this …\nGets the type tag of this shape.\nThe shapes of this compound shape.\nRetrieve the SharedShape. Also see the <code>shape()</code> function\nThe contacts that will be seen by the constraints solver …\nFlags used to control some aspects of the constraints …\nThe solver groups used by this collider.\nSets the solver groups used by this collider.\nThe groups controlling the pairs of collider that have …\nThe solver groups for the collider being built.\nIs this a <code>Started</code> collision event?\nThe way the shape-casting algorithm terminated.\nIs this a <code>Stopped</code> collision event?\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe first subshape involved in this contact manifold.\nThe second subshape involved in this contact manifold.\nIf the first shape involved is a composite shape, this …\nIf the second shape involved is a composite shape, this …\nGet the ID of the feature with a normal that maximizes the …\nSame as <code>self.support_point</code> except that <code>dir</code> is normalized.\nSwaps the two collider handles in <code>self</code>.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe friction impulse along the vector orthonormal to the …\nThe desired tangent relative velocity at the contact point.\nTest whether contact should be computed between two …\nCheck if interactions should be allowed based on the …\nTighten this bounding volume.\nCreates a new, tightened version, of this bounding volume.\nThe time of impact of the ray with the object. The exact …\nThe time at which the objects touch.\nConvert the connected-component description into actual …\nConvert the connected-component description into actual …\nDiscretize the boundary of this round cuboid as a …\nDiscretize the boundary of this round convex polygon as a …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns the topology information of this trimesh, if it …\nThe sum of all the forces between the two colliders.\nThe sum of the magnitudes of each force between the two …\nThe sum of all the impulses applied by contacts on this …\nThe sum of the magnitudes of the contacts on this contact …\nTransforms the vertices of <code>self</code> by the given position <code>pos</code>.\nTransforms in-place the vertices of this triangle mesh.\nThe translational part of this collider’s position.\nSets the initial translation of the collider to be created.\nGet the <code>i</code>-th triangle of this mesh.\nInitializes a triangle shape.\nInitializes a collider builder with a triangle shape.\nAn iterator through all the triangles of this mesh.\nInitializes a triangle mesh shape defined by its vertex …\nInitializes a collider builder with a triangle mesh shape …\nInitializes a triangle mesh shape defined by its vertex …\nInitializes a collider builder with a triangle mesh shape …\nThis half-edge twin on the adjacent triangle.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nUnpacks this feature id into an explicit enum.\nRetrieves the value of the identifier if <code>self</code> is a face.\nRevries the value of the identifier if <code>self</code> is a vertex.\nUpdates the broad-phase.\nUpdates the broad-phase, taking into account the new …\nSets an arbitrary user-defined 128-bit integer associated …\nA user-defined piece of data.\nUser-defined data associated to this collider.\nThe user-data of the collider being built.\nConverts a vertex feature id into a packed feature id.\nThe first vertex of this edge.\nThe vertex buffer of this mesh.\nThe vertex buffer of this mesh.\nThe vertices of this half-edge representation.\nUp to two vertices forming this polygonal feature.\nThe feature IDs of this polygon’s vertices.\nThe volume (or surface in 2D) of this collider.\nThe impulse retained for warmstarting the next simulation …\nImpulse used to warmstart the solve for the normal …\nThe friction impulse retained for warmstarting the next …\nImpulse used to warmstart the solve for the friction …\nSets the interaction mask of this filter.\nCreates a new triangle mesh from a vertex buffer and an …\nSets the group this filter is part of.\nCreates a new empty narrow-phase with a custom query …\nThe local-space closest point on the first shape at the …\nThe local-space closest point on the second shape at the …\nConstructs a pair of artificial handles that are not …\nThe edge shared between the two triangles.\nThe first triangle, with an orientation opposite to the …\nThe second triangle, with an orientation opposite to the …\nThe maximum number of rotational degrees of freedom of a …\nThe dimension of the rotations.\nThe angular vector type.\nThe angular inertia of a rigid body.\nA matrix that represent the cross product with a given …\nThe default tolerance used for geometric operations.\nThe dimension of the space.\nThe dimension of the ambient space.\nThe transformation matrix type.\nThe type of a constraint Jacobian in twist coordinates.\nThe type of a slice of the constraint Jacobian in twist …\nThe type of a mutable slice of the constraint Jacobian in …\nMax number of pairs of contact points from the same …\nThe matrix type.\nThe orientation type.\nThe point type.\nThe principal angular inertia of a rigid body.\nThe rotation matrix type.\nSIMD_WIDTH - 1\nThe number of lanes of a SIMD number.\nThe maximum number of possible rotations and translations …\nA 2D symmetric-definite-positive matrix.\nA SIMD bool with SIMD_WIDTH lanes.\nA SIMD float with SIMD_WIDTH lanes.\nA vector with a dimension equal to the maximum number of …\nThe dimension of the space multiplied by two.\nThe type of impulse applied for friction constraints.\nThe translation type.\nThe unit vector type.\nThe vector type.\nThe coordinates of this point, i.e., the shift from the …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe component at the first row and first column of this …\nThe component at the first row and second column of this …\nThe component at the second row and second column of this …\nThe pure rotational part of this isometry.\nThe pure translational part of this isometry.\nThe translation coordinates, i.e., how much is added to a …\nFlags affecting the events generated for this collider.\nFlags affecting the behavior of the constraints solver for …\nIf this flag is set, the Aabbs of colliders will be …\nIf this flag is set, the collider shapes will be rendered.\nIf set, Rapier will call …\nIf this flag is set, the geometric contacts will be …\nIf set, Rapier will call …\nA collision event handler that collects events into a …\nA collider is being rendered.\nThe AABB of a collider is being rendered.\nThe collision pipeline, responsible for performing …\nContext given to custom contact modifiers to modify the …\nThe contacts of a contact-pair are being rendered.\nA color for debug-rendering.\nTrait implemented by graphics backends responsible for …\nFlags indicating what part of the physics engine should be …\nThe object currently being rendered by the debug-renderer.\nPipeline responsible for rendering the state of the …\nStyle used for computing colors when rendering the scene.\nExclude from the query any collider attached to a dynamic …\nExclude from the query any collider attached to a fixed …\nExclude from the query any collider attached to a …\nExclude from the query any collider that is a sensor.\nExclude from the query any collider that is not a sensor.\nTrait implemented by structures responsible for handling …\nIf set, Rapier will call <code>PhysicsHooks::filter_contact_pair</code> …\nIf set, Rapier will call …\nIf this flag is set, the impulse joints will be rendered.\nAn impulse-joint is being rendered.\nIf this flag is set, all the joints will be rendered.\nIf set, Rapier will call …\nIf this flag is set, the multibody joints will be rendered.\nA multibody joint is being rendered.\nExcludes all colliders not attached to a dynamic …\nExclude all colliders attached to a non-fixed rigid-body …\nExcludes all colliders not attached to a kinematic …\nContext given to custom collision filters to filter-out …\nUser-defined functions called by the physics engines …\nThe physics pipeline, responsible for stepping the whole …\nA filter that describes what collider should be included …\nFlags for excluding whole sets of colliders from a scene …\nA pipeline for performing queries on all the colliders of …\nIf this flag is set, the local coordinate axes of …\nA rigid-body is being rendered.\nIf this flag is set, the solver contacts will be rendered.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe set of rigid-bodies.\nThe set of rigid-bodies.\nThe number of subdivision used to approimate the curved …\nFind the closest intersection between a ray and a set of …\nFind the closest intersection between a ray and a set of …\nCasts a shape at a constant linear velocity and retrieve …\nThe handle of the first collider involved in the potential …\nThe handle of the first collider involved in the potential …\nThe handle of the first collider involved in the potential …\nThe handle of the first collider involved in the potential …\nThe color of the colliders Aabbs.\nThe color of colliders attached to dynamic rigid-bodies.\nThe color of colliders attached to fixed rigid-bodies.\nThe color of colliders attached to kinematic rigid-bodies.\nThe color of colliders not attached to any rigid-body.\nThe set of colliders.\nThe set of colliders.\nFinds all handles of all the colliders with an Aabb …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe collor for the segments joining the two contact points.\nThe color of the contact normals.\nThe length of the contact normals.\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nCounters used for benchmarking only.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nIf a rigid-body is disabled, its attached entities will …\nDraws a colored line.\nDraws a chain of line.\nDraws a chain of line.\nDraws a set of line.\nDraws a set of line.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nSet the collider that will be excluded from the scene …\nIf set, this collider will be excluded from the scene …\nExclude from the query any collider attached to a dynamic …\nExclude from the query any collider attached to a fixed …\nExclude from the query any collider attached to a …\nSet the rigid-body that will be excluded from the scene …\nIf set, any collider attached to this rigid-body will be …\nExclude from the query any collider that is a sensor.\nExclude from the query any collider that is not a sensor.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nApplies the contact pair filter.\nApplies the contact pair filter.\nApplies the intersection pair filter.\nApplies the intersection pair filter.\nPredicate to filter-out some objects from the …\nPredicate to filter-out some objects from the …\nFlags indicating what particular type of colliders should …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nOnly colliders with collision groups compatible with this …\nIf set, only colliders with collision groups compatible …\nHandle a collision event.\nHandle a force event.\nThe color of the line between a rigid-body’s …\nThe color of the line between the two anchors of an …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nGets the handle of up to one collider intersecting the …\nFind all the colliders containing the given point.\nFind the all intersections between a ray and a set of …\nRetrieve all the colliders intersecting the given shape.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe contact manifold.\nFlags controlling what part of the physics engine need to …\nModifies the set of contacts seen by the constraints …\nModifies the set of contacts seen by the constraints …\nThe color of the line between a rigid-body’s …\nThe color of the line between the two anchors of a …\nInitializes a new physics pipeline.\nInitialize a new collision event handler from crossbeam …\nInitializes a new physics pipeline.\nCreates a new debug-render pipeline from a given style and …\nInitializes an empty query pipeline.\nA query filter that doesn’t exclude any collider.\nCasts a shape with an arbitrary continuous motion and …\nThe contact normal that can be modified.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nExcludes all colliders not attached to a dynamic …\nExclude all colliders attached to a non-fixed rigid-body …\nExcludes all colliders not attached to a kinematic …\nSet the predicate to apply a custom collider filtering …\nIf set, any collider for which this closure returns false …\nFind the projection of a point on the closest collider.\nFind the projection of a point on the closest collider.\nThe query dispatcher used by this query pipeline for …\nStructs implementing <code>QbvhDataGenerator&lt;ColliderHandle&gt;</code> to …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nRender the scene.\nCreates a new debug-render pipeline that renders everything\nRender only the colliders from the scene.\nRender contact.\nRender only the joints from the scene.\nRender only the rigid-bodies from the scene.\nThe handle of the first body involved in the potential …\nThe handle of the first body involved in the potential …\nThe handle of the first body involved in the potential …\nThe handle of the first body involved in the potential …\nThe length of the local coordinate axes rendered for a …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nIf a rigid-body is sleeping, its attached entities will …\nThe solver contacts that can be modified.\nExecutes one step of the collision detection.\nExecutes one timestep of the physics simulation.\nThe style used to compute the line colors for each element …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe number of subdivision used to approximate the curved …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nTests if the given collider should be taken into account …\nApplies the filters described by <code>self</code> to a collider to …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nUpdate the acceleration structure on the query pipeline.\nHelper function to update <code>self</code> to emulate a …\nUpdate the query pipeline incrementally, avoiding a …\nUpdate the acceleration structure on the query pipeline …\nUser-defined data attached to the manifold.\nInitializes an empty query pipeline with a custom …\nGenerates collider AABBs based on the AABB at their …\nGenerates collider AABBs based on the union of their AABB …\nGenerates collider AABBs based on the union of their …\nThe rigid bodies of your simulation.\nThe rigid bodies of your simulation.\nThe colliders of your simulation.\nThe colliders of your simulation.\nThe colliders of your simulation.\nThe delta time to compute predicted position.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA dynamically sized column-major matrix.\nA dynamically sized column vector.\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nConstruct a fixed-size point directly from data.\nConstruct a fixed-size column vector directly from data.\nThe type of the array of orthonormal vectors.\nMethods for simultaneously indexing a container with two …\nThe result of quaternion differentiation.\nTrait to compute the orthonormal basis of a vector.\nTrait implemented by quaternions.\nThe trait for real numbers used by Rapier.\nTrait to copy the sign of each component of one …\nCopy the sign of each component of <code>self</code> to the …\nCompute the differential of <code>inv(q1) * q2</code>.\nGets mutable references to two distinct elements of the …\nGets a mutable reference to one element, and immutable …\nComputes the vectors which, when combined with <code>self</code>, form …\nComputes a vector orthogonal to <code>self</code> with a unit length …\nCalculate the difference with smallest absolute value …\nCalculate the difference with smallest absolute value …")