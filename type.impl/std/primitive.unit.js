(function() {
    var type_impls = Object.fromEntries([["bevy_rapier2d",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystem%3C%3CT+as+System%3E::In,+%3CT+as+System%3E::Out,+()%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#224\">Source</a><a href=\"#impl-IntoSystem%3C%3CT+as+System%3E::In,+%3CT+as+System%3E::Out,+()%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;&lt;T as <a class=\"trait\" href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\">System</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/system/trait.System.html#associatedtype.In\" title=\"type bevy_ecs::system::system::System::In\">In</a>, &lt;T as <a class=\"trait\" href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\">System</a>&gt;::<a class=\"associatedtype\" href=\"bevy_ecs/system/system/trait.System.html#associatedtype.Out\" title=\"type bevy_ecs::system::system::System::Out\">Out</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt; for T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\">System</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.System\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#225\">Source</a><a href=\"#associatedtype.System\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy_ecs/system/trait.IntoSystem.html#associatedtype.System\" class=\"associatedtype\">System</a> = T</h4></section></summary><div class='docblock'>The type of <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> that this instance converts into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_system\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#226\">Source</a><a href=\"#method.into_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" class=\"fn\">into_system</a>(this: T) -&gt; T</h4></section></summary><div class='docblock'>Turns this value into its corresponding <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pipe\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#181-185\">Source</a><a href=\"#method.pipe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\" class=\"fn\">pipe</a>&lt;B, BIn, BOut, MarkerB&gt;(self, system: B) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/combinator/struct.IntoPipeSystem.html\" title=\"struct bevy_ecs::system::combinator::IntoPipeSystem\">IntoPipeSystem</a>&lt;Self, B&gt;<div class=\"where\">where\n    Out: 'static,\n    B: <a class=\"trait\" href=\"bevy_ecs/system/trait.IntoSystem.html\" title=\"trait bevy_ecs::system::IntoSystem\">IntoSystem</a>&lt;BIn, BOut, MarkerB&gt;,\n    BIn: for&lt;'a&gt; <a class=\"trait\" href=\"bevy_ecs/system/input/trait.SystemInput.html\" title=\"trait bevy_ecs::system::input::SystemInput\">SystemInput</a>&lt;Inner&lt;'a&gt; = Out&gt;,</div></h4></section></summary><div class='docblock'>Pass the output of this system <code>A</code> into a second system <code>B</code>, creating a new compound system. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.pipe\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#209-211\">Source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\" class=\"fn\">map</a>&lt;T, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"bevy_ecs/system/adapter_system/struct.IntoAdapterSystem.html\" title=\"struct bevy_ecs::system::adapter_system::IntoAdapterSystem\">IntoAdapterSystem</a>&lt;F, Self&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Out) -&gt; T,</div></h4></section></summary><div class='docblock'>Pass the output of this system into the passed function <code>f</code>, creating a new system that\noutputs the value returned from the function. <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.system_type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/system/mod.rs.html#218\">Source</a><a href=\"#method.system_type_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy_ecs/system/trait.IntoSystem.html#method.system_type_id\" class=\"fn\">system_type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a></h4></section></summary><div class='docblock'>Get the <a href=\"https://doc.rust-lang.org/1.85.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\"><code>TypeId</code></a> of the <a href=\"bevy_ecs/system/system/trait.System.html\" title=\"trait bevy_ecs::system::system::System\"><code>System</code></a> produced after calling <a href=\"bevy_ecs/system/trait.IntoSystem.html#tymethod.into_system\" title=\"associated function bevy_ecs::system::IntoSystem::into_system\"><code>into_system</code></a>.</div></details></div></details>","IntoSystem<<T as System>::In, <T as System>::Out, ()>","bevy_rapier2d::plugin::plugin::NoUserData"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C()%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#68\">Source</a><a href=\"#impl-MultiUnzip%3C()%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#68\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self)</h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<()>","bevy_rapier2d::plugin::plugin::NoUserData"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[8040]}