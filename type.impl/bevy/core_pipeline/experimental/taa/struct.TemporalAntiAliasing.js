(function() {
    var type_impls = Object.fromEntries([["bevy",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-TemporalAntiAliasing\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#impl-Clone-for-TemporalAntiAliasing\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","bevy::core_pipeline::experimental::taa::TemporalAntiAliasSettings"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Component-for-TemporalAntiAliasing\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#impl-Component-for-TemporalAntiAliasing\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy/prelude/trait.Component.html\" title=\"trait bevy::prelude::Component\">Component</a> for <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a><div class=\"where\">where\n    <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,</div></h3><div class=\"docblock\"><p>Required Components: <a href=\"bevy/render/camera/struct.TemporalJitter.html\" title=\"struct bevy::render::camera::TemporalJitter\"><code>TemporalJitter</code></a>, <a href=\"bevy/core_pipeline/prepass/struct.DepthPrepass.html\" title=\"struct bevy::core_pipeline::prepass::DepthPrepass\"><code>DepthPrepass</code></a>, <a href=\"bevy/core_pipeline/prepass/struct.MotionVectorPrepass.html\" title=\"struct bevy::core_pipeline::prepass::MotionVectorPrepass\"><code>MotionVectorPrepass</code></a>.</p>\n</div></section></summary><div class=\"docblock\"><p>A component’s Required Components are inserted whenever it is inserted. Note that this will also insert the required components <em>of</em> the required components, recursively, in depth-first order.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.STORAGE_TYPE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#associatedconstant.STORAGE_TYPE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy/prelude/trait.Component.html#associatedconstant.STORAGE_TYPE\" class=\"constant\">STORAGE_TYPE</a>: <a class=\"enum\" href=\"bevy/ecs/component/enum.StorageType.html\" title=\"enum bevy::ecs::component::StorageType\">StorageType</a> = bevy_ecs::component::StorageType::Table</h4></section></summary><div class='docblock'>A constant indicating the storage type used for this component.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_required_components\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.register_required_components\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Component.html#method.register_required_components\" class=\"fn\">register_required_components</a>(\n    requiree: <a class=\"struct\" href=\"bevy/ecs/component/struct.ComponentId.html\" title=\"struct bevy::ecs::component::ComponentId\">ComponentId</a>,\n    components: &amp;mut <a class=\"struct\" href=\"bevy/ecs/component/struct.Components.html\" title=\"struct bevy::ecs::component::Components\">Components</a>,\n    storages: &amp;mut <a class=\"struct\" href=\"bevy/ecs/storage/struct.Storages.html\" title=\"struct bevy::ecs::storage::Storages\">Storages</a>,\n    required_components: &amp;mut <a class=\"struct\" href=\"bevy/ecs/component/struct.RequiredComponents.html\" title=\"struct bevy::ecs::component::RequiredComponents\">RequiredComponents</a>,\n    inheritance_depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u16.html\">u16</a>,\n)</h4></section></summary><div class='docblock'>Registers required components.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_component_hooks\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.register_component_hooks\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Component.html#method.register_component_hooks\" class=\"fn\">register_component_hooks</a>(hooks: &amp;mut <a class=\"struct\" href=\"bevy/ecs/component/struct.ComponentHooks.html\" title=\"struct bevy::ecs::component::ComponentHooks\">ComponentHooks</a>)</h4></section></summary><div class='docblock'>Called when registering this component, allowing mutable access to its <a href=\"bevy/ecs/component/struct.ComponentHooks.html\" title=\"struct bevy::ecs::component::ComponentHooks\"><code>ComponentHooks</code></a>.</div></details></div></details>","Component","bevy::core_pipeline::experimental::taa::TemporalAntiAliasSettings"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-TemporalAntiAliasing\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#165\">Source</a><a href=\"#impl-Default-for-TemporalAntiAliasing\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#166\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","bevy::core_pipeline::experimental::taa::TemporalAntiAliasSettings"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromReflect-for-TemporalAntiAliasing\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#impl-FromReflect-for-TemporalAntiAliasing\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy/prelude/trait.FromReflect.html\" title=\"trait bevy::prelude::FromReflect\">FromReflect</a> for <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a><div class=\"where\">where\n    <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>: <a class=\"trait\" href=\"bevy/prelude/trait.FromReflect.html\" title=\"trait bevy::prelude::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/prelude/trait.TypePath.html\" title=\"trait bevy::prelude::TypePath\">TypePath</a> + MaybeTyped + RegisterForReflection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.FromReflect.html#tymethod.from_reflect\" class=\"fn\">from_reflect</a>(\n    reflect: &amp;(dyn <a class=\"trait\" href=\"bevy/prelude/trait.PartialReflect.html\" title=\"trait bevy::prelude::PartialReflect\">PartialReflect</a> + 'static),\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a>&gt;</h4></section></summary><div class='docblock'>Constructs a concrete instance of <code>Self</code> from a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/from_reflect.rs.html#42-44\">Source</a><a href=\"#method.take_from_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.FromReflect.html#method.take_from_reflect\" class=\"fn\">take_from_reflect</a>(\n    reflect: <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.PartialReflect.html\" title=\"trait bevy::prelude::PartialReflect\">PartialReflect</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.PartialReflect.html\" title=\"trait bevy::prelude::PartialReflect\">PartialReflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to downcast the given value to <code>Self</code> using,\nconstructing the value using <a href=\"bevy/prelude/trait.FromReflect.html#tymethod.from_reflect\" title=\"associated function bevy_reflect::from_reflect::FromReflect::from_reflect::from_reflect\"><code>from_reflect</code></a> if that fails. <a href=\"bevy/prelude/trait.FromReflect.html#method.take_from_reflect\">Read more</a></div></details></div></details>","FromReflect","bevy::core_pipeline::experimental::taa::TemporalAntiAliasSettings"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetTypeRegistration-for-TemporalAntiAliasing\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#impl-GetTypeRegistration-for-TemporalAntiAliasing\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy/reflect/trait.GetTypeRegistration.html\" title=\"trait bevy::reflect::GetTypeRegistration\">GetTypeRegistration</a> for <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a><div class=\"where\">where\n    <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>: <a class=\"trait\" href=\"bevy/prelude/trait.FromReflect.html\" title=\"trait bevy::prelude::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/prelude/trait.TypePath.html\" title=\"trait bevy::prelude::TypePath\">TypePath</a> + MaybeTyped + RegisterForReflection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_type_registration\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.get_type_registration\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.GetTypeRegistration.html#tymethod.get_type_registration\" class=\"fn\">get_type_registration</a>() -&gt; <a class=\"struct\" href=\"bevy/reflect/struct.TypeRegistration.html\" title=\"struct bevy::reflect::TypeRegistration\">TypeRegistration</a></h4></section></summary><div class='docblock'>Returns the default <a href=\"bevy/reflect/struct.TypeRegistration.html\" title=\"struct bevy::reflect::TypeRegistration\"><code>TypeRegistration</code></a> for this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_type_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.register_type_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.GetTypeRegistration.html#method.register_type_dependencies\" class=\"fn\">register_type_dependencies</a>(registry: &amp;mut <a class=\"struct\" href=\"bevy/reflect/struct.TypeRegistry.html\" title=\"struct bevy::reflect::TypeRegistry\">TypeRegistry</a>)</h4></section></summary><div class='docblock'>Registers other types needed by this type. <a href=\"bevy/reflect/trait.GetTypeRegistration.html#method.register_type_dependencies\">Read more</a></div></details></div></details>","GetTypeRegistration","bevy::core_pipeline::experimental::taa::TemporalAntiAliasSettings"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialReflect-for-TemporalAntiAliasing\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#impl-PartialReflect-for-TemporalAntiAliasing\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy/prelude/trait.PartialReflect.html\" title=\"trait bevy::prelude::PartialReflect\">PartialReflect</a> for <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a><div class=\"where\">where\n    <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>: <a class=\"trait\" href=\"bevy/prelude/trait.FromReflect.html\" title=\"trait bevy::prelude::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/prelude/trait.TypePath.html\" title=\"trait bevy::prelude::TypePath\">TypePath</a> + MaybeTyped + RegisterForReflection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_represented_type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.get_represented_type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.get_represented_type_info\" class=\"fn\">get_represented_type_info</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"enum\" href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\">TypeInfo</a>&gt;</h4></section></summary><div class='docblock'>Returns the <a href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\"><code>TypeInfo</code></a> of the type <em>represented</em> by this value. <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.get_represented_type_info\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.clone_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.clone_value\" class=\"fn\">clone_value</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.PartialReflect.html\" title=\"trait bevy::prelude::PartialReflect\">PartialReflect</a>&gt;</h4></section></summary><div class='docblock'>Clones the value as a <code>Reflect</code> trait object. <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.clone_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.try_apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.try_apply\" class=\"fn\">try_apply</a>(\n    &amp;mut self,\n    value: &amp;(dyn <a class=\"trait\" href=\"bevy/prelude/trait.PartialReflect.html\" title=\"trait bevy::prelude::PartialReflect\">PartialReflect</a> + 'static),\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"bevy/reflect/enum.ApplyError.html\" title=\"enum bevy::reflect::ApplyError\">ApplyError</a>&gt;</h4></section></summary><div class='docblock'>Tries to <a href=\"bevy/prelude/trait.PartialReflect.html#method.apply\" title=\"method bevy::prelude::PartialReflect::apply\"><code>apply</code></a> a reflected value to this value. <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.try_apply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.reflect_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#method.reflect_kind\" class=\"fn\">reflect_kind</a>(&amp;self) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectKind.html\" title=\"enum bevy::reflect::ReflectKind\">ReflectKind</a></h4></section></summary><div class='docblock'>Returns a zero-sized enumeration of “kinds” of type. <a href=\"bevy/prelude/trait.PartialReflect.html#method.reflect_kind\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.reflect_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.reflect_ref\" class=\"fn\">reflect_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectRef.html\" title=\"enum bevy::reflect::ReflectRef\">ReflectRef</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns an immutable enumeration of “kinds” of type. <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.reflect_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.reflect_mut\" class=\"fn\">reflect_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectMut.html\" title=\"enum bevy::reflect::ReflectMut\">ReflectMut</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns a mutable enumeration of “kinds” of type. <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.reflect_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.reflect_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.reflect_owned\" class=\"fn\">reflect_owned</a>(self: <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;<a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a>&gt;) -&gt; <a class=\"enum\" href=\"bevy/reflect/enum.ReflectOwned.html\" title=\"enum bevy::reflect::ReflectOwned\">ReflectOwned</a></h4></section></summary><div class='docblock'>Returns an owned enumeration of “kinds” of type. <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.reflect_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_into_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.try_into_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.try_into_reflect\" class=\"fn\">try_into_reflect</a>(\n    self: <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;<a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.Reflect.html\" title=\"trait bevy::prelude::Reflect\">Reflect</a>&gt;, <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.PartialReflect.html\" title=\"trait bevy::prelude::PartialReflect\">PartialReflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to cast this type to a boxed, <a href=\"bevy/prelude/trait.Reflect.html\" title=\"trait bevy::prelude::Reflect\">fully-reflected</a> value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_as_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.try_as_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.try_as_reflect\" class=\"fn\">try_as_reflect</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"bevy/prelude/trait.Reflect.html\" title=\"trait bevy::prelude::Reflect\">Reflect</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Attempts to cast this type to a <a href=\"bevy/prelude/trait.Reflect.html\" title=\"trait bevy::prelude::Reflect\">fully-reflected</a> value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_as_reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.try_as_reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.try_as_reflect_mut\" class=\"fn\">try_as_reflect_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut (dyn <a class=\"trait\" href=\"bevy/prelude/trait.Reflect.html\" title=\"trait bevy::prelude::Reflect\">Reflect</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Attempts to cast this type to a mutable, <a href=\"bevy/prelude/trait.Reflect.html\" title=\"trait bevy::prelude::Reflect\">fully-reflected</a> value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_partial_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.into_partial_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.into_partial_reflect\" class=\"fn\">into_partial_reflect</a>(\n    self: <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;<a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.PartialReflect.html\" title=\"trait bevy::prelude::PartialReflect\">PartialReflect</a>&gt;</h4></section></summary><div class='docblock'>Casts this type to a boxed, reflected value. <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.into_partial_reflect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_partial_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.as_partial_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.as_partial_reflect\" class=\"fn\">as_partial_reflect</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"bevy/prelude/trait.PartialReflect.html\" title=\"trait bevy::prelude::PartialReflect\">PartialReflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a reflected value. <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.as_partial_reflect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_partial_reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.as_partial_reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.as_partial_reflect_mut\" class=\"fn\">as_partial_reflect_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"bevy/prelude/trait.PartialReflect.html\" title=\"trait bevy::prelude::PartialReflect\">PartialReflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a mutable, reflected value. <a href=\"bevy/prelude/trait.PartialReflect.html#tymethod.as_partial_reflect_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_partial_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.reflect_partial_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#method.reflect_partial_eq\" class=\"fn\">reflect_partial_eq</a>(\n    &amp;self,\n    value: &amp;(dyn <a class=\"trait\" href=\"bevy/prelude/trait.PartialReflect.html\" title=\"trait bevy::prelude::PartialReflect\">PartialReflect</a> + 'static),\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Returns a “partial equality” comparison result. <a href=\"bevy/prelude/trait.PartialReflect.html#method.reflect_partial_eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#181\">Source</a><a href=\"#method.apply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#method.apply\" class=\"fn\">apply</a>(&amp;mut self, value: &amp;(dyn <a class=\"trait\" href=\"bevy/prelude/trait.PartialReflect.html\" title=\"trait bevy::prelude::PartialReflect\">PartialReflect</a> + 'static))</h4></section></summary><div class='docblock'>Applies a reflected value to this value. <a href=\"bevy/prelude/trait.PartialReflect.html#method.apply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#236\">Source</a><a href=\"#method.reflect_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#method.reflect_hash\" class=\"fn\">reflect_hash</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Returns a hash of the value (which includes the type). <a href=\"bevy/prelude/trait.PartialReflect.html#method.reflect_hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#256\">Source</a><a href=\"#method.debug\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#method.debug\" class=\"fn\">debug</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Debug formatter for the value. <a href=\"bevy/prelude/trait.PartialReflect.html#method.debug\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serializable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#275\">Source</a><a href=\"#method.serializable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#method.serializable\" class=\"fn\">serializable</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"bevy/reflect/serde/enum.Serializable.html\" title=\"enum bevy::reflect::serde::Serializable\">Serializable</a>&lt;'_&gt;&gt;</h4></section></summary><div class='docblock'>Returns a serializable version of the value. <a href=\"bevy/prelude/trait.PartialReflect.html#method.serializable\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_dynamic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#291\">Source</a><a href=\"#method.is_dynamic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.PartialReflect.html#method.is_dynamic\" class=\"fn\">is_dynamic</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Indicates whether or not this type is a <em>dynamic</em> type. <a href=\"bevy/prelude/trait.PartialReflect.html#method.is_dynamic\">Read more</a></div></details></div></details>","PartialReflect","bevy::core_pipeline::experimental::taa::TemporalAntiAliasSettings"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reflect-for-TemporalAntiAliasing\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#impl-Reflect-for-TemporalAntiAliasing\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy/prelude/trait.Reflect.html\" title=\"trait bevy::prelude::Reflect\">Reflect</a> for <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a><div class=\"where\">where\n    <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>: <a class=\"trait\" href=\"bevy/prelude/trait.FromReflect.html\" title=\"trait bevy::prelude::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/prelude/trait.TypePath.html\" title=\"trait bevy::prelude::TypePath\">TypePath</a> + MaybeTyped + RegisterForReflection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.into_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Reflect.html#tymethod.into_any\" class=\"fn\">into_any</a>(self: <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;<a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a>&gt;) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a>&gt;</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.85.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>Box&lt;dyn Any&gt;</code></a>. <a href=\"bevy/prelude/trait.Reflect.html#tymethod.into_any\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.as_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Reflect.html#tymethod.as_any\" class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.85.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;dyn Any</code></a>. <a href=\"bevy/prelude/trait.Reflect.html#tymethod.as_any\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.as_any_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Reflect.html#tymethod.as_any_mut\" class=\"fn\">as_any_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.85.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;mut dyn Any</code></a>. <a href=\"bevy/prelude/trait.Reflect.html#tymethod.as_any_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.into_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Reflect.html#tymethod.into_reflect\" class=\"fn\">into_reflect</a>(self: <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;<a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a>&gt;) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.Reflect.html\" title=\"trait bevy::prelude::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Casts this type to a boxed, fully-reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.as_reflect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Reflect.html#tymethod.as_reflect\" class=\"fn\">as_reflect</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"bevy/prelude/trait.Reflect.html\" title=\"trait bevy::prelude::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a fully-reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.as_reflect_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Reflect.html#tymethod.as_reflect_mut\" class=\"fn\">as_reflect_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"bevy/prelude/trait.Reflect.html\" title=\"trait bevy::prelude::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a mutable, fully-reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Reflect.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.Reflect.html\" title=\"trait bevy::prelude::Reflect\">Reflect</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.Reflect.html\" title=\"trait bevy::prelude::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs a type-checked assignment of a reflected value to this value. <a href=\"bevy/prelude/trait.Reflect.html#tymethod.set\">Read more</a></div></details></div></details>","Reflect","bevy::core_pipeline::experimental::taa::TemporalAntiAliasSettings"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Struct-for-TemporalAntiAliasing\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#impl-Struct-for-TemporalAntiAliasing\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy/prelude/trait.Struct.html\" title=\"trait bevy::prelude::Struct\">Struct</a> for <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a><div class=\"where\">where\n    <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>: <a class=\"trait\" href=\"bevy/prelude/trait.FromReflect.html\" title=\"trait bevy::prelude::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/prelude/trait.TypePath.html\" title=\"trait bevy::prelude::TypePath\">TypePath</a> + MaybeTyped + RegisterForReflection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.field\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.field\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Struct.html#tymethod.field\" class=\"fn\">field</a>(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"bevy/prelude/trait.PartialReflect.html\" title=\"trait bevy::prelude::PartialReflect\">PartialReflect</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns a reference to the value of the field named <code>name</code> as a <code>&amp;dyn PartialReflect</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.field_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Struct.html#tymethod.field_mut\" class=\"fn\">field_mut</a>(\n    &amp;mut self,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut (dyn <a class=\"trait\" href=\"bevy/prelude/trait.PartialReflect.html\" title=\"trait bevy::prelude::PartialReflect\">PartialReflect</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns a mutable reference to the value of the field named <code>name</code> as a\n<code>&amp;mut dyn PartialReflect</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_at\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.field_at\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Struct.html#tymethod.field_at\" class=\"fn\">field_at</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"bevy/prelude/trait.PartialReflect.html\" title=\"trait bevy::prelude::PartialReflect\">PartialReflect</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns a reference to the value of the field with index <code>index</code> as a\n<code>&amp;dyn PartialReflect</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_at_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.field_at_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Struct.html#tymethod.field_at_mut\" class=\"fn\">field_at_mut</a>(\n    &amp;mut self,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut (dyn <a class=\"trait\" href=\"bevy/prelude/trait.PartialReflect.html\" title=\"trait bevy::prelude::PartialReflect\">PartialReflect</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns a mutable reference to the value of the field with index <code>index</code>\nas a <code>&amp;mut dyn PartialReflect</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_at\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.name_at\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Struct.html#tymethod.name_at\" class=\"fn\">name_at</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the field with index <code>index</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.field_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Struct.html#tymethod.field_len\" class=\"fn\">field_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of fields in the struct.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_fields\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.iter_fields\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Struct.html#tymethod.iter_fields\" class=\"fn\">iter_fields</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy/reflect/struct.FieldIter.html\" title=\"struct bevy::reflect::FieldIter\">FieldIter</a>&lt;'_&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"FieldIter&lt;&#39;_&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Returns an iterator over the values of the reflectable fields for this struct.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_dynamic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.clone_dynamic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Struct.html#tymethod.clone_dynamic\" class=\"fn\">clone_dynamic</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy/reflect/struct.DynamicStruct.html\" title=\"struct bevy::reflect::DynamicStruct\">DynamicStruct</a></h4></section></summary><div class='docblock'>Clones the struct into a <a href=\"bevy/reflect/struct.DynamicStruct.html\" title=\"struct bevy::reflect::DynamicStruct\"><code>DynamicStruct</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_represented_struct_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/struct_trait.rs.html#78\">Source</a><a href=\"#method.get_represented_struct_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.Struct.html#method.get_represented_struct_info\" class=\"fn\">get_represented_struct_info</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"struct\" href=\"bevy/reflect/struct.StructInfo.html\" title=\"struct bevy::reflect::StructInfo\">StructInfo</a>&gt;</h4></section></summary><div class='docblock'>Will return <code>None</code> if <a href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\"><code>TypeInfo</code></a> is not available.</div></details></div></details>","Struct","bevy::core_pipeline::experimental::taa::TemporalAntiAliasSettings"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypePath-for-TemporalAntiAliasing\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#impl-TypePath-for-TemporalAntiAliasing\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy/prelude/trait.TypePath.html\" title=\"trait bevy::prelude::TypePath\">TypePath</a> for <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a><div class=\"where\">where\n    <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.type_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.TypePath.html#tymethod.type_path\" class=\"fn\">type_path</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns the fully qualified path of the underlying type. <a href=\"bevy/prelude/trait.TypePath.html#tymethod.type_path\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.short_type_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.short_type_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.TypePath.html#tymethod.short_type_path\" class=\"fn\">short_type_path</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns a short, pretty-print enabled path to the type. <a href=\"bevy/prelude/trait.TypePath.html#tymethod.short_type_path\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_ident\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.type_ident\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.TypePath.html#method.type_ident\" class=\"fn\">type_ident</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the type, or <a href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy/prelude/trait.TypePath.html#anonymity\" title=\"trait bevy::prelude::TypePath\">anonymous</a>. <a href=\"bevy/prelude/trait.TypePath.html#method.type_ident\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.crate_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.TypePath.html#method.crate_name\" class=\"fn\">crate_name</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the crate the type is in, or <a href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy/prelude/trait.TypePath.html#anonymity\" title=\"trait bevy::prelude::TypePath\">anonymous</a>. <a href=\"bevy/prelude/trait.TypePath.html#method.crate_name\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.module_path\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.TypePath.html#method.module_path\" class=\"fn\">module_path</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the path to the module the type is in, or <a href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy/prelude/trait.TypePath.html#anonymity\" title=\"trait bevy::prelude::TypePath\">anonymous</a>. <a href=\"bevy/prelude/trait.TypePath.html#method.module_path\">Read more</a></div></details></div></details>","TypePath","bevy::core_pipeline::experimental::taa::TemporalAntiAliasSettings"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Typed-for-TemporalAntiAliasing\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#impl-Typed-for-TemporalAntiAliasing\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy/reflect/trait.Typed.html\" title=\"trait bevy::reflect::Typed\">Typed</a> for <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a><div class=\"where\">where\n    <a class=\"struct\" href=\"bevy/core_pipeline/experimental/taa/struct.TemporalAntiAliasing.html\" title=\"struct bevy::core_pipeline::experimental::taa::TemporalAntiAliasing\">TemporalAntiAliasing</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>: <a class=\"trait\" href=\"bevy/prelude/trait.FromReflect.html\" title=\"trait bevy::prelude::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy/prelude/trait.TypePath.html\" title=\"trait bevy::prelude::TypePath\">TypePath</a> + MaybeTyped + RegisterForReflection,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_core_pipeline/taa/mod.rs.html#147\">Source</a><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/trait.Typed.html#tymethod.type_info\" class=\"fn\">type_info</a>() -&gt; &amp;'static <a class=\"enum\" href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\">TypeInfo</a></h4></section></summary><div class='docblock'>Returns the compile-time <a href=\"bevy/reflect/enum.TypeInfo.html\" title=\"enum bevy::reflect::TypeInfo\">info</a> for the underlying type.</div></details></div></details>","Typed","bevy::core_pipeline::experimental::taa::TemporalAntiAliasSettings"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[63445]}