(function() {
    var type_impls = Object.fromEntries([["bevy",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ApplicationHandler%3CT%3E-for-Box%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/winit/application.rs.html#284\">Source</a><a href=\"#impl-ApplicationHandler%3CT%3E-for-Box%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, T&gt; <a class=\"trait\" href=\"winit/application/trait.ApplicationHandler.html\" title=\"trait winit::application::ApplicationHandler\">ApplicationHandler</a>&lt;T&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"winit/application/trait.ApplicationHandler.html\" title=\"trait winit::application::ApplicationHandler\">ApplicationHandler</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    T: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_events\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winit/application.rs.html#286\">Source</a><a href=\"#method.new_events\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winit/application/trait.ApplicationHandler.html#method.new_events\" class=\"fn\">new_events</a>(&amp;mut self, event_loop: &amp;<a class=\"struct\" href=\"winit/event_loop/struct.ActiveEventLoop.html\" title=\"struct winit::event_loop::ActiveEventLoop\">ActiveEventLoop</a>, cause: <a class=\"enum\" href=\"winit/event/enum.StartCause.html\" title=\"enum winit::event::StartCause\">StartCause</a>)</h4></section></summary><div class='docblock'>Emitted when new events arrive from the OS to be processed. <a href=\"winit/application/trait.ApplicationHandler.html#method.new_events\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resumed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winit/application.rs.html#291\">Source</a><a href=\"#method.resumed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winit/application/trait.ApplicationHandler.html#tymethod.resumed\" class=\"fn\">resumed</a>(&amp;mut self, event_loop: &amp;<a class=\"struct\" href=\"winit/event_loop/struct.ActiveEventLoop.html\" title=\"struct winit::event_loop::ActiveEventLoop\">ActiveEventLoop</a>)</h4></section></summary><div class='docblock'>Emitted when the application has been resumed. <a href=\"winit/application/trait.ApplicationHandler.html#tymethod.resumed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.user_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winit/application.rs.html#296\">Source</a><a href=\"#method.user_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winit/application/trait.ApplicationHandler.html#method.user_event\" class=\"fn\">user_event</a>(&amp;mut self, event_loop: &amp;<a class=\"struct\" href=\"winit/event_loop/struct.ActiveEventLoop.html\" title=\"struct winit::event_loop::ActiveEventLoop\">ActiveEventLoop</a>, event: T)</h4></section></summary><div class='docblock'>Emitted when an event is sent from <a href=\"bevy/winit/struct.EventLoopProxy.html#method.send_event\" title=\"method bevy::winit::EventLoopProxy::send_event\"><code>EventLoopProxy::send_event</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.window_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winit/application.rs.html#301-306\">Source</a><a href=\"#method.window_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winit/application/trait.ApplicationHandler.html#tymethod.window_event\" class=\"fn\">window_event</a>(\n    &amp;mut self,\n    event_loop: &amp;<a class=\"struct\" href=\"winit/event_loop/struct.ActiveEventLoop.html\" title=\"struct winit::event_loop::ActiveEventLoop\">ActiveEventLoop</a>,\n    window_id: <a class=\"struct\" href=\"winit/window/struct.WindowId.html\" title=\"struct winit::window::WindowId\">WindowId</a>,\n    event: <a class=\"enum\" href=\"winit/event/enum.WindowEvent.html\" title=\"enum winit::event::WindowEvent\">WindowEvent</a>,\n)</h4></section></summary><div class='docblock'>Emitted when the OS sends an event to a winit window.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.device_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winit/application.rs.html#311-316\">Source</a><a href=\"#method.device_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winit/application/trait.ApplicationHandler.html#method.device_event\" class=\"fn\">device_event</a>(\n    &amp;mut self,\n    event_loop: &amp;<a class=\"struct\" href=\"winit/event_loop/struct.ActiveEventLoop.html\" title=\"struct winit::event_loop::ActiveEventLoop\">ActiveEventLoop</a>,\n    device_id: <a class=\"struct\" href=\"winit/event/struct.DeviceId.html\" title=\"struct winit::event::DeviceId\">DeviceId</a>,\n    event: <a class=\"enum\" href=\"winit/event/enum.DeviceEvent.html\" title=\"enum winit::event::DeviceEvent\">DeviceEvent</a>,\n)</h4></section></summary><div class='docblock'>Emitted when the OS sends an event to a device.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.about_to_wait\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winit/application.rs.html#321\">Source</a><a href=\"#method.about_to_wait\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winit/application/trait.ApplicationHandler.html#method.about_to_wait\" class=\"fn\">about_to_wait</a>(&amp;mut self, event_loop: &amp;<a class=\"struct\" href=\"winit/event_loop/struct.ActiveEventLoop.html\" title=\"struct winit::event_loop::ActiveEventLoop\">ActiveEventLoop</a>)</h4></section></summary><div class='docblock'>Emitted when the event loop is about to block and wait for new events. <a href=\"winit/application/trait.ApplicationHandler.html#method.about_to_wait\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.suspended\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winit/application.rs.html#326\">Source</a><a href=\"#method.suspended\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winit/application/trait.ApplicationHandler.html#method.suspended\" class=\"fn\">suspended</a>(&amp;mut self, event_loop: &amp;<a class=\"struct\" href=\"winit/event_loop/struct.ActiveEventLoop.html\" title=\"struct winit::event_loop::ActiveEventLoop\">ActiveEventLoop</a>)</h4></section></summary><div class='docblock'>Emitted when the application has been suspended. <a href=\"winit/application/trait.ApplicationHandler.html#method.suspended\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exiting\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winit/application.rs.html#331\">Source</a><a href=\"#method.exiting\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winit/application/trait.ApplicationHandler.html#method.exiting\" class=\"fn\">exiting</a>(&amp;mut self, event_loop: &amp;<a class=\"struct\" href=\"winit/event_loop/struct.ActiveEventLoop.html\" title=\"struct winit::event_loop::ActiveEventLoop\">ActiveEventLoop</a>)</h4></section></summary><div class='docblock'>Emitted when the event loop is being shut down. <a href=\"winit/application/trait.ApplicationHandler.html#method.exiting\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.memory_warning\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winit/application.rs.html#336\">Source</a><a href=\"#method.memory_warning\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winit/application/trait.ApplicationHandler.html#method.memory_warning\" class=\"fn\">memory_warning</a>(&amp;mut self, event_loop: &amp;<a class=\"struct\" href=\"winit/event_loop/struct.ActiveEventLoop.html\" title=\"struct winit::event_loop::ActiveEventLoop\">ActiveEventLoop</a>)</h4></section></summary><div class='docblock'>Emitted when the application has received a memory warning. <a href=\"winit/application/trait.ApplicationHandler.html#method.memory_warning\">Read more</a></div></details></div></details>","ApplicationHandler<T>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsFd-for-Box%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0\">1.64.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/std/os/fd/owned.rs.html#440\">Source</a></span><a href=\"#impl-AsFd-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/std/os/fd/owned/trait.AsFd.html\" title=\"trait std::os::fd::owned::AsFd\">AsFd</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/std/os/fd/owned/trait.AsFd.html\" title=\"trait std::os::fd::owned::AsFd\">AsFd</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/os/fd/owned.rs.html#442\">Source</a><a href=\"#method.as_fd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/os/fd/owned/trait.AsFd.html#tymethod.as_fd\" class=\"fn\">as_fd</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/os/fd/owned/struct.BorrowedFd.html\" title=\"struct std::os::fd::owned::BorrowedFd\">BorrowedFd</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Borrows the file descriptor. <a href=\"https://doc.rust-lang.org/1.85.0/std/os/fd/owned/trait.AsFd.html#tymethod.as_fd\">Read more</a></div></details></div></details>","AsFd","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3CT%3E-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2077\">Source</a></span><a href=\"#impl-AsMut%3CT%3E-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;T&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2078\">Source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<T>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRawFd-for-Box%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/std/os/fd/raw.rs.html#278\">Source</a></span><a href=\"#impl-AsRawFd-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/std/os/fd/raw/trait.AsRawFd.html\" title=\"trait std::os::fd::raw::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/std/os/fd/raw/trait.AsRawFd.html\" title=\"trait std::os::fd::raw::AsRawFd\">AsRawFd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_raw_fd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/os/fd/raw.rs.html#280\">Source</a><a href=\"#method.as_raw_fd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/os/fd/raw/trait.AsRawFd.html#tymethod.as_raw_fd\" class=\"fn\">as_raw_fd</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Extracts the raw file descriptor. <a href=\"https://doc.rust-lang.org/1.85.0/std/os/fd/raw/trait.AsRawFd.html#tymethod.as_raw_fd\">Read more</a></div></details></div></details>","AsRawFd","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRawXcbConnection-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/as_raw_xcb_connection/lib.rs.html#57\">Source</a><a href=\"#impl-AsRawXcbConnection-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"as_raw_xcb_connection/trait.AsRawXcbConnection.html\" title=\"trait as_raw_xcb_connection::AsRawXcbConnection\">AsRawXcbConnection</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"as_raw_xcb_connection/trait.AsRawXcbConnection.html\" title=\"trait as_raw_xcb_connection::AsRawXcbConnection\">AsRawXcbConnection</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_raw_xcb_connection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/as_raw_xcb_connection/lib.rs.html#58\">Source</a><a href=\"#method.as_raw_xcb_connection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"as_raw_xcb_connection/trait.AsRawXcbConnection.html#tymethod.as_raw_xcb_connection\" class=\"fn\">as_raw_xcb_connection</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"as_raw_xcb_connection/enum.xcb_connection_t.html\" title=\"enum as_raw_xcb_connection::xcb_connection_t\">xcb_connection_t</a></h4></section></summary><div class='docblock'>Get a raw xcb connection pointer from this object.</div></details></div></details>","AsRawXcbConnection","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CT%3E-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2070\">Source</a></span><a href=\"#impl-AsRef%3CT%3E-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2071\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<T>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncBufRead-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#521\">Source</a><a href=\"#impl-AsyncBufRead-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy/tasks/futures_lite/trait.AsyncBufRead.html\" title=\"trait bevy::tasks::futures_lite::AsyncBufRead\">AsyncBufRead</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/tasks/futures_lite/trait.AsyncBufRead.html\" title=\"trait bevy::tasks::futures_lite::AsyncBufRead\">AsyncBufRead</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_fill_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#522\">Source</a><a href=\"#method.poll_fill_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/tasks/futures_lite/trait.AsyncBufRead.html#tymethod.poll_fill_buf\" class=\"fn\">poll_fill_buf</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>], <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to return the contents of the internal buffer, filling it with more data\nfrom the inner reader if it is empty. <a href=\"bevy/tasks/futures_lite/trait.AsyncBufRead.html#tymethod.poll_fill_buf\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.consume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#522\">Source</a><a href=\"#method.consume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/tasks/futures_lite/trait.AsyncBufRead.html#tymethod.consume\" class=\"fn\">consume</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;&gt;, amt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Tells this buffer that <code>amt</code> bytes have been consumed from the buffer,\nso they should no longer be returned in calls to <a href=\"bevy/tasks/futures_lite/trait.AsyncRead.html#tymethod.poll_read\" title=\"method bevy::tasks::futures_lite::AsyncRead::poll_read\"><code>poll_read</code></a>. <a href=\"bevy/tasks/futures_lite/trait.AsyncBufRead.html#tymethod.consume\">Read more</a></div></details></div></details>","AsyncBufRead","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncFn%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.85.0\">1.85.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2037\">Source</a></span><a href=\"#impl-AsyncFn%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFn.html\" title=\"trait core::ops::async_function::AsyncFn\">AsyncFn</a>&lt;Args&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFn.html\" title=\"trait core::ops::async_function::AsyncFn\">AsyncFn</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.async_call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2038\">Source</a><a href=\"#method.async_call\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFn.html#tymethod.async_call\" class=\"fn\">async_call</a>(\n    &amp;self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\">AsyncFnMut</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnMut.html#associatedtype.CallRefFuture\" title=\"type core::ops::async_function::AsyncFnMut::CallRefFuture\">CallRefFuture</a>&lt;'_&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Call the <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFn.html\" title=\"trait core::ops::async_function::AsyncFn\"><code>AsyncFn</code></a>, returning a future which may borrow from the called closure.</div></details></div></details>","AsyncFn<Args>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncFnMut%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.85.0\">1.85.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2024\">Source</a></span><a href=\"#impl-AsyncFnMut%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\">AsyncFnMut</a>&lt;Args&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\">AsyncFnMut</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CallRefFuture\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2025\">Source</a><a href=\"#associatedtype.CallRefFuture\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnMut.html#associatedtype.CallRefFuture\" class=\"associatedtype\">CallRefFuture</a>&lt;'a&gt; = &lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\">AsyncFnMut</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnMut.html#associatedtype.CallRefFuture\" title=\"type core::ops::async_function::AsyncFnMut::CallRefFuture\">CallRefFuture</a>&lt;'a&gt;\n<span class=\"where\">where\n    <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;F, A&gt;: 'a</span></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Future returned by <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnMut.html#tymethod.async_call_mut\" title=\"method core::ops::async_function::AsyncFnMut::async_call_mut\"><code>AsyncFnMut::async_call_mut</code></a> and <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFn.html#tymethod.async_call\" title=\"method core::ops::async_function::AsyncFn::async_call\"><code>AsyncFn::async_call</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.async_call_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2030\">Source</a><a href=\"#method.async_call_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnMut.html#tymethod.async_call_mut\" class=\"fn\">async_call_mut</a>(\n    &amp;mut self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\">AsyncFnMut</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnMut.html#associatedtype.CallRefFuture\" title=\"type core::ops::async_function::AsyncFnMut::CallRefFuture\">CallRefFuture</a>&lt;'_&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Call the <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnMut.html\" title=\"trait core::ops::async_function::AsyncFnMut\"><code>AsyncFnMut</code></a>, returning a future which may borrow from the called closure.</div></details></div></details>","AsyncFnMut<Args>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncFnOnce%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.85.0\">1.85.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2013\">Source</a></span><a href=\"#impl-AsyncFnOnce%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\">AsyncFnOnce</a>&lt;Args&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\">AsyncFnOnce</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2014\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnOnce.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\">AsyncFnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnOnce.html#associatedtype.Output\" title=\"type core::ops::async_function::AsyncFnOnce::Output\">Output</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Output type of the called closure’s future.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.CallOnceFuture\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2015\">Source</a><a href=\"#associatedtype.CallOnceFuture\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnOnce.html#associatedtype.CallOnceFuture\" class=\"associatedtype\">CallOnceFuture</a> = &lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\">AsyncFnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnOnce.html#associatedtype.CallOnceFuture\" title=\"type core::ops::async_function::AsyncFnOnce::CallOnceFuture\">CallOnceFuture</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Future returned by <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnOnce.html#tymethod.async_call_once\" title=\"method core::ops::async_function::AsyncFnOnce::async_call_once\"><code>AsyncFnOnce::async_call_once</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.async_call_once\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2017\">Source</a><a href=\"#method.async_call_once\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnOnce.html#tymethod.async_call_once\" class=\"fn\">async_call_once</a>(\n    self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\">AsyncFnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnOnce.html#associatedtype.CallOnceFuture\" title=\"type core::ops::async_function::AsyncFnOnce::CallOnceFuture\">CallOnceFuture</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_fn_traits</code>)</span></div></span><div class='docblock'>Call the <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/async_function/trait.AsyncFnOnce.html\" title=\"trait core::ops::async_function::AsyncFnOnce\"><code>AsyncFnOnce</code></a>, returning a future which may move out of the called closure.</div></details></div></details>","AsyncFnOnce<Args>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncIterator-for-Box%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/iter.rs.html#83\">Source</a><a href=\"#impl-AsyncIterator-for-Box%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/async_iter/async_iter/trait.AsyncIterator.html\" title=\"trait core::async_iter::async_iter::AsyncIterator\">AsyncIterator</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/async_iter/async_iter/trait.AsyncIterator.html\" title=\"trait core::async_iter::async_iter::AsyncIterator\">AsyncIterator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/iter.rs.html#84\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/async_iter/async_iter/trait.AsyncIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = &lt;S as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/async_iter/async_iter/trait.AsyncIterator.html\" title=\"trait core::async_iter::async_iter::AsyncIterator\">AsyncIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/async_iter/async_iter/trait.AsyncIterator.html#associatedtype.Item\" title=\"type core::async_iter::async_iter::AsyncIterator::Item\">Item</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_iterator</code>)</span></div></span><div class='docblock'>The type of items yielded by the async iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_next\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/iter.rs.html#86\">Source</a><a href=\"#method.poll_next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/async_iter/async_iter/trait.AsyncIterator.html#tymethod.poll_next\" class=\"fn\">poll_next</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;S&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;S&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/async_iter/async_iter/trait.AsyncIterator.html\" title=\"trait core::async_iter::async_iter::AsyncIterator\">AsyncIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/async_iter/async_iter/trait.AsyncIterator.html#associatedtype.Item\" title=\"type core::async_iter::async_iter::AsyncIterator::Item\">Item</a>&gt;&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_iterator</code>)</span></div></span><div class='docblock'>Attempts to pull out the next value of this async iterator, registering the\ncurrent task for wakeup if the value is not yet available, and returning\n<code>None</code> if the async iterator is exhausted. <a href=\"https://doc.rust-lang.org/1.85.0/core/async_iter/async_iter/trait.AsyncIterator.html#tymethod.poll_next\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/iter.rs.html#90\">Source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/async_iter/async_iter/trait.AsyncIterator.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>async_iterator</code>)</span></div></span><div class='docblock'>Returns the bounds on the remaining length of the async iterator. <a href=\"https://doc.rust-lang.org/1.85.0/core/async_iter/async_iter/trait.AsyncIterator.html#method.size_hint\">Read more</a></div></details></div></details>","AsyncIterator","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncRead-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#323\">Source</a><a href=\"#impl-AsyncRead-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy/tasks/futures_lite/trait.AsyncRead.html\" title=\"trait bevy::tasks::futures_lite::AsyncRead\">AsyncRead</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/tasks/futures_lite/trait.AsyncRead.html\" title=\"trait bevy::tasks::futures_lite::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#324\">Source</a><a href=\"#method.poll_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/tasks/futures_lite/trait.AsyncRead.html#tymethod.poll_read\" class=\"fn\">poll_read</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to read from the <code>AsyncRead</code> into <code>buf</code>. <a href=\"bevy/tasks/futures_lite/trait.AsyncRead.html#tymethod.poll_read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_read_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#324\">Source</a><a href=\"#method.poll_read_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/tasks/futures_lite/trait.AsyncRead.html#method.poll_read_vectored\" class=\"fn\">poll_read_vectored</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    bufs: &amp;mut [<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/io/struct.IoSliceMut.html\" title=\"struct std::io::IoSliceMut\">IoSliceMut</a>&lt;'_&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nIO operations. <a href=\"bevy/tasks/futures_lite/trait.AsyncRead.html#method.poll_read_vectored\">Read more</a></div></details></div></details>","AsyncRead","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncSeek-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#487\">Source</a><a href=\"#impl-AsyncSeek-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy/tasks/futures_lite/trait.AsyncSeek.html\" title=\"trait bevy::tasks::futures_lite::AsyncSeek\">AsyncSeek</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/tasks/futures_lite/trait.AsyncSeek.html\" title=\"trait bevy::tasks::futures_lite::AsyncSeek\">AsyncSeek</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_seek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#488\">Source</a><a href=\"#method.poll_seek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/tasks/futures_lite/trait.AsyncSeek.html#tymethod.poll_seek\" class=\"fn\">poll_seek</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    pos: <a class=\"enum\" href=\"bevy/tasks/futures_lite/io/enum.SeekFrom.html\" title=\"enum bevy::tasks::futures_lite::io::SeekFrom\">SeekFrom</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to seek to an offset, in bytes, in a stream. <a href=\"bevy/tasks/futures_lite/trait.AsyncSeek.html#tymethod.poll_seek\">Read more</a></div></details></div></details>","AsyncSeek","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncSeekForward-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_asset/io/mod.rs.html#114\">Source</a><a href=\"#impl-AsyncSeekForward-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy/asset/io/trait.AsyncSeekForward.html\" title=\"trait bevy::asset::io::AsyncSeekForward\">AsyncSeekForward</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/asset/io/trait.AsyncSeekForward.html\" title=\"trait bevy::asset::io::AsyncSeekForward\">AsyncSeekForward</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_seek_forward\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_asset/io/mod.rs.html#115-119\">Source</a><a href=\"#method.poll_seek_forward\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/asset/io/trait.AsyncSeekForward.html#tymethod.poll_seek_forward\" class=\"fn\">poll_seek_forward</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to asynchronously seek forward by a specified number of bytes from the current cursor position. <a href=\"bevy/asset/io/trait.AsyncSeekForward.html#tymethod.poll_seek_forward\">Read more</a></div></details></div></details>","AsyncSeekForward","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncWrite-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#405\">Source</a><a href=\"#impl-AsyncWrite-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy/tasks/futures_lite/trait.AsyncWrite.html\" title=\"trait bevy::tasks::futures_lite::AsyncWrite\">AsyncWrite</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/tasks/futures_lite/trait.AsyncWrite.html\" title=\"trait bevy::tasks::futures_lite::AsyncWrite\">AsyncWrite</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#406\">Source</a><a href=\"#method.poll_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/tasks/futures_lite/trait.AsyncWrite.html#tymethod.poll_write\" class=\"fn\">poll_write</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to write bytes from <code>buf</code> into the object. <a href=\"bevy/tasks/futures_lite/trait.AsyncWrite.html#tymethod.poll_write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_write_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#406\">Source</a><a href=\"#method.poll_write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/tasks/futures_lite/trait.AsyncWrite.html#method.poll_write_vectored\" class=\"fn\">poll_write_vectored</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    bufs: &amp;[<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to write bytes from <code>bufs</code> into the object using vectored\nIO operations. <a href=\"bevy/tasks/futures_lite/trait.AsyncWrite.html#method.poll_write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#406\">Source</a><a href=\"#method.poll_flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/tasks/futures_lite/trait.AsyncWrite.html#tymethod.poll_flush\" class=\"fn\">poll_flush</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to flush the object, ensuring that any buffered data reach\ntheir destination. <a href=\"bevy/tasks/futures_lite/trait.AsyncWrite.html#tymethod.poll_flush\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_close\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_io/lib.rs.html#406\">Source</a><a href=\"#method.poll_close\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/tasks/futures_lite/trait.AsyncWrite.html#tymethod.poll_close\" class=\"fn\">poll_close</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to close the object. <a href=\"bevy/tasks/futures_lite/trait.AsyncWrite.html#tymethod.poll_close\">Read more</a></div></details></div></details>","AsyncWrite","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3CT%3E-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.1.0\">1.1.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2056\">Source</a></span><a href=\"#impl-Borrow%3CT%3E-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;T&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2057\">Source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/1.85.0/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<T>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3CT%3E-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.1.0\">1.1.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2063\">Source</a></span><a href=\"#impl-BorrowMut%3CT%3E-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/borrow/trait.BorrowMut.html\" title=\"trait core::borrow::BorrowMut\">BorrowMut</a>&lt;T&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2064\">Source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/1.85.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<T>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1033\">Source</a><a href=\"#impl-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1080\">Source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.from_raw\" class=\"fn\">from_raw</a>(raw: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut T</a>) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a box from a raw pointer.</p>\n<p>After calling this function, the raw pointer is owned by the\nresulting <code>Box</code>. Specifically, the <code>Box</code> destructor will call\nthe destructor of <code>T</code> and free the allocated memory. For this\nto be safe, the memory must have been allocated in accordance\nwith the <a href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code> .</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>This function is unsafe because improper use may lead to\nmemory problems. For example, a double-free may occur if the\nfunction is called twice on the same raw pointer.</p>\n<p>The raw pointer must point to a block of memory allocated by the global allocator.</p>\n<p>The safety conditions are described in the <a href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> section.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>Recreate a <code>Box</code> which was previously converted to a raw pointer\nusing <a href=\"bevy/ecs/label/struct.Box.html#method.into_raw\" title=\"associated function bevy::ecs::label::Box::into_raw\"><code>Box::into_raw</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>ptr = Box::into_raw(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_raw(ptr) };</code></pre></div>\n<p>Manually create a <code>Box</code> from scratch by using the global allocator:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::alloc::{alloc, Layout};\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = alloc(Layout::new::&lt;i32&gt;()) <span class=\"kw\">as </span><span class=\"kw-2\">*mut </span>i32;\n    <span class=\"comment\">// In general .write is required to avoid attempting to destruct\n    // the (uninitialized) previous contents of `ptr`, though for this\n    // simple example `*ptr = 5` would have worked as well.\n    </span>ptr.write(<span class=\"number\">5</span>);\n    <span class=\"kw\">let </span>x = Box::from_raw(ptr);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_non_null\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1133\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.from_non_null\" class=\"fn\">from_non_null</a>(ptr: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_vec_non_null</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a box from a <code>NonNull</code> pointer.</p>\n<p>After calling this function, the <code>NonNull</code> pointer is owned by\nthe resulting <code>Box</code>. Specifically, the <code>Box</code> destructor will call\nthe destructor of <code>T</code> and free the allocated memory. For this\nto be safe, the memory must have been allocated in accordance\nwith the <a href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code> .</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>This function is unsafe because improper use may lead to\nmemory problems. For example, a double-free may occur if the\nfunction is called twice on the same <code>NonNull</code> pointer.</p>\n<p>The safety conditions are described in the <a href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> section.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Recreate a <code>Box</code> which was previously converted to a <code>NonNull</code>\npointer using <a href=\"bevy/ecs/label/struct.Box.html#method.into_non_null\" title=\"associated function bevy::ecs::label::Box::into_non_null\"><code>Box::into_non_null</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_vec_non_null)]\n\n</span><span class=\"kw\">let </span>x = Box::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>non_null = Box::into_non_null(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_non_null(non_null) };</code></pre></div>\n<p>Manually create a <code>Box</code> from scratch by using the global allocator:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_vec_non_null)]\n\n</span><span class=\"kw\">use </span>std::alloc::{alloc, Layout};\n<span class=\"kw\">use </span>std::ptr::NonNull;\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>non_null = NonNull::new(alloc(Layout::new::&lt;i32&gt;()).cast::&lt;i32&gt;())\n        .expect(<span class=\"string\">\"allocation failed\"</span>);\n    <span class=\"comment\">// In general .write is required to avoid attempting to destruct\n    // the (uninitialized) previous contents of `non_null`.\n    </span>non_null.write(<span class=\"number\">5</span>);\n    <span class=\"kw\">let </span>x = Box::from_non_null(non_null);\n}</code></pre></div>\n</div></details></div></details>",0,"bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#236\">Source</a><a href=\"#impl-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#252\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.new\" class=\"fn\">new</a>(x: T) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Allocates memory on the heap and then places <code>x</code> into it.</p>\n<p>This doesn’t actually allocate if <code>T</code> is zero-sized.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>five = Box::new(<span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_uninit\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#277\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.new_uninit\" class=\"fn\">new_uninit</a>() -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.85.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new box with uninitialized contents.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Box::&lt;u32&gt;::new_uninit();\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>five.as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#303\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.85.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>new_zeroed_alloc</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Box</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.85.0/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(new_zeroed_alloc)]\n\n</span><span class=\"kw\">let </span>zero = Box::&lt;u32&gt;::new_zeroed();\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0\">1.33.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#318\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.pin\" class=\"fn\">pin</a>(x: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <a href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\"><code>Unpin</code></a>, then\n<code>x</code> will be pinned in memory and unable to be moved.</p>\n<p>Constructing and pinning of the <code>Box</code> can also be done in two steps: <code>Box::pin(x)</code>\ndoes the same as <code><a href=\"bevy/ecs/label/struct.Box.html#method.into_pin\" title=\"associated function bevy::ecs::label::Box::into_pin\">Box::into_pin</a>(<a href=\"bevy/ecs/label/struct.Box.html#method.new\" title=\"associated function bevy::ecs::label::Box::new\">Box::new</a>(x))</code>. Consider using\n<a href=\"bevy/ecs/label/struct.Box.html#method.into_pin\" title=\"associated function bevy::ecs::label::Box::into_pin\"><code>into_pin</code></a> if you already have a <code>Box&lt;T&gt;</code>, or if you want to\nconstruct a (pinned) <code>Box</code> in a different way than with <a href=\"bevy/ecs/label/struct.Box.html#method.new\" title=\"associated function bevy::ecs::label::Box::new\"><code>Box::new</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#337\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.try_new\" class=\"fn\">try_new</a>(x: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Allocates memory on the heap then places <code>x</code> into it,\nreturning an error if the allocation fails</p>\n<p>This doesn’t actually allocate if <code>T</code> is zero-sized.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">let </span>five = Box::try_new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_uninit\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#364\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.try_new_uninit\" class=\"fn\">try_new_uninit</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.85.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new box with uninitialized contents on the heap,\nreturning an error if the allocation fails</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Box::&lt;u32&gt;::try_new_uninit()<span class=\"question-mark\">?</span>;\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>five.as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_zeroed\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#390\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.try_new_zeroed\" class=\"fn\">try_new_zeroed</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.85.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Box</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes on the heap</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.85.0/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">let </span>zero = Box::&lt;u32&gt;::try_new_zeroed()<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>);</code></pre></div>\n</div></details></div></details>",0,"bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Box%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1138\">Source</a><a href=\"#impl-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1190\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.from_raw_in\" class=\"fn\">from_raw_in</a>(raw: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut T</a>, alloc: A) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a box from a raw pointer in the given allocator.</p>\n<p>After calling this function, the raw pointer is owned by the\nresulting <code>Box</code>. Specifically, the <code>Box</code> destructor will call\nthe destructor of <code>T</code> and free the allocated memory. For this\nto be safe, the memory must have been allocated in accordance\nwith the <a href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code> .</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>This function is unsafe because improper use may lead to\nmemory problems. For example, a double-free may occur if the\nfunction is called twice on the same raw pointer.</p>\n<p>The raw pointer must point to a block of memory allocated by <code>alloc</code></p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>Recreate a <code>Box</code> which was previously converted to a raw pointer\nusing <a href=\"bevy/ecs/label/struct.Box.html#method.into_raw_with_allocator\" title=\"associated function bevy::ecs::label::Box::into_raw_with_allocator\"><code>Box::into_raw_with_allocator</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Box::new_in(<span class=\"number\">5</span>, System);\n<span class=\"kw\">let </span>(ptr, alloc) = Box::into_raw_with_allocator(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_raw_in(ptr, alloc) };</code></pre></div>\n<p>Manually create a <code>Box</code> from scratch by using the system allocator:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api, slice_ptr_get)]\n\n</span><span class=\"kw\">use </span>std::alloc::{Allocator, Layout, System};\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>ptr = System.allocate(Layout::new::&lt;i32&gt;())<span class=\"question-mark\">?</span>.as_mut_ptr() <span class=\"kw\">as </span><span class=\"kw-2\">*mut </span>i32;\n    <span class=\"comment\">// In general .write is required to avoid attempting to destruct\n    // the (uninitialized) previous contents of `ptr`, though for this\n    // simple example `*ptr = 5` would have worked as well.\n    </span>ptr.write(<span class=\"number\">5</span>);\n    <span class=\"kw\">let </span>x = Box::from_raw_in(ptr, System);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_non_null_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1244\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.from_non_null_in\" class=\"fn\">from_non_null_in</a>(raw: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;T&gt;, alloc: A) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a box from a <code>NonNull</code> pointer in the given allocator.</p>\n<p>After calling this function, the <code>NonNull</code> pointer is owned by\nthe resulting <code>Box</code>. Specifically, the <code>Box</code> destructor will call\nthe destructor of <code>T</code> and free the allocated memory. For this\nto be safe, the memory must have been allocated in accordance\nwith the <a href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code> .</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>This function is unsafe because improper use may lead to\nmemory problems. For example, a double-free may occur if the\nfunction is called twice on the same raw pointer.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Recreate a <code>Box</code> which was previously converted to a <code>NonNull</code> pointer\nusing <a href=\"bevy/ecs/label/struct.Box.html#method.into_non_null_with_allocator\" title=\"associated function bevy::ecs::label::Box::into_non_null_with_allocator\"><code>Box::into_non_null_with_allocator</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api, box_vec_non_null)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Box::new_in(<span class=\"number\">5</span>, System);\n<span class=\"kw\">let </span>(non_null, alloc) = Box::into_non_null_with_allocator(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_non_null_in(non_null, alloc) };</code></pre></div>\n<p>Manually create a <code>Box</code> from scratch by using the system allocator:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api, box_vec_non_null, slice_ptr_get)]\n\n</span><span class=\"kw\">use </span>std::alloc::{Allocator, Layout, System};\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>non_null = System.allocate(Layout::new::&lt;i32&gt;())<span class=\"question-mark\">?</span>.cast::&lt;i32&gt;();\n    <span class=\"comment\">// In general .write is required to avoid attempting to destruct\n    // the (uninitialized) previous contents of `non_null`.\n    </span>non_null.write(<span class=\"number\">5</span>);\n    <span class=\"kw\">let </span>x = Box::from_non_null_in(non_null, System);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1299\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.into_raw\" class=\"fn\">into_raw</a>(b: <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut T</a></h4></section></summary><div class=\"docblock\"><p>Consumes the <code>Box</code>, returning a wrapped raw pointer.</p>\n<p>The pointer will be properly aligned and non-null.</p>\n<p>After calling this function, the caller is responsible for the\nmemory previously managed by the <code>Box</code>. In particular, the\ncaller should properly destroy <code>T</code> and release the memory, taking\ninto account the <a href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code>. The easiest way to\ndo this is to convert the raw pointer back into a <code>Box</code> with the\n<a href=\"bevy/ecs/label/struct.Box.html#method.from_raw\" title=\"associated function bevy::ecs::label::Box::from_raw\"><code>Box::from_raw</code></a> function, allowing the <code>Box</code> destructor to perform\nthe cleanup.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::into_raw(b)</code> instead of <code>b.into_raw()</code>. This\nis so that there is no conflict with a method on the inner type.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Converting the raw pointer back into a <code>Box</code> with <a href=\"bevy/ecs/label/struct.Box.html#method.from_raw\" title=\"associated function bevy::ecs::label::Box::from_raw\"><code>Box::from_raw</code></a>\nfor automatic cleanup:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>ptr = Box::into_raw(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_raw(ptr) };</code></pre></div>\n<p>Manual cleanup by explicitly running the destructor and deallocating\nthe memory:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::alloc::{dealloc, Layout};\n<span class=\"kw\">use </span>std::ptr;\n\n<span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>ptr = Box::into_raw(x);\n<span class=\"kw\">unsafe </span>{\n    ptr::drop_in_place(ptr);\n    dealloc(ptr <span class=\"kw\">as </span><span class=\"kw-2\">*mut </span>u8, Layout::new::&lt;String&gt;());\n}</code></pre></div>\n<p>Note: This is equivalent to the following:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>ptr = Box::into_raw(x);\n<span class=\"kw\">unsafe </span>{\n    drop(Box::from_raw(ptr));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_non_null\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1359\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.into_non_null\" class=\"fn\">into_non_null</a>(b: <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;T&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_vec_non_null</code>)</span></div></span></summary><div class=\"docblock\"><p>Consumes the <code>Box</code>, returning a wrapped <code>NonNull</code> pointer.</p>\n<p>The pointer will be properly aligned.</p>\n<p>After calling this function, the caller is responsible for the\nmemory previously managed by the <code>Box</code>. In particular, the\ncaller should properly destroy <code>T</code> and release the memory, taking\ninto account the <a href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code>. The easiest way to\ndo this is to convert the <code>NonNull</code> pointer back into a <code>Box</code> with the\n<a href=\"bevy/ecs/label/struct.Box.html#method.from_non_null\" title=\"associated function bevy::ecs::label::Box::from_non_null\"><code>Box::from_non_null</code></a> function, allowing the <code>Box</code> destructor to\nperform the cleanup.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::into_non_null(b)</code> instead of <code>b.into_non_null()</code>.\nThis is so that there is no conflict with a method on the inner type.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Converting the <code>NonNull</code> pointer back into a <code>Box</code> with <a href=\"bevy/ecs/label/struct.Box.html#method.from_non_null\" title=\"associated function bevy::ecs::label::Box::from_non_null\"><code>Box::from_non_null</code></a>\nfor automatic cleanup:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_vec_non_null)]\n\n</span><span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>non_null = Box::into_non_null(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_non_null(non_null) };</code></pre></div>\n<p>Manual cleanup by explicitly running the destructor and deallocating\nthe memory:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_vec_non_null)]\n\n</span><span class=\"kw\">use </span>std::alloc::{dealloc, Layout};\n\n<span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>non_null = Box::into_non_null(x);\n<span class=\"kw\">unsafe </span>{\n    non_null.drop_in_place();\n    dealloc(non_null.as_ptr().cast::&lt;u8&gt;(), Layout::new::&lt;String&gt;());\n}</code></pre></div>\n<p>Note: This is equivalent to the following:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_vec_non_null)]\n\n</span><span class=\"kw\">let </span>x = Box::new(String::from(<span class=\"string\">\"Hello\"</span>));\n<span class=\"kw\">let </span>non_null = Box::into_non_null(x);\n<span class=\"kw\">unsafe </span>{\n    drop(Box::from_non_null(non_null));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw_with_allocator\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1413\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.into_raw_with_allocator\" class=\"fn\">into_raw_with_allocator</a>(b: <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut T</a>, A)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Consumes the <code>Box</code>, returning a wrapped raw pointer and the allocator.</p>\n<p>The pointer will be properly aligned and non-null.</p>\n<p>After calling this function, the caller is responsible for the\nmemory previously managed by the <code>Box</code>. In particular, the\ncaller should properly destroy <code>T</code> and release the memory, taking\ninto account the <a href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code>. The easiest way to\ndo this is to convert the raw pointer back into a <code>Box</code> with the\n<a href=\"bevy/ecs/label/struct.Box.html#method.from_raw_in\" title=\"associated function bevy::ecs::label::Box::from_raw_in\"><code>Box::from_raw_in</code></a> function, allowing the <code>Box</code> destructor to perform\nthe cleanup.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::into_raw_with_allocator(b)</code> instead of <code>b.into_raw_with_allocator()</code>. This\nis so that there is no conflict with a method on the inner type.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<p>Converting the raw pointer back into a <code>Box</code> with <a href=\"bevy/ecs/label/struct.Box.html#method.from_raw_in\" title=\"associated function bevy::ecs::label::Box::from_raw_in\"><code>Box::from_raw_in</code></a>\nfor automatic cleanup:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Box::new_in(String::from(<span class=\"string\">\"Hello\"</span>), System);\n<span class=\"kw\">let </span>(ptr, alloc) = Box::into_raw_with_allocator(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_raw_in(ptr, alloc) };</code></pre></div>\n<p>Manual cleanup by explicitly running the destructor and deallocating\nthe memory:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::{Allocator, Layout, System};\n<span class=\"kw\">use </span>std::ptr::{<span class=\"self\">self</span>, NonNull};\n\n<span class=\"kw\">let </span>x = Box::new_in(String::from(<span class=\"string\">\"Hello\"</span>), System);\n<span class=\"kw\">let </span>(ptr, alloc) = Box::into_raw_with_allocator(x);\n<span class=\"kw\">unsafe </span>{\n    ptr::drop_in_place(ptr);\n    <span class=\"kw\">let </span>non_null = NonNull::new_unchecked(ptr);\n    alloc.deallocate(non_null.cast(), Layout::new::&lt;String&gt;());\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_non_null_with_allocator\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1474\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.into_non_null_with_allocator\" class=\"fn\">into_non_null_with_allocator</a>(b: <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; (<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;T&gt;, A)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Consumes the <code>Box</code>, returning a wrapped <code>NonNull</code> pointer and the allocator.</p>\n<p>The pointer will be properly aligned.</p>\n<p>After calling this function, the caller is responsible for the\nmemory previously managed by the <code>Box</code>. In particular, the\ncaller should properly destroy <code>T</code> and release the memory, taking\ninto account the <a href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/index.html#memory-layout\" title=\"mod alloc::boxed\">memory layout</a> used by <code>Box</code>. The easiest way to\ndo this is to convert the <code>NonNull</code> pointer back into a <code>Box</code> with the\n<a href=\"bevy/ecs/label/struct.Box.html#method.from_non_null_in\" title=\"associated function bevy::ecs::label::Box::from_non_null_in\"><code>Box::from_non_null_in</code></a> function, allowing the <code>Box</code> destructor to\nperform the cleanup.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::into_non_null_with_allocator(b)</code> instead of\n<code>b.into_non_null_with_allocator()</code>. This is so that there is no\nconflict with a method on the inner type.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<p>Converting the <code>NonNull</code> pointer back into a <code>Box</code> with\n<a href=\"bevy/ecs/label/struct.Box.html#method.from_non_null_in\" title=\"associated function bevy::ecs::label::Box::from_non_null_in\"><code>Box::from_non_null_in</code></a> for automatic cleanup:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api, box_vec_non_null)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>x = Box::new_in(String::from(<span class=\"string\">\"Hello\"</span>), System);\n<span class=\"kw\">let </span>(non_null, alloc) = Box::into_non_null_with_allocator(x);\n<span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ Box::from_non_null_in(non_null, alloc) };</code></pre></div>\n<p>Manual cleanup by explicitly running the destructor and deallocating\nthe memory:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api, box_vec_non_null)]\n\n</span><span class=\"kw\">use </span>std::alloc::{Allocator, Layout, System};\n\n<span class=\"kw\">let </span>x = Box::new_in(String::from(<span class=\"string\">\"Hello\"</span>), System);\n<span class=\"kw\">let </span>(non_null, alloc) = Box::into_non_null_with_allocator(x);\n<span class=\"kw\">unsafe </span>{\n    non_null.drop_in_place();\n    alloc.deallocate(non_null.cast::&lt;u8&gt;(), Layout::new::&lt;String&gt;());\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1528\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.as_mut_ptr\" class=\"fn\">as_mut_ptr</a>(b: &amp;mut <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut T</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_as_ptr</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns a raw mutable pointer to the <code>Box</code>’s contents.</p>\n<p>The caller must ensure that the <code>Box</code> outlives the pointer this\nfunction returns, or else it will end up dangling.</p>\n<p>This method guarantees that for the purpose of the aliasing model, this method\ndoes not materialize a reference to the underlying memory, and thus the returned pointer\nwill remain valid when mixed with other calls to <a href=\"bevy/ecs/label/struct.Box.html#method.as_ptr\" title=\"associated function bevy::ecs::label::Box::as_ptr\"><code>as_ptr</code></a> and <a href=\"bevy/ecs/label/struct.Box.html#method.as_mut_ptr\" title=\"associated function bevy::ecs::label::Box::as_mut_ptr\"><code>as_mut_ptr</code></a>.\nNote that calling other methods that materialize references to the memory\nmay still invalidate this pointer.\nSee the example below for how this guarantee can be used.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<p>Due to the aliasing guarantee, the following code is legal:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_as_ptr)]\n\n</span><span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>b = Box::new(<span class=\"number\">0</span>);\n    <span class=\"kw\">let </span>ptr1 = Box::as_mut_ptr(<span class=\"kw-2\">&amp;mut </span>b);\n    ptr1.write(<span class=\"number\">1</span>);\n    <span class=\"kw\">let </span>ptr2 = Box::as_mut_ptr(<span class=\"kw-2\">&amp;mut </span>b);\n    ptr2.write(<span class=\"number\">2</span>);\n    <span class=\"comment\">// Notably, the write to `ptr2` did *not* invalidate `ptr1`:\n    </span>ptr1.write(<span class=\"number\">3</span>);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1577\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.as_ptr\" class=\"fn\">as_ptr</a>(b: &amp;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const T</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_as_ptr</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns a raw pointer to the <code>Box</code>’s contents.</p>\n<p>The caller must ensure that the <code>Box</code> outlives the pointer this\nfunction returns, or else it will end up dangling.</p>\n<p>The caller must also ensure that the memory the pointer (non-transitively) points to\nis never written to (except inside an <code>UnsafeCell</code>) using this pointer or any pointer\nderived from it. If you need to mutate the contents of the <code>Box</code>, use <a href=\"bevy/ecs/label/struct.Box.html#method.as_mut_ptr\" title=\"associated function bevy::ecs::label::Box::as_mut_ptr\"><code>as_mut_ptr</code></a>.</p>\n<p>This method guarantees that for the purpose of the aliasing model, this method\ndoes not materialize a reference to the underlying memory, and thus the returned pointer\nwill remain valid when mixed with other calls to <a href=\"bevy/ecs/label/struct.Box.html#method.as_ptr\" title=\"associated function bevy::ecs::label::Box::as_ptr\"><code>as_ptr</code></a> and <a href=\"bevy/ecs/label/struct.Box.html#method.as_mut_ptr\" title=\"associated function bevy::ecs::label::Box::as_mut_ptr\"><code>as_mut_ptr</code></a>.\nNote that calling other methods that materialize mutable references to the memory,\nas well as writing to this memory, may still invalidate this pointer.\nSee the example below for how this guarantee can be used.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<p>Due to the aliasing guarantee, the following code is legal:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_as_ptr)]\n\n</span><span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = Box::new(<span class=\"number\">0</span>);\n    <span class=\"kw\">let </span>ptr1 = Box::as_ptr(<span class=\"kw-2\">&amp;</span>v);\n    <span class=\"kw\">let </span>ptr2 = Box::as_mut_ptr(<span class=\"kw-2\">&amp;mut </span>v);\n    <span class=\"kw\">let </span>_val = ptr2.read();\n    <span class=\"comment\">// No write to this memory has happened yet, so `ptr1` is still valid.\n    </span><span class=\"kw\">let </span>_val = ptr1.read();\n    <span class=\"comment\">// However, once we do a write...\n    </span>ptr2.write(<span class=\"number\">1</span>);\n    <span class=\"comment\">// ... `ptr1` is no longer valid.\n    // This would be UB: let _val = ptr1.read();\n</span>}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.allocator\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1591\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.allocator\" class=\"fn\">allocator</a>(b: &amp;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;A</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns a reference to the underlying allocator.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::allocator(&amp;b)</code> instead of <code>b.allocator()</code>. This\nis so that there is no conflict with a method on the inner type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leak\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.26.0\">1.26.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1640-1642\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.leak\" class=\"fn\">leak</a>&lt;'a&gt;(b: <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;'a mut T</a><div class=\"where\">where\n    A: 'a,</div></h4></section></summary><div class=\"docblock\"><p>Consumes and leaks the <code>Box</code>, returning a mutable reference,\n<code>&amp;'a mut T</code>.</p>\n<p>Note that the type <code>T</code> must outlive the chosen lifetime <code>'a</code>. If the type\nhas only static references, or none at all, then this may be chosen to be\n<code>'static</code>.</p>\n<p>This function is mainly useful for data that lives for the remainder of\nthe program’s life. Dropping the returned reference will cause a memory\nleak. If this is not acceptable, the reference should first be wrapped\nwith the <a href=\"bevy/ecs/label/struct.Box.html#method.from_raw\" title=\"associated function bevy::ecs::label::Box::from_raw\"><code>Box::from_raw</code></a> function producing a <code>Box</code>. This <code>Box</code> can\nthen be dropped which will properly destroy <code>T</code> and release the\nallocated memory.</p>\n<p>Note: this is an associated function, which means that you have\nto call it as <code>Box::leak(b)</code> instead of <code>b.leak()</code>. This\nis so that there is no conflict with a method on the inner type.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<p>Simple usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(<span class=\"number\">41</span>);\n<span class=\"kw\">let </span>static_ref: <span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'static </span><span class=\"kw-2\">mut </span>usize = Box::leak(x);\n<span class=\"kw-2\">*</span>static_ref += <span class=\"number\">1</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>static_ref, <span class=\"number\">42</span>);</code></pre></div>\n<p>Unsized data:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].into_boxed_slice();\n<span class=\"kw\">let </span>static_ref = Box::leak(x);\nstatic_ref[<span class=\"number\">0</span>] = <span class=\"number\">4</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>static_ref, [<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_pin\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0, const unstable\">1.63.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/92521\" title=\"Tracking issue for const_box\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1679-1681\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.into_pin\" class=\"fn\">into_pin</a>(boxed: <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;&gt;<div class=\"where\">where\n    A: 'static,</div></h4></section></summary><div class=\"docblock\"><p>Converts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <a href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\"><code>Unpin</code></a>, then\n<code>*boxed</code> will be pinned in memory and unable to be moved.</p>\n<p>This conversion does not allocate on the heap and happens in place.</p>\n<p>This is also available via <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\"><code>From</code></a>.</p>\n<p>Constructing and pinning a <code>Box</code> with <code>Box::into_pin(<a href=\"bevy/ecs/label/struct.Box.html#method.new\" title=\"associated function bevy::ecs::label::Box::new\">Box::new</a>(x))</code>\ncan also be written more concisely using <code><a href=\"bevy/ecs/label/struct.Box.html#method.pin\" title=\"associated function bevy::ecs::label::Box::pin\">Box::pin</a>(x)</code>.\nThis <code>into_pin</code> method is useful if you already have a <code>Box&lt;T&gt;</code>, or you are\nconstructing a (pinned) <code>Box</code> in a different way than with <a href=\"bevy/ecs/label/struct.Box.html#method.new\" title=\"associated function bevy::ecs::label::Box::new\"><code>Box::new</code></a>.</p>\n<h5 id=\"notes\"><a class=\"doc-anchor\" href=\"#notes\">§</a>Notes</h5>\n<p>It’s not recommended that crates add an impl like <code>From&lt;Box&lt;T&gt;&gt; for Pin&lt;T&gt;</code>,\nas it’ll introduce an ambiguity when calling <code>Pin::from</code>.\nA demonstration of such a poor impl is shown below.</p>\n\n<div class=\"example-wrap compile_fail\"><a href=\"#\" class=\"tooltip\" title=\"This example deliberately fails to compile\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">struct </span>Foo; <span class=\"comment\">// A type defined in this crate.\n</span><span class=\"kw\">impl </span>From&lt;Box&lt;()&gt;&gt; <span class=\"kw\">for </span>Pin&lt;Foo&gt; {\n    <span class=\"kw\">fn </span>from(<span class=\"kw\">_</span>: Box&lt;()&gt;) -&gt; Pin&lt;Foo&gt; {\n        Pin::new(Foo)\n    }\n}\n\n<span class=\"kw\">let </span>foo = Box::new(());\n<span class=\"kw\">let </span>bar = Pin::from(foo);</code></pre></div>\n</div></details></div></details>",0,"bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Box%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#395\">Source</a><a href=\"#impl-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#413-415\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.new_in\" class=\"fn\">new_in</a>(x: T, alloc: A) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Allocates memory in the given allocator then places <code>x</code> into it.</p>\n<p>This doesn’t actually allocate if <code>T</code> is zero-sized.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Box::new_in(<span class=\"number\">5</span>, System);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#441-443\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.try_new_in\" class=\"fn\">try_new_in</a>(x: T, alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Allocates memory in the given allocator then places <code>x</code> into it,\nreturning an error if the allocation fails</p>\n<p>This doesn’t actually allocate if <code>T</code> is zero-sized.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>five = Box::try_new_in(<span class=\"number\">5</span>, System)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_uninit_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#476-478\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.new_uninit_in\" class=\"fn\">new_uninit_in</a>(alloc: A) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.85.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new box with uninitialized contents in the provided allocator.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Box::&lt;u32, <span class=\"kw\">_</span>&gt;::new_uninit_in(System);\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>five.as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_uninit_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#513-515\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.try_new_uninit_in\" class=\"fn\">try_new_uninit_in</a>(alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.85.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new box with uninitialized contents in the provided allocator,\nreturning an error if the allocation fails</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>five = Box::&lt;u32, <span class=\"kw\">_</span>&gt;::try_new_uninit_in(System)<span class=\"question-mark\">?</span>;\n\n<span class=\"kw\">let </span>five = <span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// Deferred initialization:\n    </span>five.as_mut_ptr().write(<span class=\"number\">5</span>);\n\n    five.assume_init()\n};\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>five, <span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#550-552\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.new_zeroed_in\" class=\"fn\">new_zeroed_in</a>(alloc: A) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.85.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Box</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes in the provided allocator.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.85.0/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>zero = Box::&lt;u32, <span class=\"kw\">_</span>&gt;::new_zeroed_in(System);\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_zeroed_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#587-589\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.try_new_zeroed_in\" class=\"fn\">try_new_zeroed_in</a>(alloc: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.85.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Box</code> with uninitialized contents, with the memory\nbeing filled with <code>0</code> bytes in the provided allocator,\nreturning an error if the allocation fails,</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.85.0/core/mem/maybe_uninit/union.MaybeUninit.html#method.zeroed\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::zeroed\"><code>MaybeUninit::zeroed</code></a> for examples of correct and incorrect usage\nof this method.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(allocator_api)]\n\n</span><span class=\"kw\">use </span>std::alloc::System;\n\n<span class=\"kw\">let </span>zero = Box::&lt;u32, <span class=\"kw\">_</span>&gt;::try_new_zeroed_in(System)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>zero = <span class=\"kw\">unsafe </span>{ zero.assume_init() };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>zero, <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin_in\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#611-613\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.pin_in\" class=\"fn\">pin_in</a>(x: T, alloc: A) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;&gt;<div class=\"where\">where\n    A: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span></summary><div class=\"docblock\"><p>Constructs a new <code>Pin&lt;Box&lt;T, A&gt;&gt;</code>. If <code>T</code> does not implement <a href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\"><code>Unpin</code></a>, then\n<code>x</code> will be pinned in memory and unable to be moved.</p>\n<p>Constructing and pinning of the <code>Box</code> can also be done in two steps: <code>Box::pin_in(x, alloc)</code>\ndoes the same as <code><a href=\"bevy/ecs/label/struct.Box.html#method.into_pin\" title=\"associated function bevy::ecs::label::Box::into_pin\">Box::into_pin</a>(<a href=\"bevy/ecs/label/struct.Box.html#method.new_in\" title=\"associated function bevy::ecs::label::Box::new_in\">Box::new_in</a>(x, alloc))</code>. Consider using\n<a href=\"bevy/ecs/label/struct.Box.html#method.into_pin\" title=\"associated function bevy::ecs::label::Box::into_pin\"><code>into_pin</code></a> if you already have a <code>Box&lt;T, A&gt;</code>, or if you want to\nconstruct a (pinned) <code>Box</code> in a different way than with <a href=\"bevy/ecs/label/struct.Box.html#method.new_in\" title=\"associated function bevy::ecs::label::Box::new_in\"><code>Box::new_in</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#622\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.into_boxed_slice\" class=\"fn\">into_boxed_slice</a>(boxed: <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.slice.html\">[T]</a>, A&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_into_boxed_slice</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a <code>Box&lt;T&gt;</code> into a <code>Box&lt;[T]&gt;</code></p>\n<p>This conversion does not allocate on the heap and happens in place.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#640\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/ecs/label/struct.Box.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(boxed: <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; T</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>box_into_inner</code>)</span></div></span></summary><div class=\"docblock\"><p>Consumes the <code>Box</code>, returning the wrapped value.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(box_into_inner)]\n\n</span><span class=\"kw\">let </span>c = Box::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(Box::into_inner(c), <span class=\"number\">5</span>);</code></pre></div>\n</div></details></div></details>",0,"bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BufRead-for-Box%3CB%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#206\">Source</a></span><a href=\"#impl-BufRead-for-Box%3CB%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html\" title=\"trait std::io::BufRead\">BufRead</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html\" title=\"trait std::io::BufRead\">BufRead</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fill_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#208\">Source</a><a href=\"#method.fill_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html#tymethod.fill_buf\" class=\"fn\">fill_buf</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>], <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Returns the contents of the internal buffer, filling it with more data\nfrom the inner reader if it is empty. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html#tymethod.fill_buf\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.consume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#213\">Source</a><a href=\"#method.consume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html#tymethod.consume\" class=\"fn\">consume</a>(&amp;mut self, amt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Tells this buffer that <code>amt</code> bytes have been consumed from the buffer,\nso they should no longer be returned in calls to <code>read</code>. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html#tymethod.consume\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_until\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#218\">Source</a><a href=\"#method.read_until\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html#method.read_until\" class=\"fn\">read_until</a>(&amp;mut self, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF is reached. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html#method.read_until\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_line\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#223\">Source</a><a href=\"#method.read_line\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html#method.read_line\" class=\"fn\">read_line</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes until a newline (the <code>0xA</code> byte) is reached, and append\nthem to the provided <code>String</code> buffer. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html#method.read_line\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_data_left\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/mod.rs.html#2343\">Source</a><a href=\"#method.has_data_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html#method.has_data_left\" class=\"fn\">has_data_left</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>buf_read_has_data_left</code>)</span></div></span><div class='docblock'>Checks if the underlying <code>Read</code> has any data left to be read. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html#method.has_data_left\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_until\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.83.0\">1.83.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/mod.rs.html#2462\">Source</a></span><a href=\"#method.skip_until\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html#method.skip_until\" class=\"fn\">skip_until</a>(&amp;mut self, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Skips all bytes until the delimiter <code>byte</code> or EOF is reached. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html#method.skip_until\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/mod.rs.html#2568-2570\">Source</a></span><a href=\"#method.split\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html#method.split\" class=\"fn\">split</a>(self, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/io/struct.Split.html\" title=\"struct std::io::Split\">Split</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Split&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator over the contents of this reader split on the byte\n<code>byte</code>. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html#method.split\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lines\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/mod.rs.html#2605-2607\">Source</a></span><a href=\"#method.lines\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html#method.lines\" class=\"fn\">lines</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/io/struct.Lines.html\" title=\"struct std::io::Lines\">Lines</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Lines&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator over the lines of this reader. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.BufRead.html#method.lines\">Read more</a></div></details></div></details>","BufRead","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BufferMut-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/encase/core/rw.rs.html#432\">Source</a><a href=\"#impl-BufferMut-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy/render/render_resource/encase/internal/trait.BufferMut.html\" title=\"trait bevy::render::render_resource::encase::internal::BufferMut\">BufferMut</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/render/render_resource/encase/internal/trait.BufferMut.html\" title=\"trait bevy::render::render_resource::encase::internal::BufferMut\">BufferMut</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.capacity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/encase/core/rw.rs.html#432\">Source</a><a href=\"#method.capacity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/encase/internal/trait.BufferMut.html#tymethod.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/encase/core/rw.rs.html#432\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/encase/internal/trait.BufferMut.html#tymethod.write\" class=\"fn\">write</a>&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt;(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, val: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">N</a>])</h4></section><section id=\"method.write_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/encase/core/rw.rs.html#432\">Source</a><a href=\"#method.write_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/encase/internal/trait.BufferMut.html#tymethod.write_slice\" class=\"fn\">write_slice</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, val: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>])</h4></section><section id=\"method.try_enlarge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/encase/core/rw.rs.html#432\">Source</a><a href=\"#method.try_enlarge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/encase/internal/trait.BufferMut.html#method.try_enlarge\" class=\"fn\">try_enlarge</a>(&amp;mut self, wanted: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bevy/render/render_resource/encase/internal/struct.EnlargeError.html\" title=\"struct bevy::render::render_resource::encase::internal::EnlargeError\">EnlargeError</a>&gt;</h4></section></div></details>","BufferMut","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BufferRef-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/encase/core/rw.rs.html#404\">Source</a><a href=\"#impl-BufferRef-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy/render/render_resource/encase/internal/trait.BufferRef.html\" title=\"trait bevy::render::render_resource::encase::internal::BufferRef\">BufferRef</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/render/render_resource/encase/internal/trait.BufferRef.html\" title=\"trait bevy::render::render_resource::encase::internal::BufferRef\">BufferRef</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/encase/core/rw.rs.html#404\">Source</a><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/encase/internal/trait.BufferRef.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/encase/core/rw.rs.html#404\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/encase/internal/trait.BufferRef.html#tymethod.read\" class=\"fn\">read</a>&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt;(&amp;self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">N</a>]</h4></section><section id=\"method.read_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/encase/core/rw.rs.html#404\">Source</a><a href=\"#method.read_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/encase/internal/trait.BufferRef.html#tymethod.read_slice\" class=\"fn\">read_slice</a>(&amp;self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, val: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>])</h4></section></div></details>","BufferRef","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CalculateSizeFor-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/encase/types/wrapper.rs.html#116\">Source</a><a href=\"#impl-CalculateSizeFor-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy/render/render_resource/encase/trait.CalculateSizeFor.html\" title=\"trait bevy::render::render_resource::encase::CalculateSizeFor\">CalculateSizeFor</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/render/render_resource/encase/trait.CalculateSizeFor.html\" title=\"trait bevy::render::render_resource::encase::CalculateSizeFor\">CalculateSizeFor</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.calculate_size_for\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/encase/types/wrapper.rs.html#116\">Source</a><a href=\"#method.calculate_size_for\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/encase/trait.CalculateSizeFor.html#tymethod.calculate_size_for\" class=\"fn\">calculate_size_for</a>(nr_of_el: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Returns the size of <code>Self</code> assuming the (contained) runtime-sized array has <code>nr_of_el</code> elements</div></details></div></details>","CalculateSizeFor","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clear-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sharded_slab/clear.rs.html#35-37\">Source</a><a href=\"#impl-Clear-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sharded_slab/clear/trait.Clear.html\" title=\"trait sharded_slab::clear::Clear\">Clear</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"sharded_slab/clear/trait.Clear.html\" title=\"trait sharded_slab::clear::Clear\">Clear</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sharded_slab/clear.rs.html#40\">Source</a><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sharded_slab/clear/trait.Clear.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Clear all data in <code>self</code>, retaining the allocated capacithy.</div></details></div></details>","Clear","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1743\">Source</a></span><a href=\"#impl-Clone-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1759\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a new box with a <code>clone()</code> of this box’s contents.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span>y = x.clone();\n\n<span class=\"comment\">// The value is the same\n</span><span class=\"macro\">assert_eq!</span>(x, y);\n\n<span class=\"comment\">// But they are unique objects\n</span><span class=\"macro\">assert_ne!</span>(<span class=\"kw-2\">&amp;*</span>x <span class=\"kw\">as </span><span class=\"kw-2\">*const </span>i32, <span class=\"kw-2\">&amp;*</span>y <span class=\"kw\">as </span><span class=\"kw-2\">*const </span>i32);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1786\">Source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;)</h4></section></summary><div class=\"docblock\"><p>Copies <code>source</code>’s contents into <code>self</code> without creating a new allocation.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = Box::new(<span class=\"number\">5</span>);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>y = Box::new(<span class=\"number\">10</span>);\n<span class=\"kw\">let </span>yp: <span class=\"kw-2\">*const </span>i32 = <span class=\"kw-2\">&amp;*</span>y;\n\ny.clone_from(<span class=\"kw-2\">&amp;</span>x);\n\n<span class=\"comment\">// The value is the same\n</span><span class=\"macro\">assert_eq!</span>(x, y);\n\n<span class=\"comment\">// And no allocation occurred\n</span><span class=\"macro\">assert_eq!</span>(yp, <span class=\"kw-2\">&amp;*</span>y);</code></pre></div>\n</div></details></div></details>","Clone","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Connection-for-Box%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#impl-Connection-for-Box%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"x11rb/connection/trait.Connection.html\" title=\"trait x11rb::connection::Connection\">Connection</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"x11rb/connection/trait.Connection.html\" title=\"trait x11rb::connection::Connection\">Connection</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.wait_for_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.Connection.html#method.wait_for_event\" class=\"fn\">wait_for_event</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"x11rb_protocol/protocol/enum.Event.html\" title=\"enum x11rb_protocol::protocol::Event\">Event</a>, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;</h4></section></summary><div class='docblock'>Wait for a new event from the X11 server.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_raw_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.wait_for_raw_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.Connection.html#method.wait_for_raw_event\" class=\"fn\">wait_for_raw_event</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt; as <a class=\"trait\" href=\"x11rb/connection/trait.RequestConnection.html\" title=\"trait x11rb::connection::RequestConnection\">RequestConnection</a>&gt;::<a class=\"associatedtype\" href=\"x11rb/connection/trait.RequestConnection.html#associatedtype.Buf\" title=\"type x11rb::connection::RequestConnection::Buf\">Buf</a>, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;</h4></section></summary><div class='docblock'>Wait for a new raw/unparsed event from the X11 server.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_event_with_sequence\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.wait_for_event_with_sequence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.Connection.html#method.wait_for_event_with_sequence\" class=\"fn\">wait_for_event_with_sequence</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"enum\" href=\"x11rb_protocol/protocol/enum.Event.html\" title=\"enum x11rb_protocol::protocol::Event\">Event</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>), <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;</h4></section></summary><div class='docblock'>Wait for a new event from the X11 server.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_raw_event_with_sequence\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.wait_for_raw_event_with_sequence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.Connection.html#tymethod.wait_for_raw_event_with_sequence\" class=\"fn\">wait_for_raw_event_with_sequence</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt; as <a class=\"trait\" href=\"x11rb/connection/trait.RequestConnection.html\" title=\"trait x11rb::connection::RequestConnection\">RequestConnection</a>&gt;::<a class=\"associatedtype\" href=\"x11rb/connection/trait.RequestConnection.html#associatedtype.Buf\" title=\"type x11rb::connection::RequestConnection::Buf\">Buf</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>), <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;</h4></section></summary><div class='docblock'>Wait for a new raw/unparsed event from the X11 server.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_for_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.poll_for_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.Connection.html#method.poll_for_event\" class=\"fn\">poll_for_event</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"x11rb_protocol/protocol/enum.Event.html\" title=\"enum x11rb_protocol::protocol::Event\">Event</a>&gt;, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;</h4></section></summary><div class='docblock'>Poll for a new event from the X11 server.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_for_raw_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.poll_for_raw_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.Connection.html#method.poll_for_raw_event\" class=\"fn\">poll_for_raw_event</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt; as <a class=\"trait\" href=\"x11rb/connection/trait.RequestConnection.html\" title=\"trait x11rb::connection::RequestConnection\">RequestConnection</a>&gt;::<a class=\"associatedtype\" href=\"x11rb/connection/trait.RequestConnection.html#associatedtype.Buf\" title=\"type x11rb::connection::RequestConnection::Buf\">Buf</a>&gt;, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;</h4></section></summary><div class='docblock'>Poll for a new raw/unparsed event from the X11 server.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_for_event_with_sequence\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.poll_for_event_with_sequence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.Connection.html#method.poll_for_event_with_sequence\" class=\"fn\">poll_for_event_with_sequence</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"enum\" href=\"x11rb_protocol/protocol/enum.Event.html\" title=\"enum x11rb_protocol::protocol::Event\">Event</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>)&gt;, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;</h4></section></summary><div class='docblock'>Poll for a new event from the X11 server.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_for_raw_event_with_sequence\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.poll_for_raw_event_with_sequence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.Connection.html#tymethod.poll_for_raw_event_with_sequence\" class=\"fn\">poll_for_raw_event_with_sequence</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt; as <a class=\"trait\" href=\"x11rb/connection/trait.RequestConnection.html\" title=\"trait x11rb::connection::RequestConnection\">RequestConnection</a>&gt;::<a class=\"associatedtype\" href=\"x11rb/connection/trait.RequestConnection.html#associatedtype.Buf\" title=\"type x11rb::connection::RequestConnection::Buf\">Buf</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>)&gt;, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;</h4></section></summary><div class='docblock'>Poll for a new unparsed/raw event from the X11 server.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.Connection.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;</h4></section></summary><div class='docblock'>Send all pending requests to the server. <a href=\"x11rb/connection/trait.Connection.html#tymethod.flush\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.setup\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.setup\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.Connection.html#tymethod.setup\" class=\"fn\">setup</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Setup.html\" title=\"struct x11rb_protocol::protocol::xproto::Setup\">Setup</a></h4></section></summary><div class='docblock'>Get the setup information sent by the X11 server. <a href=\"x11rb/connection/trait.Connection.html#tymethod.setup\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generate_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.generate_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.Connection.html#tymethod.generate_id\" class=\"fn\">generate_id</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>, <a class=\"enum\" href=\"x11rb/errors/enum.ReplyOrIdError.html\" title=\"enum x11rb::errors::ReplyOrIdError\">ReplyOrIdError</a>&gt;</h4></section></summary><div class='docblock'>Generate a new X11 identifier. <a href=\"x11rb/connection/trait.Connection.html#tymethod.generate_id\">Read more</a></div></details></div></details>","Connection","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Coroutine%3CR%3E-for-Box%3CG,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2109\">Source</a><a href=\"#impl-Coroutine%3CR%3E-for-Box%3CG,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;G, R, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;G, A&gt;<div class=\"where\">where\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Yield\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2110\">Source</a><a href=\"#associatedtype.Yield\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/coroutine/trait.Coroutine.html#associatedtype.Yield\" class=\"associatedtype\">Yield</a> = &lt;G as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/coroutine/trait.Coroutine.html#associatedtype.Yield\" title=\"type core::ops::coroutine::Coroutine::Yield\">Yield</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>coroutine_trait</code>)</span></div></span><div class='docblock'>The type of value this coroutine yields. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/coroutine/trait.Coroutine.html#associatedtype.Yield\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Return\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2111\">Source</a><a href=\"#associatedtype.Return\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/coroutine/trait.Coroutine.html#associatedtype.Return\" class=\"associatedtype\">Return</a> = &lt;G as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/coroutine/trait.Coroutine.html#associatedtype.Return\" title=\"type core::ops::coroutine::Coroutine::Return\">Return</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>coroutine_trait</code>)</span></div></span><div class='docblock'>The type of value this coroutine returns. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/coroutine/trait.Coroutine.html#associatedtype.Return\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2113\">Source</a><a href=\"#method.resume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/coroutine/trait.Coroutine.html#tymethod.resume\" class=\"fn\">resume</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;G, A&gt;&gt;,\n    arg: R,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/coroutine/enum.CoroutineState.html\" title=\"enum core::ops::coroutine::CoroutineState\">CoroutineState</a>&lt;&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;G, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/coroutine/trait.Coroutine.html#associatedtype.Yield\" title=\"type core::ops::coroutine::Coroutine::Yield\">Yield</a>, &lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;G, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/coroutine/trait.Coroutine.html\" title=\"trait core::ops::coroutine::Coroutine\">Coroutine</a>&lt;R&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/coroutine/trait.Coroutine.html#associatedtype.Return\" title=\"type core::ops::coroutine::Coroutine::Return\">Return</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>coroutine_trait</code>)</span></div></span><div class='docblock'>Resumes the execution of this coroutine. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/coroutine/trait.Coroutine.html#tymethod.resume\">Read more</a></div></details></div></details>","Coroutine<R>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CreateFrom-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/encase/types/wrapper.rs.html#116\">Source</a><a href=\"#impl-CreateFrom-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy/render/render_resource/encase/internal/trait.CreateFrom.html\" title=\"trait bevy::render::render_resource::encase::internal::CreateFrom\">CreateFrom</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/render/render_resource/encase/internal/trait.CreateFrom.html\" title=\"trait bevy::render::render_resource::encase::internal::CreateFrom\">CreateFrom</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.create_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/encase/types/wrapper.rs.html#116\">Source</a><a href=\"#method.create_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/encase/internal/trait.CreateFrom.html#tymethod.create_from\" class=\"fn\">create_from</a>&lt;B&gt;(reader: &amp;mut <a class=\"struct\" href=\"bevy/render/render_resource/encase/internal/struct.Reader.html\" title=\"struct bevy::render::render_resource::encase::internal::Reader\">Reader</a>&lt;B&gt;) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"bevy/render/render_resource/encase/internal/trait.BufferRef.html\" title=\"trait bevy::render::render_resource::encase::internal::BufferRef\">BufferRef</a>,</div></h4></section></div></details>","CreateFrom","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1950\">Source</a></span><a href=\"#impl-Debug-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1951\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Box%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1709\">Source</a></span><a href=\"#impl-Default-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1712\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <code>Box&lt;T&gt;</code>, with the <code>Default</code> value for T.</p>\n</div></details></div></details>","Default","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1967\">Source</a></span><a href=\"#impl-Deref-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1968\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = T</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1970\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1976\">Source</a></span><a href=\"#impl-DerefMut-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1977\">Source</a><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#1965-1969\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#1965-1969\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserializer%3C'de%3E-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#impl-Deserializer%3C'de%3E-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"bevy/reflect/erased_serde/trait.Deserializer.html\" title=\"trait bevy::reflect::erased_serde::Deserializer\">Deserializer</a>&lt;'de&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/reflect/erased_serde/trait.Deserializer.html\" title=\"trait bevy::reflect::erased_serde::Deserializer\">Deserializer</a>&lt;'de&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.erased_deserialize_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_any\" class=\"fn\">erased_deserialize_any</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_bool\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_bool\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_bool\" class=\"fn\">erased_deserialize_bool</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_i8\" class=\"fn\">erased_deserialize_i8</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_i16\" class=\"fn\">erased_deserialize_i16</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_i32\" class=\"fn\">erased_deserialize_i32</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_i64\" class=\"fn\">erased_deserialize_i64</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_i128\" class=\"fn\">erased_deserialize_i128</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_u8\" class=\"fn\">erased_deserialize_u8</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_u16\" class=\"fn\">erased_deserialize_u16</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_u32\" class=\"fn\">erased_deserialize_u32</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_u64\" class=\"fn\">erased_deserialize_u64</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_u128\" class=\"fn\">erased_deserialize_u128</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_f32\" class=\"fn\">erased_deserialize_f32</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_f64\" class=\"fn\">erased_deserialize_f64</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_char\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_char\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_char\" class=\"fn\">erased_deserialize_char</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_str\" class=\"fn\">erased_deserialize_str</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_string\" class=\"fn\">erased_deserialize_string</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_bytes\" class=\"fn\">erased_deserialize_bytes</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_byte_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_byte_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_byte_buf\" class=\"fn\">erased_deserialize_byte_buf</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_option\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_option\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_option\" class=\"fn\">erased_deserialize_option</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_unit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_unit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_unit\" class=\"fn\">erased_deserialize_unit</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_unit_struct\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_unit_struct\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_unit_struct\" class=\"fn\">erased_deserialize_unit_struct</a>(\n    &amp;mut self,\n    name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_newtype_struct\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_newtype_struct\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_newtype_struct\" class=\"fn\">erased_deserialize_newtype_struct</a>(\n    &amp;mut self,\n    name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_seq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_seq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_seq\" class=\"fn\">erased_deserialize_seq</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_tuple\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_tuple\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_tuple\" class=\"fn\">erased_deserialize_tuple</a>(\n    &amp;mut self,\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_tuple_struct\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_tuple_struct\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_tuple_struct\" class=\"fn\">erased_deserialize_tuple_struct</a>(\n    &amp;mut self,\n    name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_map\" class=\"fn\">erased_deserialize_map</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_struct\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_struct\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_struct\" class=\"fn\">erased_deserialize_struct</a>(\n    &amp;mut self,\n    name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n    fields: &amp;'static [&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>],\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_identifier\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_identifier\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_identifier\" class=\"fn\">erased_deserialize_identifier</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_enum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_enum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_enum\" class=\"fn\">erased_deserialize_enum</a>(\n    &amp;mut self,\n    name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n    variants: &amp;'static [&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>],\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_deserialize_ignored_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_deserialize_ignored_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_deserialize_ignored_any\" class=\"fn\">erased_deserialize_ignored_any</a>(\n    &amp;mut self,\n    visitor: &amp;mut dyn Visitor&lt;'de&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, <a class=\"struct\" href=\"bevy/reflect/erased_serde/struct.Error.html\" title=\"struct bevy::reflect::erased_serde::Error\">Error</a>&gt;</h4></section><section id=\"method.erased_is_human_readable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/de.rs.html#1575\">Source</a><a href=\"#method.erased_is_human_readable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Deserializer.html#tymethod.erased_is_human_readable\" class=\"fn\">erased_is_human_readable</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","Deserializer<'de>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1943\">Source</a></span><a href=\"#impl-Display-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1944\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DoubleEndedIterator-for-Box%3CI,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/iter.rs.html#61\">Source</a></span><a href=\"#impl-DoubleEndedIterator-for-Box%3CI,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;I, A&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_back\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/iter.rs.html#62\">Source</a><a href=\"#method.next_back\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#tymethod.next_back\" class=\"fn\">next_back</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class='docblock'>Removes and returns an element from the end of the iterator. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#tymethod.next_back\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_back\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/iter.rs.html#65\">Source</a><a href=\"#method.nth_back\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.nth_back\" class=\"fn\">nth_back</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class='docblock'>Returns the <code>n</code>th element from the end of the iterator. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.nth_back\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.advance_back_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/double_ended.rs.html#138\">Source</a><a href=\"#method.advance_back_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.advance_back_by\" class=\"fn\">advance_back_by</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_advance_by</code>)</span></div></span><div class='docblock'>Advances the iterator from the back by <code>n</code> elements. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.advance_back_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_rfold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/double_ended.rs.html#230-234\">Source</a></span><a href=\"#method.try_rfold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.try_rfold\" class=\"fn\">try_rfold</a>&lt;B, F, R&gt;(&amp;mut self, init: B, f: F) -&gt; R<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = B&gt;,</div></h4></section></summary><div class='docblock'>This is the reverse version of <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.try_fold\" title=\"method core::iter::traits::iterator::Iterator::try_fold\"><code>Iterator::try_fold()</code></a>: it takes\nelements starting from the back of the iterator. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.try_rfold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rfold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/double_ended.rs.html#301-304\">Source</a></span><a href=\"#method.rfold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.rfold\" class=\"fn\">rfold</a>&lt;B, F&gt;(self, init: B, f: F) -&gt; B<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>An iterator method that reduces the iterator’s elements to a single,\nfinal value, starting from the back. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.rfold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rfind\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/double_ended.rs.html#356-359\">Source</a></span><a href=\"#method.rfind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.rfind\" class=\"fn\">rfind</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Searches for an element of an iterator from the back that satisfies a predicate. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.rfind\">Read more</a></div></details></div></details>","DoubleEndedIterator","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1691\">Source</a></span><a href=\"#impl-Drop-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1693\">Source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Error-for-Box%3CE%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2141\">Source</a></span><a href=\"#impl-Error-for-Box%3CE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;E&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.description\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2143\">Source</a><a href=\"#method.description\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/error/trait.Error.html#method.description\" class=\"fn\">description</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.42.0: use the Display impl or to_string()</span></div></span><div class='docblock'> <a href=\"https://doc.rust-lang.org/1.85.0/core/error/trait.Error.html#method.description\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cause\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2148\">Source</a><a href=\"#method.cause\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/error/trait.Error.html#method.cause\" class=\"fn\">cause</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.33.0: replaced by Error::source, which can support downcasting</span></div></span></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.source\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2152\">Source</a><a href=\"#method.source\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/error/trait.Error.html#method.source\" class=\"fn\">source</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns the lower-level source of this error, if any. <a href=\"https://doc.rust-lang.org/1.85.0/core/error/trait.Error.html#method.source\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.provide\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2156\">Source</a><a href=\"#method.provide\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/error/trait.Error.html#method.provide\" class=\"fn\">provide</a>&lt;'b&gt;(&amp;'b self, request: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/error/struct.Request.html\" title=\"struct core::error::Request\">Request</a>&lt;'b&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>error_generic_member_access</code>)</span></div></span><div class='docblock'>Provides type-based access to context intended for error reports. <a href=\"https://doc.rust-lang.org/1.85.0/core/error/trait.Error.html#method.provide\">Read more</a></div></details></div></details>","Error","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EventSource-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/calloop/sources/mod.rs.html#206\">Source</a><a href=\"#impl-EventSource-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"calloop/sources/trait.EventSource.html\" title=\"trait calloop::sources::EventSource\">EventSource</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"calloop/sources/trait.EventSource.html\" title=\"trait calloop::sources::EventSource\">EventSource</a>,</div></h3><div class=\"docblock\"><p>Blanket implementation for boxed event sources. <a href=\"calloop/sources/trait.EventSource.html\" title=\"trait calloop::sources::EventSource\"><code>EventSource</code></a> is not an\nobject safe trait, so this does not include trait objects.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.NEEDS_EXTRA_LIFECYCLE_EVENTS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/calloop/sources/mod.rs.html#240\">Source</a><a href=\"#associatedconstant.NEEDS_EXTRA_LIFECYCLE_EVENTS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"calloop/sources/trait.EventSource.html#associatedconstant.NEEDS_EXTRA_LIFECYCLE_EVENTS\" class=\"constant\">NEEDS_EXTRA_LIFECYCLE_EVENTS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a> = T::NEEDS_EXTRA_LIFECYCLE_EVENTS</h4></section></summary><div class='docblock'>Whether this source needs to be sent the <a href=\"calloop/sources/trait.EventSource.html#method.before_sleep\" title=\"method calloop::sources::EventSource::before_sleep\"><code>EventSource::before_sleep</code></a>\nand <a href=\"calloop/sources/trait.EventSource.html#method.before_handle_events\" title=\"method calloop::sources::EventSource::before_handle_events\"><code>EventSource::before_handle_events</code></a> notifications. These are opt-in because\nthey require more expensive checks, and almost all sources will not need these notifications</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Event\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/calloop/sources/mod.rs.html#207\">Source</a><a href=\"#associatedtype.Event\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"calloop/sources/trait.EventSource.html#associatedtype.Event\" class=\"associatedtype\">Event</a> = &lt;T as <a class=\"trait\" href=\"calloop/sources/trait.EventSource.html\" title=\"trait calloop::sources::EventSource\">EventSource</a>&gt;::<a class=\"associatedtype\" href=\"calloop/sources/trait.EventSource.html#associatedtype.Event\" title=\"type calloop::sources::EventSource::Event\">Event</a></h4></section></summary><div class='docblock'>The type of events generated by your source.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Metadata\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/calloop/sources/mod.rs.html#208\">Source</a><a href=\"#associatedtype.Metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"calloop/sources/trait.EventSource.html#associatedtype.Metadata\" class=\"associatedtype\">Metadata</a> = &lt;T as <a class=\"trait\" href=\"calloop/sources/trait.EventSource.html\" title=\"trait calloop::sources::EventSource\">EventSource</a>&gt;::<a class=\"associatedtype\" href=\"calloop/sources/trait.EventSource.html#associatedtype.Metadata\" title=\"type calloop::sources::EventSource::Metadata\">Metadata</a></h4></section></summary><div class='docblock'>Some metadata of your event source <a href=\"calloop/sources/trait.EventSource.html#associatedtype.Metadata\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Ret\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/calloop/sources/mod.rs.html#209\">Source</a><a href=\"#associatedtype.Ret\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"calloop/sources/trait.EventSource.html#associatedtype.Ret\" class=\"associatedtype\">Ret</a> = &lt;T as <a class=\"trait\" href=\"calloop/sources/trait.EventSource.html\" title=\"trait calloop::sources::EventSource\">EventSource</a>&gt;::<a class=\"associatedtype\" href=\"calloop/sources/trait.EventSource.html#associatedtype.Ret\" title=\"type calloop::sources::EventSource::Ret\">Ret</a></h4></section></summary><div class='docblock'>The return type of the user callback <a href=\"calloop/sources/trait.EventSource.html#associatedtype.Ret\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/calloop/sources/mod.rs.html#210\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"calloop/sources/trait.EventSource.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;T as <a class=\"trait\" href=\"calloop/sources/trait.EventSource.html\" title=\"trait calloop::sources::EventSource\">EventSource</a>&gt;::<a class=\"associatedtype\" href=\"calloop/sources/trait.EventSource.html#associatedtype.Error\" title=\"type calloop::sources::EventSource::Error\">Error</a></h4></section></summary><div class='docblock'>The error type returned from\n<a href=\"calloop/sources/trait.EventSource.html#tymethod.process_events\" title=\"method calloop::sources::EventSource::process_events::process_events\"><code>process_events()</code></a> (not the user callback!).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.process_events\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/calloop/sources/mod.rs.html#212-219\">Source</a><a href=\"#method.process_events\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"calloop/sources/trait.EventSource.html#tymethod.process_events\" class=\"fn\">process_events</a>&lt;F&gt;(\n    &amp;mut self,\n    readiness: <a class=\"struct\" href=\"calloop/sys/struct.Readiness.html\" title=\"struct calloop::sys::Readiness\">Readiness</a>,\n    token: <a class=\"struct\" href=\"calloop/sys/struct.Token.html\" title=\"struct calloop::sys::Token\">Token</a>,\n    callback: F,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"calloop/sources/enum.PostAction.html\" title=\"enum calloop::sources::PostAction\">PostAction</a>, &lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt; as <a class=\"trait\" href=\"calloop/sources/trait.EventSource.html\" title=\"trait calloop::sources::EventSource\">EventSource</a>&gt;::<a class=\"associatedtype\" href=\"calloop/sources/trait.EventSource.html#associatedtype.Error\" title=\"type calloop::sources::EventSource::Error\">Error</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt; as <a class=\"trait\" href=\"calloop/sources/trait.EventSource.html\" title=\"trait calloop::sources::EventSource\">EventSource</a>&gt;::<a class=\"associatedtype\" href=\"calloop/sources/trait.EventSource.html#associatedtype.Event\" title=\"type calloop::sources::EventSource::Event\">Event</a>, &amp;mut &lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt; as <a class=\"trait\" href=\"calloop/sources/trait.EventSource.html\" title=\"trait calloop::sources::EventSource\">EventSource</a>&gt;::<a class=\"associatedtype\" href=\"calloop/sources/trait.EventSource.html#associatedtype.Metadata\" title=\"type calloop::sources::EventSource::Metadata\">Metadata</a>) -&gt; &lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt; as <a class=\"trait\" href=\"calloop/sources/trait.EventSource.html\" title=\"trait calloop::sources::EventSource\">EventSource</a>&gt;::<a class=\"associatedtype\" href=\"calloop/sources/trait.EventSource.html#associatedtype.Ret\" title=\"type calloop::sources::EventSource::Ret\">Ret</a>,</div></h4></section></summary><div class='docblock'>Process any relevant events <a href=\"calloop/sources/trait.EventSource.html#tymethod.process_events\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/calloop/sources/mod.rs.html#224\">Source</a><a href=\"#method.register\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"calloop/sources/trait.EventSource.html#tymethod.register\" class=\"fn\">register</a>(\n    &amp;mut self,\n    poll: &amp;mut <a class=\"struct\" href=\"calloop/sys/struct.Poll.html\" title=\"struct calloop::sys::Poll\">Poll</a>,\n    token_factory: &amp;mut <a class=\"struct\" href=\"calloop/sys/struct.TokenFactory.html\" title=\"struct calloop::sys::TokenFactory\">TokenFactory</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"calloop/error/enum.Error.html\" title=\"enum calloop::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Register yourself to this poll instance <a href=\"calloop/sources/trait.EventSource.html#tymethod.register\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reregister\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/calloop/sources/mod.rs.html#228-232\">Source</a><a href=\"#method.reregister\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"calloop/sources/trait.EventSource.html#tymethod.reregister\" class=\"fn\">reregister</a>(\n    &amp;mut self,\n    poll: &amp;mut <a class=\"struct\" href=\"calloop/sys/struct.Poll.html\" title=\"struct calloop::sys::Poll\">Poll</a>,\n    token_factory: &amp;mut <a class=\"struct\" href=\"calloop/sys/struct.TokenFactory.html\" title=\"struct calloop::sys::TokenFactory\">TokenFactory</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"calloop/error/enum.Error.html\" title=\"enum calloop::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Re-register your file descriptors <a href=\"calloop/sources/trait.EventSource.html#tymethod.reregister\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unregister\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/calloop/sources/mod.rs.html#236\">Source</a><a href=\"#method.unregister\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"calloop/sources/trait.EventSource.html#tymethod.unregister\" class=\"fn\">unregister</a>(&amp;mut self, poll: &amp;mut <a class=\"struct\" href=\"calloop/sys/struct.Poll.html\" title=\"struct calloop::sys::Poll\">Poll</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"calloop/error/enum.Error.html\" title=\"enum calloop::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Unregister your file descriptors <a href=\"calloop/sources/trait.EventSource.html#tymethod.unregister\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_sleep\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/calloop/sources/mod.rs.html#242\">Source</a><a href=\"#method.before_sleep\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"calloop/sources/trait.EventSource.html#method.before_sleep\" class=\"fn\">before_sleep</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"struct\" href=\"calloop/sys/struct.Readiness.html\" title=\"struct calloop::sys::Readiness\">Readiness</a>, <a class=\"struct\" href=\"calloop/sys/struct.Token.html\" title=\"struct calloop::sys::Token\">Token</a>)&gt;, <a class=\"enum\" href=\"calloop/error/enum.Error.html\" title=\"enum calloop::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Notification that a single <code>poll</code> is about to begin <a href=\"calloop/sources/trait.EventSource.html#method.before_sleep\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_handle_events\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/calloop/sources/mod.rs.html#246\">Source</a><a href=\"#method.before_handle_events\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"calloop/sources/trait.EventSource.html#method.before_handle_events\" class=\"fn\">before_handle_events</a>(&amp;mut self, events: <a class=\"struct\" href=\"calloop/loop_logic/struct.EventIterator.html\" title=\"struct calloop::loop_logic::EventIterator\">EventIterator</a>&lt;'_&gt;)</h4></section></summary><div class='docblock'>Notification that polling is complete, and <a href=\"calloop/sources/trait.EventSource.html#tymethod.process_events\" title=\"method calloop::sources::EventSource::process_events\"><code>EventSource::process_events</code></a> will\nbe called with the given events for this source. The iterator may be empty,\nwhich indicates that no events were generated for this source <a href=\"calloop/sources/trait.EventSource.html#method.before_handle_events\">Read more</a></div></details></div></details>","EventSource","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExactSizeIterator-for-Box%3CI,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/iter.rs.html#70\">Source</a></span><a href=\"#impl-ExactSizeIterator-for-Box%3CI,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;I, A&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/iter.rs.html#71\">Source</a><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/exact_size/trait.ExactSizeIterator.html#method.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the exact remaining length of the iterator. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/exact_size/trait.ExactSizeIterator.html#method.len\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/iter.rs.html#74\">Source</a><a href=\"#method.is_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/exact_size/trait.ExactSizeIterator.html#method.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>exact_size_is_empty</code>)</span></div></span><div class='docblock'>Returns <code>true</code> if the iterator is empty. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/exact_size/trait.ExactSizeIterator.html#method.is_empty\">Read more</a></div></details></div></details>","ExactSizeIterator","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Fn%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2005\">Source</a></span><a href=\"#impl-Fn%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>&lt;Args&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2006\">Source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html#tymethod.call\" class=\"fn\">call</a>(\n    &amp;self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html#associatedtype.Output\" title=\"type core::ops::function::FnOnce::Output\">Output</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>fn_traits</code>)</span></div></span><div class='docblock'>Performs the call operation.</div></details></div></details>","Fn<Args>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FnMut%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1998\">Source</a></span><a href=\"#impl-FnMut%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>&lt;Args&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1999\">Source</a><a href=\"#method.call_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html#tymethod.call_mut\" class=\"fn\">call_mut</a>(\n    &amp;mut self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html#associatedtype.Output\" title=\"type core::ops::function::FnOnce::Output\">Output</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>fn_traits</code>)</span></div></span><div class='docblock'>Performs the call operation.</div></details></div></details>","FnMut<Args>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FnOnce%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1989\">Source</a></span><a href=\"#impl-FnOnce%3CArgs%3E-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, F, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Tuple.html\" title=\"trait core::marker::Tuple\">Tuple</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1990\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html#associatedtype.Output\" title=\"type core::ops::function::FnOnce::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after the call operator is used.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_once\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1992\">Source</a><a href=\"#method.call_once\" class=\"anchor\">§</a><h4 class=\"code-header\">extern &quot;rust-call&quot; fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html#tymethod.call_once\" class=\"fn\">call_once</a>(\n    self,\n    args: Args,\n) -&gt; &lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>&lt;Args&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html#associatedtype.Output\" title=\"type core::ops::function::FnOnce::Output\">Output</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>fn_traits</code>)</span></div></span><div class='docblock'>Performs the call operation.</div></details></div></details>","FnOnce<Args>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-Box%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/convert.rs.html#23\">Source</a></span><a href=\"#impl-From%3CT%3E-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/convert.rs.html#37\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: T) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <code>T</code> into a <code>Box&lt;T&gt;</code></p>\n<p>The conversion allocates on the heap and moves <code>t</code>\nfrom the stack into it.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = <span class=\"number\">5</span>;\n<span class=\"kw\">let </span>boxed = Box::new(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(Box::from(x), boxed);</code></pre></div>\n</div></details></div></details>","From<T>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FusedFuture-for-Box%3CF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_core/future.rs.html#101\">Source</a><a href=\"#impl-FusedFuture-for-Box%3CF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F&gt; <a class=\"trait\" href=\"futures_core/future/trait.FusedFuture.html\" title=\"trait futures_core::future::FusedFuture\">FusedFuture</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"futures_core/future/trait.FusedFuture.html\" title=\"trait futures_core::future::FusedFuture\">FusedFuture</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_terminated\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_core/future.rs.html#102\">Source</a><a href=\"#method.is_terminated\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_core/future/trait.FusedFuture.html#tymethod.is_terminated\" class=\"fn\">is_terminated</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the underlying future should no longer be polled.</div></details></div></details>","FusedFuture","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FusedStream-for-Box%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_core/stream.rs.html#240\">Source</a><a href=\"#impl-FusedStream-for-Box%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"futures_core/stream/trait.FusedStream.html\" title=\"trait futures_core::stream::FusedStream\">FusedStream</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"futures_core/stream/trait.FusedStream.html\" title=\"trait futures_core::stream::FusedStream\">FusedStream</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_terminated\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_core/stream.rs.html#241\">Source</a><a href=\"#method.is_terminated\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_core/stream/trait.FusedStream.html#tymethod.is_terminated\" class=\"fn\">is_terminated</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the stream should no longer be polled.</div></details></div></details>","FusedStream","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Future-for-Box%3CF,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.36.0\">1.36.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2132\">Source</a></span><a href=\"#impl-Future-for-Box%3CF,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, A&gt; <a class=\"trait\" href=\"bevy/tasks/futures_lite/trait.Future.html\" title=\"trait bevy::tasks::futures_lite::Future\">Future</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;F, A&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"bevy/tasks/futures_lite/trait.Future.html\" title=\"trait bevy::tasks::futures_lite::Future\">Future</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2133\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/tasks/futures_lite/trait.Future.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;F as <a class=\"trait\" href=\"bevy/tasks/futures_lite/trait.Future.html\" title=\"trait bevy::tasks::futures_lite::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"bevy/tasks/futures_lite/trait.Future.html#associatedtype.Output\" title=\"type bevy::tasks::futures_lite::Future::Output\">Output</a></h4></section></summary><div class='docblock'>The type of value produced on completion.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2135\">Source</a><a href=\"#method.poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/tasks/futures_lite/trait.Future.html#tymethod.poll\" class=\"fn\">poll</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;F, A&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;F, A&gt; as <a class=\"trait\" href=\"bevy/tasks/futures_lite/trait.Future.html\" title=\"trait bevy::tasks::futures_lite::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"bevy/tasks/futures_lite/trait.Future.html#associatedtype.Output\" title=\"type bevy::tasks::futures_lite::Future::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Attempts to resolve the future to a final value, registering\nthe current task for wakeup if the value is not yet available. <a href=\"bevy/tasks/futures_lite/trait.Future.html#tymethod.poll\">Read more</a></div></details></div></details>","Future","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasDisplayHandle-for-Box%3CH%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/raw_window_handle/borrowed.rs.html#52\">Source</a><a href=\"#impl-HasDisplayHandle-for-Box%3CH%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H&gt; <a class=\"trait\" href=\"raw_window_handle/borrowed/trait.HasDisplayHandle.html\" title=\"trait raw_window_handle::borrowed::HasDisplayHandle\">HasDisplayHandle</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;H&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"raw_window_handle/borrowed/trait.HasDisplayHandle.html\" title=\"trait raw_window_handle::borrowed::HasDisplayHandle\">HasDisplayHandle</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.display_handle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/raw_window_handle/borrowed.rs.html#53\">Source</a><a href=\"#method.display_handle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"raw_window_handle/borrowed/trait.HasDisplayHandle.html#tymethod.display_handle\" class=\"fn\">display_handle</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"raw_window_handle/borrowed/struct.DisplayHandle.html\" title=\"struct raw_window_handle::borrowed::DisplayHandle\">DisplayHandle</a>&lt;'_&gt;, <a class=\"enum\" href=\"raw_window_handle/enum.HandleError.html\" title=\"enum raw_window_handle::HandleError\">HandleError</a>&gt;</h4></section></summary><div class='docblock'>Get a handle to the display controller of the windowing system.</div></details></div></details>","HasDisplayHandle","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasWindowHandle-for-Box%3CH%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/raw_window_handle/borrowed.rs.html#180\">Source</a><a href=\"#impl-HasWindowHandle-for-Box%3CH%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H&gt; <a class=\"trait\" href=\"raw_window_handle/borrowed/trait.HasWindowHandle.html\" title=\"trait raw_window_handle::borrowed::HasWindowHandle\">HasWindowHandle</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;H&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"raw_window_handle/borrowed/trait.HasWindowHandle.html\" title=\"trait raw_window_handle::borrowed::HasWindowHandle\">HasWindowHandle</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.window_handle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/raw_window_handle/borrowed.rs.html#181\">Source</a><a href=\"#method.window_handle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"raw_window_handle/borrowed/trait.HasWindowHandle.html#tymethod.window_handle\" class=\"fn\">window_handle</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"raw_window_handle/borrowed/struct.WindowHandle.html\" title=\"struct raw_window_handle::borrowed::WindowHandle\">WindowHandle</a>&lt;'_&gt;, <a class=\"enum\" href=\"raw_window_handle/enum.HandleError.html\" title=\"enum raw_window_handle::HandleError\">HandleError</a>&gt;</h4></section></summary><div class='docblock'>Get a handle to the window.</div></details></div></details>","HasWindowHandle","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1884\">Source</a></span><a href=\"#impl-Hash-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1885\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hasher-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1891\">Source</a></span><a href=\"#impl-Hasher-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.finish\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1892\">Source</a><a href=\"#method.finish\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#tymethod.finish\" class=\"fn\">finish</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the hash value for the values written so far. <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#tymethod.finish\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1895\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Writes some data into this <code>Hasher</code>. <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#tymethod.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1898\">Source</a><a href=\"#method.write_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#method.write_u8\" class=\"fn\">write_u8</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Writes a single <code>u8</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1901\">Source</a><a href=\"#method.write_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#method.write_u16\" class=\"fn\">write_u16</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Writes a single <code>u16</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1904\">Source</a><a href=\"#method.write_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#method.write_u32\" class=\"fn\">write_u32</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Writes a single <code>u32</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1907\">Source</a><a href=\"#method.write_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#method.write_u64\" class=\"fn\">write_u64</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Writes a single <code>u64</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1910\">Source</a><a href=\"#method.write_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#method.write_u128\" class=\"fn\">write_u128</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Writes a single <code>u128</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1913\">Source</a><a href=\"#method.write_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#method.write_usize\" class=\"fn\">write_usize</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes a single <code>usize</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1916\">Source</a><a href=\"#method.write_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#method.write_i8\" class=\"fn\">write_i8</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Writes a single <code>i8</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1919\">Source</a><a href=\"#method.write_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#method.write_i16\" class=\"fn\">write_i16</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Writes a single <code>i16</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1922\">Source</a><a href=\"#method.write_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#method.write_i32\" class=\"fn\">write_i32</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Writes a single <code>i32</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1925\">Source</a><a href=\"#method.write_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#method.write_i64\" class=\"fn\">write_i64</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Writes a single <code>i64</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1928\">Source</a><a href=\"#method.write_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#method.write_i128\" class=\"fn\">write_i128</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Writes a single <code>i128</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1931\">Source</a><a href=\"#method.write_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#method.write_isize\" class=\"fn\">write_isize</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Writes a single <code>isize</code> into this hasher.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_length_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1934\">Source</a><a href=\"#method.write_length_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#method.write_length_prefix\" class=\"fn\">write_length_prefix</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>hasher_prefixfree_extras</code>)</span></div></span><div class='docblock'>Writes a length prefix into this hasher, as part of being prefix-free. <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#method.write_length_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1937\">Source</a><a href=\"#method.write_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#method.write_str\" class=\"fn\">write_str</a>(&amp;mut self, s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>hasher_prefixfree_extras</code>)</span></div></span><div class='docblock'>Writes a single <code>str</code> into this hasher. <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html#method.write_str\">Read more</a></div></details></div></details>","Hasher","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ImageDecoder-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/image/image.rs.html#736\">Source</a><a href=\"#impl-ImageDecoder-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"image/image/trait.ImageDecoder.html\" title=\"trait image::image::ImageDecoder\">ImageDecoder</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"image/image/trait.ImageDecoder.html\" title=\"trait image::image::ImageDecoder\">ImageDecoder</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.dimensions\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/image.rs.html#737\">Source</a><a href=\"#method.dimensions\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/image/trait.ImageDecoder.html#tymethod.dimensions\" class=\"fn\">dimensions</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Returns a tuple containing the width and height of the image</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.color_type\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/image.rs.html#740\">Source</a><a href=\"#method.color_type\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/image/trait.ImageDecoder.html#tymethod.color_type\" class=\"fn\">color_type</a>(&amp;self) -&gt; <a class=\"enum\" href=\"image/color/enum.ColorType.html\" title=\"enum image::color::ColorType\">ColorType</a></h4></section></summary><div class='docblock'>Returns the color type of the image data produced by this decoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.original_color_type\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/image.rs.html#743\">Source</a><a href=\"#method.original_color_type\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/image/trait.ImageDecoder.html#method.original_color_type\" class=\"fn\">original_color_type</a>(&amp;self) -&gt; <a class=\"enum\" href=\"image/color/enum.ExtendedColorType.html\" title=\"enum image::color::ExtendedColorType\">ExtendedColorType</a></h4></section></summary><div class='docblock'>Returns the color type of the image file before decoding</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.icc_profile\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/image.rs.html#746\">Source</a><a href=\"#method.icc_profile\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/image/trait.ImageDecoder.html#method.icc_profile\" class=\"fn\">icc_profile</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>&gt;&gt;, <a class=\"enum\" href=\"image/error/enum.ImageError.html\" title=\"enum image::error::ImageError\">ImageError</a>&gt;</h4></section></summary><div class='docblock'>Returns the ICC color profile embedded in the image, or <code>Ok(None)</code> if the image does not have one. <a href=\"image/image/trait.ImageDecoder.html#method.icc_profile\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exif_metadata\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/image.rs.html#749\">Source</a><a href=\"#method.exif_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/image/trait.ImageDecoder.html#method.exif_metadata\" class=\"fn\">exif_metadata</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>&gt;&gt;, <a class=\"enum\" href=\"image/error/enum.ImageError.html\" title=\"enum image::error::ImageError\">ImageError</a>&gt;</h4></section></summary><div class='docblock'>Returns the raw <a href=\"https://en.wikipedia.org/wiki/Exif\">Exif</a> chunk, if it is present.\nA third-party crate such as <a href=\"https://docs.rs/kamadak-exif/\"><code>kamadak-exif</code></a> is required to actually parse it. <a href=\"image/image/trait.ImageDecoder.html#method.exif_metadata\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.total_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/image.rs.html#752\">Source</a><a href=\"#method.total_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/image/trait.ImageDecoder.html#method.total_bytes\" class=\"fn\">total_bytes</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the total number of bytes in the decoded image. <a href=\"image/image/trait.ImageDecoder.html#method.total_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_image\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/image.rs.html#755-757\">Source</a><a href=\"#method.read_image\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/image/trait.ImageDecoder.html#tymethod.read_image\" class=\"fn\">read_image</a>(self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"image/error/enum.ImageError.html\" title=\"enum image::error::ImageError\">ImageError</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns all the bytes in the image. <a href=\"image/image/trait.ImageDecoder.html#tymethod.read_image\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_image_boxed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/image.rs.html#761\">Source</a><a href=\"#method.read_image_boxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/image/trait.ImageDecoder.html#tymethod.read_image_boxed\" class=\"fn\">read_image_boxed</a>(self: <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;&gt;, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"image/error/enum.ImageError.html\" title=\"enum image::error::ImageError\">ImageError</a>&gt;</h4></section></summary><div class='docblock'>Use <code>read_image</code> instead; this method is an implementation detail needed so the trait can\nbe object safe. <a href=\"image/image/trait.ImageDecoder.html#tymethod.read_image_boxed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_limits\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/image.rs.html#764\">Source</a><a href=\"#method.set_limits\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/image/trait.ImageDecoder.html#method.set_limits\" class=\"fn\">set_limits</a>(&amp;mut self, limits: <a class=\"struct\" href=\"image/image_reader/struct.Limits.html\" title=\"struct image::image_reader::Limits\">Limits</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"image/error/enum.ImageError.html\" title=\"enum image::error::ImageError\">ImageError</a>&gt;</h4></section></summary><div class='docblock'>Set the decoder to have the specified limits. See <a href=\"./io/struct.Limits.html\"><code>Limits</code></a> for the different kinds of\nlimits that is possible to set. <a href=\"image/image/trait.ImageDecoder.html#method.set_limits\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.orientation\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/image/image.rs.html#660\">Source</a><a href=\"#method.orientation\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"image/image/trait.ImageDecoder.html#method.orientation\" class=\"fn\">orientation</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"image/metadata/enum.Orientation.html\" title=\"enum image::metadata::Orientation\">Orientation</a>, <a class=\"enum\" href=\"image/error/enum.ImageError.html\" title=\"enum image::error::ImageError\">ImageError</a>&gt;</h4></section></summary><div class='docblock'>Returns the orientation of the image. <a href=\"image/image/trait.ImageDecoder.html#method.orientation\">Read more</a></div></details></div></details>","ImageDecoder","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSystemConfigs%3C()%3E-for-Box%3Cdyn+System%3CIn+=+(),+Out+=+()%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#529\">Source</a><a href=\"#impl-IntoSystemConfigs%3C()%3E-for-Box%3Cdyn+System%3CIn+=+(),+Out+=+()%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy/prelude/trait.IntoSystemConfigs.html\" title=\"trait bevy::prelude::IntoSystemConfigs\">IntoSystemConfigs</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.System.html\" title=\"trait bevy::prelude::System\">System</a>&lt;In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_configs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#530\">Source</a><a href=\"#method.into_configs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#tymethod.into_configs\" class=\"fn\">into_configs</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.System.html\" title=\"trait bevy::prelude::System\">System</a>&lt;In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Convert into a <a href=\"bevy/ecs/schedule/type.SystemConfigs.html\" title=\"type bevy::ecs::schedule::SystemConfigs\"><code>SystemConfigs</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#289\">Source</a><a href=\"#method.in_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.in_set\" class=\"fn\">in_set</a>(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/prelude/trait.SystemSet.html\" title=\"trait bevy::prelude::SystemSet\">SystemSet</a>,\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.System.html\" title=\"trait bevy::prelude::System\">System</a>&lt;In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Add these systems to the provided <code>set</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#301\">Source</a><a href=\"#method.before\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.before\" class=\"fn\">before</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;,\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.System.html\" title=\"trait bevy::prelude::System\">System</a>&lt;In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Runs before all systems in <code>set</code>. If <code>self</code> has any systems that produce <a href=\"bevy/prelude/struct.Commands.html\" title=\"struct bevy::prelude::Commands\"><code>Commands</code></a>\nor other <a href=\"bevy/prelude/struct.Deferred.html\" title=\"struct bevy::prelude::Deferred\"><code>Deferred</code></a> operations, all systems in <code>set</code> will see their effect. <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.before\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#328\">Source</a><a href=\"#method.after\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.after\" class=\"fn\">after</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;,\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.System.html\" title=\"trait bevy::prelude::System\">System</a>&lt;In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Run after all systems in <code>set</code>. If <code>set</code> has any systems that produce <a href=\"bevy/prelude/struct.Commands.html\" title=\"struct bevy::prelude::Commands\"><code>Commands</code></a>\nor other <a href=\"bevy/prelude/struct.Deferred.html\" title=\"struct bevy::prelude::Deferred\"><code>Deferred</code></a> operations, all systems in <code>self</code> will see their effect. <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.after\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#336\">Source</a><a href=\"#method.before_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.before_ignore_deferred\" class=\"fn\">before_ignore_deferred</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;,\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.System.html\" title=\"trait bevy::prelude::System\">System</a>&lt;In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Run before all systems in <code>set</code>. <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.before_ignore_deferred\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#344\">Source</a><a href=\"#method.after_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.after_ignore_deferred\" class=\"fn\">after_ignore_deferred</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;,\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.System.html\" title=\"trait bevy::prelude::System\">System</a>&lt;In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Run after all systems in <code>set</code>. <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.after_ignore_deferred\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.distributive_run_if\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#378\">Source</a><a href=\"#method.distributive_run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.distributive_run_if\" class=\"fn\">distributive_run_if</a>&lt;M&gt;(\n    self,\n    condition: impl <a class=\"trait\" href=\"bevy/prelude/trait.Condition.html\" title=\"trait bevy::prelude::Condition\">Condition</a>&lt;M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.System.html\" title=\"trait bevy::prelude::System\">System</a>&lt;In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Add a run condition to each contained system. <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.distributive_run_if\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#412\">Source</a><a href=\"#method.run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.run_if\" class=\"fn\">run_if</a>&lt;M&gt;(\n    self,\n    condition: impl <a class=\"trait\" href=\"bevy/prelude/trait.Condition.html\" title=\"trait bevy::prelude::Condition\">Condition</a>&lt;M&gt;,\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.System.html\" title=\"trait bevy::prelude::System\">System</a>&lt;In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Run the systems only if the <a href=\"bevy/prelude/trait.Condition.html\" title=\"trait bevy::prelude::Condition\"><code>Condition</code></a> is <code>true</code>. <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.run_if\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ambiguous_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#418\">Source</a><a href=\"#method.ambiguous_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.ambiguous_with\" class=\"fn\">ambiguous_with</a>&lt;M&gt;(\n    self,\n    set: impl <a class=\"trait\" href=\"bevy/prelude/trait.IntoSystemSet.html\" title=\"trait bevy::prelude::IntoSystemSet\">IntoSystemSet</a>&lt;M&gt;,\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.System.html\" title=\"trait bevy::prelude::System\">System</a>&lt;In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Suppress warnings and errors that would result from these systems having ambiguities\n(conflicting access but indeterminate order) with systems in <code>set</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ambiguous_with_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#424\">Source</a><a href=\"#method.ambiguous_with_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.ambiguous_with_all\" class=\"fn\">ambiguous_with_all</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.System.html\" title=\"trait bevy::prelude::System\">System</a>&lt;In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Suppress warnings and errors that would result from these systems having ambiguities\n(conflicting access but indeterminate order) with any other system.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#435\">Source</a><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.chain\" class=\"fn\">chain</a>(self) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.System.html\" title=\"trait bevy::prelude::System\">System</a>&lt;In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Treat this collection as a sequence of systems. <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain_ignore_deferred\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_ecs/schedule/config.rs.html#444\">Source</a><a href=\"#method.chain_ignore_deferred\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.chain_ignore_deferred\" class=\"fn\">chain_ignore_deferred</a>(\n    self,\n) -&gt; <a class=\"enum\" href=\"bevy/ecs/schedule/enum.NodeConfigs.html\" title=\"enum bevy::ecs::schedule::NodeConfigs\">NodeConfigs</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/prelude/trait.System.html\" title=\"trait bevy::prelude::System\">System</a>&lt;In = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, Out = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Treat this collection as a sequence of systems. <a href=\"bevy/prelude/trait.IntoSystemConfigs.html#method.chain_ignore_deferred\">Read more</a></div></details></div></details>","IntoSystemConfigs<()>","bevy::ecs::system::BoxedSystem"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Iterator-for-Box%3CI,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/iter.rs.html#18\">Source</a></span><a href=\"#impl-Iterator-for-Box%3CI,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;I, A&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/iter.rs.html#19\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/iter.rs.html#20\">Source</a><a href=\"#method.next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#tymethod.next\" class=\"fn\">next</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class='docblock'>Advances the iterator and returns the next value. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#tymethod.next\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/iter.rs.html#23\">Source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Returns the bounds on the remaining length of the iterator. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.size_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/iter.rs.html#26\">Source</a><a href=\"#method.nth\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.nth\" class=\"fn\">nth</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class='docblock'>Returns the <code>n</code>th element of the iterator. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.nth\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/iter.rs.html#29\">Source</a><a href=\"#method.last\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.last\" class=\"fn\">last</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class='docblock'>Consumes the iterator, returning the last element. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.last\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_chunk\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#109-113\">Source</a><a href=\"#method.next_chunk\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.next_chunk\" class=\"fn\">next_chunk</a>&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt;(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">N</a>], <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, N&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_next_chunk</code>)</span></div></span><div class='docblock'>Advances the iterator and returns an array containing the next <code>N</code> values. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.next_chunk\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#221-223\">Source</a></span><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.count\" class=\"fn\">count</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Consumes the iterator, counting the number of iterations and returning it. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.count\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.advance_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#296\">Source</a><a href=\"#method.advance_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.advance_by\" class=\"fn\">advance_by</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_advance_by</code>)</span></div></span><div class='docblock'>Advances the iterator by <code>n</code> elements. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.advance_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.step_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#397-399\">Source</a></span><a href=\"#method.step_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.step_by\" class=\"fn\">step_by</a>(self, step: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/step_by/struct.StepBy.html\" title=\"struct core::iter::adapters::step_by::StepBy\">StepBy</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"StepBy&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.step_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#468-471\">Source</a></span><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.chain\" class=\"fn\">chain</a>&lt;U&gt;(self, other: U) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/chain/struct.Chain.html\" title=\"struct core::iter::adapters::chain::Chain\">Chain</a>&lt;Self, &lt;U as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Chain&lt;Self, &lt;U as IntoIterator&gt;::IntoIter&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Takes two iterators and creates a new iterator over both in sequence. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#586-589\">Source</a></span><a href=\"#method.zip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.zip\" class=\"fn\">zip</a>&lt;U&gt;(self, other: U) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/zip/struct.Zip.html\" title=\"struct core::iter::adapters::zip::Zip\">Zip</a>&lt;Self, &lt;U as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Zip&lt;Self, &lt;U as IntoIterator&gt;::IntoIter&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,</div></h4></section></summary><div class='docblock'>‘Zips up’ two iterators into a single iterator of pairs. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.zip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersperse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#628-631\">Source</a><a href=\"#method.intersperse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.intersperse\" class=\"fn\">intersperse</a>(self, separator: Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/intersperse/struct.Intersperse.html\" title=\"struct core::iter::adapters::intersperse::Intersperse\">Intersperse</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Intersperse&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_intersperse</code>)</span></div></span><div class='docblock'>Creates a new iterator which places a copy of <code>separator</code> between adjacent\nitems of the original iterator. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.intersperse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersperse_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#686-689\">Source</a><a href=\"#method.intersperse_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.intersperse_with\" class=\"fn\">intersperse_with</a>&lt;G&gt;(self, separator: G) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/intersperse/struct.IntersperseWith.html\" title=\"struct core::iter::adapters::intersperse::IntersperseWith\">IntersperseWith</a>&lt;Self, G&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"IntersperseWith&lt;Self, G&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>() -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_intersperse</code>)</span></div></span><div class='docblock'>Creates a new iterator which places an item generated by <code>separator</code>\nbetween adjacent items of the original iterator. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.intersperse_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#745-748\">Source</a></span><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.map\" class=\"fn\">map</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/map/struct.Map.html\" title=\"struct core::iter::adapters::map::Map\">Map</a>&lt;Self, F&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Map&lt;Self, F&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Takes a closure and creates an iterator which calls that closure on each\nelement. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.for_each\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#790-793\">Source</a></span><a href=\"#method.for_each\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.for_each\" class=\"fn\">for_each</a>&lt;F&gt;(self, f: F)<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>),</div></h4></section></summary><div class='docblock'>Calls a closure on each element of an iterator. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.for_each\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#866-869\">Source</a></span><a href=\"#method.filter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.filter\" class=\"fn\">filter</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/filter/struct.Filter.html\" title=\"struct core::iter::adapters::filter::Filter\">Filter</a>&lt;Self, P&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Filter&lt;Self, P&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which uses a closure to determine if an element\nshould be yielded. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.filter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#911-914\">Source</a></span><a href=\"#method.filter_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.filter_map\" class=\"fn\">filter_map</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/filter_map/struct.FilterMap.html\" title=\"struct core::iter::adapters::filter_map::FilterMap\">FilterMap</a>&lt;Self, F&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"FilterMap&lt;Self, F&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator that both filters and maps. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.filter_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enumerate\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#958-960\">Source</a></span><a href=\"#method.enumerate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.enumerate\" class=\"fn\">enumerate</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/enumerate/struct.Enumerate.html\" title=\"struct core::iter::adapters::enumerate::Enumerate\">Enumerate</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Enumerate&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which gives the current iteration count as well as\nthe next value. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.enumerate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peekable\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#1029-1031\">Source</a></span><a href=\"#method.peekable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.peekable\" class=\"fn\">peekable</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/peekable/struct.Peekable.html\" title=\"struct core::iter::adapters::peekable::Peekable\">Peekable</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Peekable&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which can use the <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/peekable/struct.Peekable.html#method.peek\" title=\"method core::iter::adapters::peekable::Peekable::peek\"><code>peek</code></a> and <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/peekable/struct.Peekable.html#method.peek_mut\" title=\"method core::iter::adapters::peekable::Peekable::peek_mut\"><code>peek_mut</code></a> methods\nto look at the next element of the iterator without consuming it. See\ntheir documentation for more information. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.peekable\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#1094-1097\">Source</a></span><a href=\"#method.skip_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.skip_while\" class=\"fn\">skip_while</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/skip_while/struct.SkipWhile.html\" title=\"struct core::iter::adapters::skip_while::SkipWhile\">SkipWhile</a>&lt;Self, P&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"SkipWhile&lt;Self, P&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.skip\" title=\"method core::iter::traits::iterator::Iterator::skip\"><code>skip</code></a>s elements based on a predicate. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.skip_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#1175-1178\">Source</a></span><a href=\"#method.take_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.take_while\" class=\"fn\">take_while</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/take_while/struct.TakeWhile.html\" title=\"struct core::iter::adapters::take_while::TakeWhile\">TakeWhile</a>&lt;Self, P&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"TakeWhile&lt;Self, P&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that yields elements based on a predicate. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.take_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.57.0\">1.57.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#1263-1266\">Source</a></span><a href=\"#method.map_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.map_while\" class=\"fn\">map_while</a>&lt;B, P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/map_while/struct.MapWhile.html\" title=\"struct core::iter::adapters::map_while::MapWhile\">MapWhile</a>&lt;Self, P&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"MapWhile&lt;Self, P&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator that both yields elements based on a predicate and maps. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.map_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#1292-1294\">Source</a></span><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.skip\" class=\"fn\">skip</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/skip/struct.Skip.html\" title=\"struct core::iter::adapters::skip::Skip\">Skip</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Skip&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that skips the first <code>n</code> elements. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.skip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#1345-1347\">Source</a></span><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.take\" class=\"fn\">take</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/take/struct.Take.html\" title=\"struct core::iter::adapters::take::Take\">Take</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Take&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that yields the first <code>n</code> elements, or fewer\nif the underlying iterator ends sooner. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.take\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.scan\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#1392-1395\">Source</a></span><a href=\"#method.scan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.scan\" class=\"fn\">scan</a>&lt;St, B, F&gt;(self, initial_state: St, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/scan/struct.Scan.html\" title=\"struct core::iter::adapters::scan::Scan\">Scan</a>&lt;Self, St, F&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Scan&lt;Self, St, F&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;mut St</a>, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>An iterator adapter which, like <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.fold\" title=\"method core::iter::traits::iterator::Iterator::fold\"><code>fold</code></a>, holds internal state, but\nunlike <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.fold\" title=\"method core::iter::traits::iterator::Iterator::fold\"><code>fold</code></a>, produces a new iterator. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.scan\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flat_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#1430-1434\">Source</a></span><a href=\"#method.flat_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.flat_map\" class=\"fn\">flat_map</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/flatten/struct.FlatMap.html\" title=\"struct core::iter::adapters::flatten::FlatMap\">FlatMap</a>&lt;Self, U, F&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"FlatMap&lt;Self, U, F&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; U,</div></h4></section></summary><div class='docblock'>Creates an iterator that works like map, but flattens nested structure. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.flat_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flatten\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.29.0\">1.29.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#1514-1517\">Source</a></span><a href=\"#method.flatten\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.flatten\" class=\"fn\">flatten</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/flatten/struct.Flatten.html\" title=\"struct core::iter::adapters::flatten::Flatten\">Flatten</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Flatten&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that flattens nested structure. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.flatten\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_windows\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#1670-1673\">Source</a><a href=\"#method.map_windows\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.map_windows\" class=\"fn\">map_windows</a>&lt;F, R, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/map_windows/struct.MapWindows.html\" title=\"struct core::iter::adapters::map_windows::MapWindows\">MapWindows</a>&lt;Self, F, N&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"MapWindows&lt;Self, F, N&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;[Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">N</a>]) -&gt; R,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_map_windows</code>)</span></div></span><div class='docblock'>Calls the given function <code>f</code> for each contiguous window of size <code>N</code> over\n<code>self</code> and returns an iterator over the outputs of <code>f</code>. Like <a href=\"https://doc.rust-lang.org/1.85.0/std/primitive.slice.html#method.windows\" title=\"method slice::windows\"><code>slice::windows()</code></a>,\nthe windows during mapping overlap as well. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.map_windows\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fuse\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#1736-1738\">Source</a></span><a href=\"#method.fuse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.fuse\" class=\"fn\">fuse</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/fuse/struct.Fuse.html\" title=\"struct core::iter::adapters::fuse::Fuse\">Fuse</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Fuse&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which ends after the first <a href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.fuse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inspect\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#1820-1823\">Source</a></span><a href=\"#method.inspect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.inspect\" class=\"fn\">inspect</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/inspect/struct.Inspect.html\" title=\"struct core::iter::adapters::inspect::Inspect\">Inspect</a>&lt;Self, F&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Inspect&lt;Self, F&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>),</div></h4></section></summary><div class='docblock'>Does something with each element of an iterator, passing the value on. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.inspect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#1848-1850\">Source</a></span><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Borrows an iterator, rather than consuming it. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#1967-1969\">Source</a></span><a href=\"#method.collect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.collect\" class=\"fn\">collect</a>&lt;B&gt;(self) -&gt; B<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms an iterator into a collection. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.collect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_collect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#2045-2049\">Source</a><a href=\"#method.try_collect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.try_collect\" class=\"fn\">try_collect</a>&lt;B&gt;(\n    &amp;mut self,\n) -&gt; &lt;&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;B&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Residual.html#associatedtype.TryType\" title=\"type core::ops::try_trait::Residual::TryType\">TryType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>,\n    &lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;B&gt;,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html#associatedtype.Output\" title=\"type core::ops::try_trait::Try::Output\">Output</a>&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iterator_try_collect</code>)</span></div></span><div class='docblock'>Fallibly transforms an iterator into a collection, short circuiting if\na failure is encountered. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.try_collect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#2117-2119\">Source</a><a href=\"#method.collect_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.collect_into\" class=\"fn\">collect_into</a>&lt;E&gt;(self, collection: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;mut E</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_collect_into</code>)</span></div></span><div class='docblock'>Collects all the items from an iterator into a collection. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.collect_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partition\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#2149-2153\">Source</a></span><a href=\"#method.partition\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.partition\" class=\"fn\">partition</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(B, B)</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Consumes an iterator, creating two collections from it. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.partition\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partition_in_place\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#2211-2214\">Source</a><a href=\"#method.partition_in_place\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.partition_in_place\" class=\"fn\">partition_in_place</a>&lt;'a, T, P&gt;(self, predicate: P) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    T: 'a,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;'a mut T</a>&gt;,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_partition_in_place</code>)</span></div></span><div class='docblock'>Reorders the elements of this iterator <em>in-place</em> according to the given predicate,\nsuch that all those that return <code>true</code> precede all those that return <code>false</code>.\nReturns the number of <code>true</code> elements found. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.partition_in_place\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_partitioned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#2268-2271\">Source</a><a href=\"#method.is_partitioned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.is_partitioned\" class=\"fn\">is_partitioned</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_is_partitioned</code>)</span></div></span><div class='docblock'>Checks if the elements of this iterator are partitioned according to the given predicate,\nsuch that all those that return <code>true</code> precede all those that return <code>false</code>. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.is_partitioned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#2362-2366\">Source</a></span><a href=\"#method.try_fold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.try_fold\" class=\"fn\">try_fold</a>&lt;B, F, R&gt;(&amp;mut self, init: B, f: F) -&gt; R<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = B&gt;,</div></h4></section></summary><div class='docblock'>An iterator method that applies a function as long as it returns\nsuccessfully, producing a single, final value. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.try_fold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_for_each\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#2420-2424\">Source</a></span><a href=\"#method.try_for_each\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.try_for_each\" class=\"fn\">try_for_each</a>&lt;F, R&gt;(&amp;mut self, f: F) -&gt; R<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class='docblock'>An iterator method that applies a fallible function to each item in the\niterator, stopping at the first error and returning that error. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.try_for_each\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#2539-2542\">Source</a></span><a href=\"#method.fold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.fold\" class=\"fn\">fold</a>&lt;B, F&gt;(self, init: B, f: F) -&gt; B<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Folds every element into an accumulator by applying an operation,\nreturning the final result. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.fold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reduce\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#2576-2579\">Source</a></span><a href=\"#method.reduce\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.reduce\" class=\"fn\">reduce</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>,</div></h4></section></summary><div class='docblock'>Reduces the elements to a single one, by repeatedly applying a reducing\noperation. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.reduce\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reduce\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#2647-2653\">Source</a><a href=\"#method.try_reduce\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.try_reduce\" class=\"fn\">try_reduce</a>&lt;R&gt;(\n    &amp;mut self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n) -&gt; &lt;&lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html#associatedtype.Output\" title=\"type core::ops::try_trait::Try::Output\">Output</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Residual.html#associatedtype.TryType\" title=\"type core::ops::try_trait::Residual::TryType\">TryType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    &lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iterator_try_reduce</code>)</span></div></span><div class='docblock'>Reduces the elements to a single one by repeatedly applying a reducing operation. If the\nclosure returns a failure, the failure is propagated back to the caller immediately. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.try_reduce\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.all\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#2705-2708\">Source</a></span><a href=\"#method.all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.all\" class=\"fn\">all</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Tests if every element of the iterator matches a predicate. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.all\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.any\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#2758-2761\">Source</a></span><a href=\"#method.any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.any\" class=\"fn\">any</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Tests if any element of the iterator matches a predicate. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.any\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#2821-2824\">Source</a></span><a href=\"#method.find\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.find\" class=\"fn\">find</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Searches for an element of an iterator that satisfies a predicate. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.find\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.30.0\">1.30.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#2852-2855\">Source</a></span><a href=\"#method.find_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.find_map\" class=\"fn\">find_map</a>&lt;B, F&gt;(&amp;mut self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>Applies function to the elements of iterator and returns\nthe first non-none result. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.find_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_find\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#2910-2916\">Source</a><a href=\"#method.try_find\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.try_find\" class=\"fn\">try_find</a>&lt;R&gt;(\n    &amp;mut self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n) -&gt; &lt;&lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Residual.html#associatedtype.TryType\" title=\"type core::ops::try_trait::Residual::TryType\">TryType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>&gt;,\n    &lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_find</code>)</span></div></span><div class='docblock'>Applies function to the elements of iterator and returns\nthe first true result or the first error. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.try_find\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.position\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#2993-2996\">Source</a></span><a href=\"#method.position\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.position\" class=\"fn\">position</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Searches for an element in an iterator, returning its index. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.position\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rposition\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3058-3061\">Source</a></span><a href=\"#method.rposition\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.rposition\" class=\"fn\">rposition</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a>,</div></h4></section></summary><div class='docblock'>Searches for an element in an iterator from the right, returning its\nindex. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.rposition\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3107-3110\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.max\" class=\"fn\">max</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Returns the maximum element of an iterator. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3143-3146\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.min\" class=\"fn\">min</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Returns the minimum element of an iterator. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_by_key\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3165-3168\">Source</a></span><a href=\"#method.max_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by_key\" class=\"fn\">max_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Returns the element that gives the maximum value from the\nspecified function. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by_key\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3198-3201\">Source</a></span><a href=\"#method.max_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by\" class=\"fn\">max_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class='docblock'>Returns the element that gives the maximum value with respect to the\nspecified comparison function. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_by_key\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3225-3228\">Source</a></span><a href=\"#method.min_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by_key\" class=\"fn\">min_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Returns the element that gives the minimum value from the\nspecified function. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by_key\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3258-3261\">Source</a></span><a href=\"#method.min_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by\" class=\"fn\">min_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class='docblock'>Returns the element that gives the minimum value with respect to the\nspecified comparison function. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rev\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3295-3297\">Source</a></span><a href=\"#method.rev\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.rev\" class=\"fn\">rev</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/rev/struct.Rev.html\" title=\"struct core::iter::adapters::rev::Rev\">Rev</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Rev&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a>,</div></h4></section></summary><div class='docblock'>Reverses an iterator’s direction. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.rev\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unzip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3331-3335\">Source</a></span><a href=\"#method.unzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.unzip\" class=\"fn\">unzip</a>&lt;A, B, FromA, FromB&gt;(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB)</a><div class=\"where\">where\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B)</a>&gt;,</div></h4></section></summary><div class='docblock'>Converts an iterator of pairs into a pair of containers. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.unzip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.36.0\">1.36.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3362-3365\">Source</a></span><a href=\"#method.copied\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.copied\" class=\"fn\">copied</a>&lt;'a, T&gt;(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/copied/struct.Copied.html\" title=\"struct core::iter::adapters::copied::Copied\">Copied</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Copied&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator which copies all of its elements. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.copied\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3410-3413\">Source</a></span><a href=\"#method.cloned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.cloned\" class=\"fn\">cloned</a>&lt;'a, T&gt;(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/cloned/struct.Cloned.html\" title=\"struct core::iter::adapters::cloned::Cloned\">Cloned</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Cloned&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator which <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#tymethod.clone\" title=\"method core::clone::Clone::clone\"><code>clone</code></a>s all of its elements. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.cloned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cycle\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3442-3444\">Source</a></span><a href=\"#method.cycle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.cycle\" class=\"fn\">cycle</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/cycle/struct.Cycle.html\" title=\"struct core::iter::adapters::cycle::Cycle\">Cycle</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Cycle&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Repeats an iterator endlessly. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.cycle\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.array_chunks\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3485-3487\">Source</a><a href=\"#method.array_chunks\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.array_chunks\" class=\"fn\">array_chunks</a>&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt;(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/adapters/array_chunks/struct.ArrayChunks.html\" title=\"struct core::iter::adapters::array_chunks::ArrayChunks\">ArrayChunks</a>&lt;Self, N&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"ArrayChunks&lt;Self, N&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_array_chunks</code>)</span></div></span><div class='docblock'>Returns an iterator over <code>N</code> elements of the iterator at a time. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.array_chunks\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.11.0\">1.11.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3516-3519\">Source</a></span><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.sum\" class=\"fn\">sum</a>&lt;S&gt;(self) -&gt; S<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Sums the elements of an iterator. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.sum\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.11.0\">1.11.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3548-3551\">Source</a></span><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.product\" class=\"fn\">product</a>&lt;P&gt;(self) -&gt; P<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Iterates over the entire iterator, multiplying all the elements <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.product\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3569-3573\">Source</a></span><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.cmp\" class=\"fn\">cmp</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">Lexicographically</a> compares the elements of this <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> with those\nof another. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3596-3600\">Source</a><a href=\"#method.cmp_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.cmp_by\" class=\"fn\">cmp_by</a>&lt;I, F&gt;(self, other: I, cmp: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>)</span></div></span><div class='docblock'><a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">Lexicographically</a> compares the elements of this <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> with those\nof another with respect to the specified comparison function. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.cmp_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3652-3656\">Source</a></span><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp\" class=\"fn\">partial_cmp</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">Lexicographically</a> compares the <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\"><code>PartialOrd</code></a> elements of\nthis <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> with those of another. The comparison works like short-circuit\nevaluation, returning a result without comparing the remaining elements.\nAs soon as an order can be determined, the evaluation stops and a result is returned. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3688-3692\">Source</a><a href=\"#method.partial_cmp_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp_by\" class=\"fn\">partial_cmp_by</a>&lt;I, F&gt;(self, other: I, partial_cmp: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>)</span></div></span><div class='docblock'><a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">Lexicographically</a> compares the elements of this <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> with those\nof another with respect to the specified comparison function. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3721-3725\">Source</a></span><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.eq\" class=\"fn\">eq</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are equal to those of\nanother. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3744-3748\">Source</a><a href=\"#method.eq_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.eq_by\" class=\"fn\">eq_by</a>&lt;I, F&gt;(self, other: I, eq: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>)</span></div></span><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are equal to those of\nanother with respect to the specified equality function. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.eq_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3776-3780\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.ne\" class=\"fn\">ne</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are not equal to those of\nanother. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3797-3801\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.lt\" class=\"fn\">lt</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">lexicographically</a>\nless than those of another. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3818-3822\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.le\" class=\"fn\">le</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">lexicographically</a>\nless or equal to those of another. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3839-3843\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.gt\" class=\"fn\">gt</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">lexicographically</a>\ngreater than those of another. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3860-3864\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.ge\" class=\"fn\">ge</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">lexicographically</a>\ngreater than or equal to those of another. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sorted\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3889-3892\">Source</a></span><a href=\"#method.is_sorted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted\" class=\"fn\">is_sorted</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Checks if the elements of this iterator are sorted. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sorted_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3915-3918\">Source</a></span><a href=\"#method.is_sorted_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by\" class=\"fn\">is_sorted_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Checks if the elements of this iterator are sorted using the given comparator function. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sorted_by_key\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/iter/traits/iterator.rs.html#3959-3963\">Source</a></span><a href=\"#method.is_sorted_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by_key\" class=\"fn\">is_sorted_by_key</a>&lt;F, K&gt;(self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; K,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Checks if the elements of this iterator are sorted using the given key extraction\nfunction. <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by_key\">Read more</a></div></details></div></details>","Iterator","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Layer%3CS%3E-for-Box%3CL%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1761-1764\">Source</a><a href=\"#impl-Layer%3CS%3E-for-Box%3CL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, S&gt; <a class=\"trait\" href=\"bevy/log/tracing_subscriber/trait.Layer.html\" title=\"trait bevy::log::tracing_subscriber::Layer\">Layer</a>&lt;S&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;L&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"bevy/log/tracing_subscriber/trait.Layer.html\" title=\"trait bevy::log::tracing_subscriber::Layer\">Layer</a>&lt;S&gt;,\n    S: <a class=\"trait\" href=\"bevy/utils/tracing/trait.Subscriber.html\" title=\"trait bevy::utils::tracing::Subscriber\">Subscriber</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_register_dispatch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1766\">Source</a><a href=\"#method.on_register_dispatch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_register_dispatch\" class=\"fn\">on_register_dispatch</a>(&amp;self, subscriber: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Dispatch.html\" title=\"struct bevy::utils::tracing::Dispatch\">Dispatch</a>)</h4></section></summary><div class='docblock'>Performs late initialization when installing this layer as a\n<a href=\"bevy/utils/tracing/trait.Subscriber.html\" title=\"trait bevy::utils::tracing::Subscriber\"><code>Subscriber</code></a>. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_register_dispatch\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_layer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1766\">Source</a><a href=\"#method.on_layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_layer\" class=\"fn\">on_layer</a>(&amp;mut self, subscriber: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;mut S</a>)</h4></section></summary><div class='docblock'>Performs late initialization when attaching a <code>Layer</code> to a\n<a href=\"bevy/utils/tracing/trait.Subscriber.html\" title=\"trait bevy::utils::tracing::Subscriber\"><code>Subscriber</code></a>. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_layer\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_new_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1766\">Source</a><a href=\"#method.on_new_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_new_span\" class=\"fn\">on_new_span</a>(&amp;self, attrs: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/span/struct.Attributes.html\" title=\"struct bevy::utils::tracing::span::Attributes\">Attributes</a>&lt;'_&gt;, id: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that a new span was constructed with the given\n<code>Attributes</code> and <code>Id</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_callsite\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1766\">Source</a><a href=\"#method.register_callsite\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.register_callsite\" class=\"fn\">register_callsite</a>(&amp;self, metadata: &amp;'static <a class=\"struct\" href=\"bevy/utils/tracing/struct.Metadata.html\" title=\"struct bevy::utils::tracing::Metadata\">Metadata</a>&lt;'static&gt;) -&gt; <a class=\"struct\" href=\"bevy/utils/tracing/subscriber/struct.Interest.html\" title=\"struct bevy::utils::tracing::subscriber::Interest\">Interest</a></h4></section></summary><div class='docblock'>Registers a new callsite with this layer, returning whether or not\nthe layer is interested in being notified about the callsite, similarly\nto <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.register_callsite\" title=\"method bevy::utils::tracing::Subscriber::register_callsite\"><code>Subscriber::register_callsite</code></a>. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.register_callsite\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1766\">Source</a><a href=\"#method.enabled\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.enabled\" class=\"fn\">enabled</a>(&amp;self, metadata: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Metadata.html\" title=\"struct bevy::utils::tracing::Metadata\">Metadata</a>&lt;'_&gt;, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this layer is interested in a span or event with the\ngiven <code>metadata</code> in the current <a href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\"><code>Context</code></a>, similarly to\n<a href=\"bevy/utils/tracing/trait.Subscriber.html#tymethod.enabled\" title=\"method bevy::utils::tracing::Subscriber::enabled\"><code>Subscriber::enabled</code></a>. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_record\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1766\">Source</a><a href=\"#method.on_record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_record\" class=\"fn\">on_record</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, values: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/span/struct.Record.html\" title=\"struct bevy::utils::tracing::span::Record\">Record</a>&lt;'_&gt;, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that a span with the given <code>Id</code> recorded the given\n<code>values</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_follows_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1766\">Source</a><a href=\"#method.on_follows_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_follows_from\" class=\"fn\">on_follows_from</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, follows: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that a span with the ID <code>span</code> recorded that it\nfollows from the span with the ID <code>follows</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.event_enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1766\">Source</a><a href=\"#method.event_enabled\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.event_enabled\" class=\"fn\">event_enabled</a>(&amp;self, event: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Event.html\" title=\"struct bevy::utils::tracing::Event\">Event</a>&lt;'_&gt;, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Called before <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_event\" title=\"method tracing_subscriber::layer::Layer::on_event::on_event\"><code>on_event</code></a>, to determine if <code>on_event</code> should be called. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.event_enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1766\">Source</a><a href=\"#method.on_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_event\" class=\"fn\">on_event</a>(&amp;self, event: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Event.html\" title=\"struct bevy::utils::tracing::Event\">Event</a>&lt;'_&gt;, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that an event has occurred.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_enter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1766\">Source</a><a href=\"#method.on_enter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_enter\" class=\"fn\">on_enter</a>(&amp;self, id: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that a span with the given ID was entered.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_exit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1766\">Source</a><a href=\"#method.on_exit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_exit\" class=\"fn\">on_exit</a>(&amp;self, id: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that the span with the given ID was exited.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_close\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1766\">Source</a><a href=\"#method.on_close\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_close\" class=\"fn\">on_close</a>(&amp;self, id: <a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that the span with the given ID has been closed.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_id_change\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1766\">Source</a><a href=\"#method.on_id_change\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_id_change\" class=\"fn\">on_id_change</a>(&amp;self, old: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, new: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that a span ID has been cloned, and that the\nsubscriber returned a different ID.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and_then\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1040-1043\">Source</a><a href=\"#method.and_then\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.and_then\" class=\"fn\">and_then</a>&lt;L&gt;(self, layer: L) -&gt; <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Layered.html\" title=\"struct bevy::log::tracing_subscriber::layer::Layered\">Layered</a>&lt;L, Self, S&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"bevy/log/tracing_subscriber/trait.Layer.html\" title=\"trait bevy::log::tracing_subscriber::Layer\">Layer</a>&lt;S&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Composes this layer around the given <code>Layer</code>, returning a <code>Layered</code>\nstruct implementing <code>Layer</code>. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.and_then\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_subscriber\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1092-1094\">Source</a><a href=\"#method.with_subscriber\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.with_subscriber\" class=\"fn\">with_subscriber</a>(self, inner: S) -&gt; <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Layered.html\" title=\"struct bevy::log::tracing_subscriber::layer::Layered\">Layered</a>&lt;Self, S&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Composes this <code>Layer</code> with the given <a href=\"bevy/utils/tracing/trait.Subscriber.html\" title=\"trait bevy::utils::tracing::Subscriber\"><code>Subscriber</code></a>, returning a\n<code>Layered</code> struct that implements <a href=\"bevy/utils/tracing/trait.Subscriber.html\" title=\"trait bevy::utils::tracing::Subscriber\"><code>Subscriber</code></a>. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.with_subscriber\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_filter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1111-1114\">Source</a><a href=\"#method.with_filter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.with_filter\" class=\"fn\">with_filter</a>&lt;F&gt;(self, filter: F) -&gt; <a class=\"struct\" href=\"bevy/log/tracing_subscriber/filter/struct.Filtered.html\" title=\"struct bevy::log::tracing_subscriber::filter::Filtered\">Filtered</a>&lt;Self, F, S&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"bevy/log/tracing_subscriber/layer/trait.Filter.html\" title=\"trait bevy::log::tracing_subscriber::layer::Filter\">Filter</a>&lt;S&gt;,</div></h4></section></summary><div class='docblock'>Combines <code>self</code> with a <a href=\"bevy/log/tracing_subscriber/layer/trait.Filter.html\" title=\"trait bevy::log::tracing_subscriber::layer::Filter\"><code>Filter</code></a>, returning a <a href=\"bevy/log/tracing_subscriber/filter/struct.Filtered.html\" title=\"struct bevy::log::tracing_subscriber::filter::Filtered\"><code>Filtered</code></a> layer. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.with_filter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.boxed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1235-1239\">Source</a><a href=\"#method.boxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.boxed\" class=\"fn\">boxed</a>(self) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/log/tracing_subscriber/trait.Layer.html\" title=\"trait bevy::log::tracing_subscriber::Layer\">Layer</a>&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"bevy/log/tracing_subscriber/trait.Layer.html\" title=\"trait bevy::log::tracing_subscriber::Layer\">Layer</a>&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    S: <a class=\"trait\" href=\"bevy/utils/tracing/trait.Subscriber.html\" title=\"trait bevy::utils::tracing::Subscriber\">Subscriber</a>,</div></h4></section></summary><div class='docblock'>Erases the type of this <a href=\"bevy/log/tracing_subscriber/trait.Layer.html\" title=\"trait bevy::log::tracing_subscriber::Layer\"><code>Layer</code></a>, returning a <a href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\"><code>Box</code></a>ed <code>dyn Layer</code> trait object. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.boxed\">Read more</a></div></details></div></details>","Layer<S>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Layer%3CS%3E-for-Box%3Cdyn+Layer%3CS%3E+%2B+Send+%2B+Sync%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1769-1771\">Source</a><a href=\"#impl-Layer%3CS%3E-for-Box%3Cdyn+Layer%3CS%3E+%2B+Send+%2B+Sync%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"bevy/log/tracing_subscriber/trait.Layer.html\" title=\"trait bevy::log::tracing_subscriber::Layer\">Layer</a>&lt;S&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/log/tracing_subscriber/trait.Layer.html\" title=\"trait bevy::log::tracing_subscriber::Layer\">Layer</a>&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"bevy/utils/tracing/trait.Subscriber.html\" title=\"trait bevy::utils::tracing::Subscriber\">Subscriber</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_register_dispatch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1773\">Source</a><a href=\"#method.on_register_dispatch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_register_dispatch\" class=\"fn\">on_register_dispatch</a>(&amp;self, subscriber: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Dispatch.html\" title=\"struct bevy::utils::tracing::Dispatch\">Dispatch</a>)</h4></section></summary><div class='docblock'>Performs late initialization when installing this layer as a\n<a href=\"bevy/utils/tracing/trait.Subscriber.html\" title=\"trait bevy::utils::tracing::Subscriber\"><code>Subscriber</code></a>. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_register_dispatch\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_layer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1773\">Source</a><a href=\"#method.on_layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_layer\" class=\"fn\">on_layer</a>(&amp;mut self, subscriber: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;mut S</a>)</h4></section></summary><div class='docblock'>Performs late initialization when attaching a <code>Layer</code> to a\n<a href=\"bevy/utils/tracing/trait.Subscriber.html\" title=\"trait bevy::utils::tracing::Subscriber\"><code>Subscriber</code></a>. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_layer\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_new_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1773\">Source</a><a href=\"#method.on_new_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_new_span\" class=\"fn\">on_new_span</a>(&amp;self, attrs: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/span/struct.Attributes.html\" title=\"struct bevy::utils::tracing::span::Attributes\">Attributes</a>&lt;'_&gt;, id: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that a new span was constructed with the given\n<code>Attributes</code> and <code>Id</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_callsite\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1773\">Source</a><a href=\"#method.register_callsite\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.register_callsite\" class=\"fn\">register_callsite</a>(&amp;self, metadata: &amp;'static <a class=\"struct\" href=\"bevy/utils/tracing/struct.Metadata.html\" title=\"struct bevy::utils::tracing::Metadata\">Metadata</a>&lt;'static&gt;) -&gt; <a class=\"struct\" href=\"bevy/utils/tracing/subscriber/struct.Interest.html\" title=\"struct bevy::utils::tracing::subscriber::Interest\">Interest</a></h4></section></summary><div class='docblock'>Registers a new callsite with this layer, returning whether or not\nthe layer is interested in being notified about the callsite, similarly\nto <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.register_callsite\" title=\"method bevy::utils::tracing::Subscriber::register_callsite\"><code>Subscriber::register_callsite</code></a>. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.register_callsite\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1773\">Source</a><a href=\"#method.enabled\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.enabled\" class=\"fn\">enabled</a>(&amp;self, metadata: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Metadata.html\" title=\"struct bevy::utils::tracing::Metadata\">Metadata</a>&lt;'_&gt;, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this layer is interested in a span or event with the\ngiven <code>metadata</code> in the current <a href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\"><code>Context</code></a>, similarly to\n<a href=\"bevy/utils/tracing/trait.Subscriber.html#tymethod.enabled\" title=\"method bevy::utils::tracing::Subscriber::enabled\"><code>Subscriber::enabled</code></a>. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_record\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1773\">Source</a><a href=\"#method.on_record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_record\" class=\"fn\">on_record</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, values: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/span/struct.Record.html\" title=\"struct bevy::utils::tracing::span::Record\">Record</a>&lt;'_&gt;, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that a span with the given <code>Id</code> recorded the given\n<code>values</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_follows_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1773\">Source</a><a href=\"#method.on_follows_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_follows_from\" class=\"fn\">on_follows_from</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, follows: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that a span with the ID <code>span</code> recorded that it\nfollows from the span with the ID <code>follows</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.event_enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1773\">Source</a><a href=\"#method.event_enabled\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.event_enabled\" class=\"fn\">event_enabled</a>(&amp;self, event: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Event.html\" title=\"struct bevy::utils::tracing::Event\">Event</a>&lt;'_&gt;, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Called before <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_event\" title=\"method tracing_subscriber::layer::Layer::on_event::on_event\"><code>on_event</code></a>, to determine if <code>on_event</code> should be called. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.event_enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1773\">Source</a><a href=\"#method.on_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_event\" class=\"fn\">on_event</a>(&amp;self, event: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Event.html\" title=\"struct bevy::utils::tracing::Event\">Event</a>&lt;'_&gt;, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that an event has occurred.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_enter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1773\">Source</a><a href=\"#method.on_enter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_enter\" class=\"fn\">on_enter</a>(&amp;self, id: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that a span with the given ID was entered.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_exit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1773\">Source</a><a href=\"#method.on_exit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_exit\" class=\"fn\">on_exit</a>(&amp;self, id: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that the span with the given ID was exited.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_close\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1773\">Source</a><a href=\"#method.on_close\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_close\" class=\"fn\">on_close</a>(&amp;self, id: <a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that the span with the given ID has been closed.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_id_change\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1773\">Source</a><a href=\"#method.on_id_change\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.on_id_change\" class=\"fn\">on_id_change</a>(&amp;self, old: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, new: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, ctx: <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Context.html\" title=\"struct bevy::log::tracing_subscriber::layer::Context\">Context</a>&lt;'_, S&gt;)</h4></section></summary><div class='docblock'>Notifies this layer that a span ID has been cloned, and that the\nsubscriber returned a different ID.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and_then\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1040-1043\">Source</a><a href=\"#method.and_then\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.and_then\" class=\"fn\">and_then</a>&lt;L&gt;(self, layer: L) -&gt; <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Layered.html\" title=\"struct bevy::log::tracing_subscriber::layer::Layered\">Layered</a>&lt;L, Self, S&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"bevy/log/tracing_subscriber/trait.Layer.html\" title=\"trait bevy::log::tracing_subscriber::Layer\">Layer</a>&lt;S&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Composes this layer around the given <code>Layer</code>, returning a <code>Layered</code>\nstruct implementing <code>Layer</code>. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.and_then\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_subscriber\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1092-1094\">Source</a><a href=\"#method.with_subscriber\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.with_subscriber\" class=\"fn\">with_subscriber</a>(self, inner: S) -&gt; <a class=\"struct\" href=\"bevy/log/tracing_subscriber/layer/struct.Layered.html\" title=\"struct bevy::log::tracing_subscriber::layer::Layered\">Layered</a>&lt;Self, S&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Composes this <code>Layer</code> with the given <a href=\"bevy/utils/tracing/trait.Subscriber.html\" title=\"trait bevy::utils::tracing::Subscriber\"><code>Subscriber</code></a>, returning a\n<code>Layered</code> struct that implements <a href=\"bevy/utils/tracing/trait.Subscriber.html\" title=\"trait bevy::utils::tracing::Subscriber\"><code>Subscriber</code></a>. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.with_subscriber\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_filter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1111-1114\">Source</a><a href=\"#method.with_filter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.with_filter\" class=\"fn\">with_filter</a>&lt;F&gt;(self, filter: F) -&gt; <a class=\"struct\" href=\"bevy/log/tracing_subscriber/filter/struct.Filtered.html\" title=\"struct bevy::log::tracing_subscriber::filter::Filtered\">Filtered</a>&lt;Self, F, S&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"bevy/log/tracing_subscriber/layer/trait.Filter.html\" title=\"trait bevy::log::tracing_subscriber::layer::Filter\">Filter</a>&lt;S&gt;,</div></h4></section></summary><div class='docblock'>Combines <code>self</code> with a <a href=\"bevy/log/tracing_subscriber/layer/trait.Filter.html\" title=\"trait bevy::log::tracing_subscriber::layer::Filter\"><code>Filter</code></a>, returning a <a href=\"bevy/log/tracing_subscriber/filter/struct.Filtered.html\" title=\"struct bevy::log::tracing_subscriber::filter::Filtered\"><code>Filtered</code></a> layer. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.with_filter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.boxed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_subscriber/layer/mod.rs.html#1235-1239\">Source</a><a href=\"#method.boxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.boxed\" class=\"fn\">boxed</a>(self) -&gt; <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy/log/tracing_subscriber/trait.Layer.html\" title=\"trait bevy::log::tracing_subscriber::Layer\">Layer</a>&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"bevy/log/tracing_subscriber/trait.Layer.html\" title=\"trait bevy::log::tracing_subscriber::Layer\">Layer</a>&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    S: <a class=\"trait\" href=\"bevy/utils/tracing/trait.Subscriber.html\" title=\"trait bevy::utils::tracing::Subscriber\">Subscriber</a>,</div></h4></section></summary><div class='docblock'>Erases the type of this <a href=\"bevy/log/tracing_subscriber/trait.Layer.html\" title=\"trait bevy::log::tracing_subscriber::Layer\"><code>Layer</code></a>, returning a <a href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\"><code>Box</code></a>ed <code>dyn Layer</code> trait object. <a href=\"bevy/log/tracing_subscriber/trait.Layer.html#method.boxed\">Read more</a></div></details></div></details>","Layer<S>","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Log-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/log/lib.rs.html#1236-1238\">Source</a><a href=\"#impl-Log-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"log/trait.Log.html\" title=\"trait log::Log\">Log</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"log/trait.Log.html\" title=\"trait log::Log\">Log</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/log/lib.rs.html#1240\">Source</a><a href=\"#method.enabled\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"log/trait.Log.html#tymethod.enabled\" class=\"fn\">enabled</a>(&amp;self, metadata: &amp;<a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determines if a log message with the specified metadata would be\nlogged. <a href=\"log/trait.Log.html#tymethod.enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/log/lib.rs.html#1244\">Source</a><a href=\"#method.log\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"log/trait.Log.html#tymethod.log\" class=\"fn\">log</a>(&amp;self, record: &amp;<a class=\"struct\" href=\"log/struct.Record.html\" title=\"struct log::Record\">Record</a>&lt;'_&gt;)</h4></section></summary><div class='docblock'>Logs the <code>Record</code>. <a href=\"log/trait.Log.html#tymethod.log\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/log/lib.rs.html#1247\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"log/trait.Log.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;self)</h4></section></summary><div class='docblock'>Flushes any buffered records. <a href=\"log/trait.Log.html#tymethod.flush\">Read more</a></div></details></div></details>","Log","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1873\">Source</a></span><a href=\"#impl-Ord-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1875\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/cmp.rs.html#980-982\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/cmp.rs.html#1001-1003\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/cmp.rs.html#1027-1029\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1837\">Source</a></span><a href=\"#impl-PartialEq-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1839\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1843\">Source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1849\">Source</a></span><a href=\"#impl-PartialOrd-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1851\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1855\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1859\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1863\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1867\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details></div></details>","PartialOrd","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pointer-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1957\">Source</a></span><a href=\"#impl-Pointer-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1958\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Pointer.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Pointer.html#tymethod.fmt\">Read more</a></div></details></div></details>","Pointer","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Read-for-Box%3CR%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#121\">Source</a></span><a href=\"#impl-Read-for-Box%3CR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;R&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#123\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Pull some bytes from this source into the specified buffer, returning\nhow many bytes were read. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#128\">Source</a><a href=\"#method.read_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.read_buf\" class=\"fn\">read_buf</a>(&amp;mut self, cursor: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/io/borrowed_buf/struct.BorrowedCursor.html\" title=\"struct core::io::borrowed_buf::BorrowedCursor\">BorrowedCursor</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>read_buf</code>)</span></div></span><div class='docblock'>Pull some bytes from this source into the specified buffer. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.read_buf\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#133\">Source</a><a href=\"#method.read_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.read_vectored\" class=\"fn\">read_vectored</a>(&amp;mut self, bufs: &amp;mut [<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/io/struct.IoSliceMut.html\" title=\"struct std::io::IoSliceMut\">IoSliceMut</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Like <code>read</code>, except that it reads into a slice of buffers. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.read_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_read_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#138\">Source</a><a href=\"#method.is_read_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.is_read_vectored\" class=\"fn\">is_read_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>can_vector</code>)</span></div></span><div class='docblock'>Determines if this <code>Read</code>er has an efficient <code>read_vectored</code>\nimplementation. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.is_read_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_to_end\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#143\">Source</a><a href=\"#method.read_to_end\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.read_to_end\" class=\"fn\">read_to_end</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes until EOF in this source, placing them into <code>buf</code>. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.read_to_end\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_to_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#148\">Source</a><a href=\"#method.read_to_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.read_to_string\" class=\"fn\">read_to_string</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes until EOF in this source, appending them to <code>buf</code>. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.read_to_string\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#153\">Source</a><a href=\"#method.read_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.read_exact\" class=\"fn\">read_exact</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads the exact number of bytes required to fill <code>buf</code>. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.read_exact\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_buf_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#157\">Source</a><a href=\"#method.read_buf_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.read_buf_exact\" class=\"fn\">read_buf_exact</a>(&amp;mut self, cursor: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/io/borrowed_buf/struct.BorrowedCursor.html\" title=\"struct core::io::borrowed_buf::BorrowedCursor\">BorrowedCursor</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>read_buf</code>)</span></div></span><div class='docblock'>Reads the exact number of bytes required to fill <code>cursor</code>. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.read_buf_exact\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/mod.rs.html#1049-1051\">Source</a></span><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates a “by reference” adaptor for this instance of <code>Read</code>. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bytes\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/mod.rs.html#1092-1094\">Source</a></span><a href=\"#method.bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.bytes\" class=\"fn\">bytes</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/io/struct.Bytes.html\" title=\"struct std::io::Bytes\">Bytes</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Bytes&lt;Self&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms this <code>Read</code> instance to an <a href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> over its bytes. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/mod.rs.html#1130-1132\">Source</a></span><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.chain\" class=\"fn\">chain</a>&lt;R&gt;(self, next: R) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/io/struct.Chain.html\" title=\"struct std::io::Chain\">Chain</a>&lt;Self, R&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adapter which will chain this stream with another. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/mod.rs.html#1169-1171\">Source</a></span><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.take\" class=\"fn\">take</a>(self, limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/io/struct.Take.html\" title=\"struct std::io::Take\">Take</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adapter which will read at most <code>limit</code> bytes from it. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Read.html#method.take\">Read more</a></div></details></div></details>","Read","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ReadFrom-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/encase/types/wrapper.rs.html#116\">Source</a><a href=\"#impl-ReadFrom-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy/render/render_resource/encase/internal/trait.ReadFrom.html\" title=\"trait bevy::render::render_resource::encase::internal::ReadFrom\">ReadFrom</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/render/render_resource/encase/internal/trait.ReadFrom.html\" title=\"trait bevy::render::render_resource::encase::internal::ReadFrom\">ReadFrom</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.read_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/encase/types/wrapper.rs.html#116\">Source</a><a href=\"#method.read_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/encase/internal/trait.ReadFrom.html#tymethod.read_from\" class=\"fn\">read_from</a>&lt;B&gt;(&amp;mut self, reader: &amp;mut <a class=\"struct\" href=\"bevy/render/render_resource/encase/internal/struct.Reader.html\" title=\"struct bevy::render::render_resource::encase::internal::Reader\">Reader</a>&lt;B&gt;)<div class=\"where\">where\n    B: <a class=\"trait\" href=\"bevy/render/render_resource/encase/internal/trait.BufferRef.html\" title=\"trait bevy::render::render_resource::encase::internal::BufferRef\">BufferRef</a>,</div></h4></section></div></details>","ReadFrom","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RequestConnection-for-Box%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#impl-RequestConnection-for-Box%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"x11rb/connection/trait.RequestConnection.html\" title=\"trait x11rb::connection::RequestConnection\">RequestConnection</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"x11rb/connection/trait.RequestConnection.html\" title=\"trait x11rb::connection::RequestConnection\">RequestConnection</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Buf\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#associatedtype.Buf\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"x11rb/connection/trait.RequestConnection.html#associatedtype.Buf\" class=\"associatedtype\">Buf</a> = &lt;C as <a class=\"trait\" href=\"x11rb/connection/trait.RequestConnection.html\" title=\"trait x11rb::connection::RequestConnection\">RequestConnection</a>&gt;::<a class=\"associatedtype\" href=\"x11rb/connection/trait.RequestConnection.html#associatedtype.Buf\" title=\"type x11rb::connection::RequestConnection::Buf\">Buf</a></h4></section></summary><div class='docblock'>Type used as buffer to store raw replies or events before\nthey are parsed.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_request_with_reply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.send_request_with_reply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.send_request_with_reply\" class=\"fn\">send_request_with_reply</a>&lt;R&gt;(\n    &amp;self,\n    bufs: &amp;[<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;],\n    fds: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/os/fd/owned/struct.OwnedFd.html\" title=\"struct std::os::fd::owned::OwnedFd\">OwnedFd</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"x11rb/cookie/struct.Cookie.html\" title=\"struct x11rb::cookie::Cookie\">Cookie</a>&lt;'_, <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt;, R&gt;, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.TryParse.html\" title=\"trait x11rb_protocol::x11_utils::TryParse\">TryParse</a>,</div></h4></section></summary><div class='docblock'>Send a request with a reply to the server. <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.send_request_with_reply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_trait_request_with_reply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.send_trait_request_with_reply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#method.send_trait_request_with_reply\" class=\"fn\">send_trait_request_with_reply</a>&lt;R&gt;(\n    &amp;self,\n    request: R,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"x11rb/cookie/struct.Cookie.html\" title=\"struct x11rb::cookie::Cookie\">Cookie</a>&lt;'_, <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt;, &lt;R as <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.ReplyRequest.html\" title=\"trait x11rb_protocol::x11_utils::ReplyRequest\">ReplyRequest</a>&gt;::<a class=\"associatedtype\" href=\"x11rb_protocol/x11_utils/trait.ReplyRequest.html#associatedtype.Reply\" title=\"type x11rb_protocol::x11_utils::ReplyRequest::Reply\">Reply</a>&gt;, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.ReplyRequest.html\" title=\"trait x11rb_protocol::x11_utils::ReplyRequest\">ReplyRequest</a>,</div></h4></section></summary><div class='docblock'>Send a request with a reply to the server. <a href=\"x11rb/connection/trait.RequestConnection.html#method.send_trait_request_with_reply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_request_with_reply_with_fds\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.send_request_with_reply_with_fds\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.send_request_with_reply_with_fds\" class=\"fn\">send_request_with_reply_with_fds</a>&lt;R&gt;(\n    &amp;self,\n    bufs: &amp;[<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;],\n    fds: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/os/fd/owned/struct.OwnedFd.html\" title=\"struct std::os::fd::owned::OwnedFd\">OwnedFd</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"x11rb/cookie/struct.CookieWithFds.html\" title=\"struct x11rb::cookie::CookieWithFds\">CookieWithFds</a>&lt;'_, <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt;, R&gt;, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.TryParseFd.html\" title=\"trait x11rb_protocol::x11_utils::TryParseFd\">TryParseFd</a>,</div></h4></section></summary><div class='docblock'>Send a request with a reply containing file descriptors to the server. <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.send_request_with_reply_with_fds\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_trait_request_with_reply_with_fds\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.send_trait_request_with_reply_with_fds\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#method.send_trait_request_with_reply_with_fds\" class=\"fn\">send_trait_request_with_reply_with_fds</a>&lt;R&gt;(\n    &amp;self,\n    request: R,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"x11rb/cookie/struct.CookieWithFds.html\" title=\"struct x11rb::cookie::CookieWithFds\">CookieWithFds</a>&lt;'_, <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt;, &lt;R as <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.ReplyFDsRequest.html\" title=\"trait x11rb_protocol::x11_utils::ReplyFDsRequest\">ReplyFDsRequest</a>&gt;::<a class=\"associatedtype\" href=\"x11rb_protocol/x11_utils/trait.ReplyFDsRequest.html#associatedtype.Reply\" title=\"type x11rb_protocol::x11_utils::ReplyFDsRequest::Reply\">Reply</a>&gt;, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.ReplyFDsRequest.html\" title=\"trait x11rb_protocol::x11_utils::ReplyFDsRequest\">ReplyFDsRequest</a>,</div></h4></section></summary><div class='docblock'>Send a request with a reply containing file descriptors to the server. <a href=\"x11rb/connection/trait.RequestConnection.html#method.send_trait_request_with_reply_with_fds\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_request_without_reply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.send_request_without_reply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.send_request_without_reply\" class=\"fn\">send_request_without_reply</a>(\n    &amp;self,\n    bufs: &amp;[<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;],\n    fds: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/os/fd/owned/struct.OwnedFd.html\" title=\"struct std::os::fd::owned::OwnedFd\">OwnedFd</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"x11rb/cookie/struct.VoidCookie.html\" title=\"struct x11rb::cookie::VoidCookie\">VoidCookie</a>&lt;'_, <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt;&gt;, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;</h4></section></summary><div class='docblock'>Send a request without a reply to the server. <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.send_request_without_reply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_trait_request_without_reply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.send_trait_request_without_reply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#method.send_trait_request_without_reply\" class=\"fn\">send_trait_request_without_reply</a>&lt;R&gt;(\n    &amp;self,\n    request: R,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"x11rb/cookie/struct.VoidCookie.html\" title=\"struct x11rb::cookie::VoidCookie\">VoidCookie</a>&lt;'_, <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt;&gt;, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.VoidRequest.html\" title=\"trait x11rb_protocol::x11_utils::VoidRequest\">VoidRequest</a>,</div></h4></section></summary><div class='docblock'>Send a request without a reply to the server. <a href=\"x11rb/connection/trait.RequestConnection.html#method.send_trait_request_without_reply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.discard_reply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.discard_reply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.discard_reply\" class=\"fn\">discard_reply</a>(&amp;self, sequence: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>, kind: <a class=\"enum\" href=\"x11rb/connection/enum.RequestKind.html\" title=\"enum x11rb::connection::RequestKind\">RequestKind</a>, mode: <a class=\"enum\" href=\"x11rb_protocol/enum.DiscardMode.html\" title=\"enum x11rb_protocol::DiscardMode\">DiscardMode</a>)</h4></section></summary><div class='docblock'>A reply to an error should be discarded. <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.discard_reply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prefetch_extension_information\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.prefetch_extension_information\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.prefetch_extension_information\" class=\"fn\">prefetch_extension_information</a>(\n    &amp;self,\n    extension_name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;</h4></section></summary><div class='docblock'>Prefetches information about an extension. <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.prefetch_extension_information\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extension_information\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.extension_information\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.extension_information\" class=\"fn\">extension_information</a>(\n    &amp;self,\n    extension_name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/x11_utils/struct.ExtensionInformation.html\" title=\"struct x11rb_protocol::x11_utils::ExtensionInformation\">ExtensionInformation</a>&gt;, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;</h4></section></summary><div class='docblock'>Get information about an extension. <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.extension_information\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_reply_or_error\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.wait_for_reply_or_error\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#method.wait_for_reply_or_error\" class=\"fn\">wait_for_reply_or_error</a>(\n    &amp;self,\n    sequence: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt; as <a class=\"trait\" href=\"x11rb/connection/trait.RequestConnection.html\" title=\"trait x11rb::connection::RequestConnection\">RequestConnection</a>&gt;::<a class=\"associatedtype\" href=\"x11rb/connection/trait.RequestConnection.html#associatedtype.Buf\" title=\"type x11rb::connection::RequestConnection::Buf\">Buf</a>, <a class=\"enum\" href=\"x11rb/errors/enum.ReplyError.html\" title=\"enum x11rb::errors::ReplyError\">ReplyError</a>&gt;</h4></section></summary><div class='docblock'>Wait for the reply to a request. <a href=\"x11rb/connection/trait.RequestConnection.html#method.wait_for_reply_or_error\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_reply_or_raw_error\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.wait_for_reply_or_raw_error\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.wait_for_reply_or_raw_error\" class=\"fn\">wait_for_reply_or_raw_error</a>(\n    &amp;self,\n    sequence: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"x11rb/connection/enum.ReplyOrError.html\" title=\"enum x11rb::connection::ReplyOrError\">ReplyOrError</a>&lt;&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt; as <a class=\"trait\" href=\"x11rb/connection/trait.RequestConnection.html\" title=\"trait x11rb::connection::RequestConnection\">RequestConnection</a>&gt;::<a class=\"associatedtype\" href=\"x11rb/connection/trait.RequestConnection.html#associatedtype.Buf\" title=\"type x11rb::connection::RequestConnection::Buf\">Buf</a>&gt;, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;</h4></section></summary><div class='docblock'>Wait for the reply to a request. <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.wait_for_reply_or_raw_error\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_reply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.wait_for_reply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.wait_for_reply\" class=\"fn\">wait_for_reply</a>(\n    &amp;self,\n    sequence: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt; as <a class=\"trait\" href=\"x11rb/connection/trait.RequestConnection.html\" title=\"trait x11rb::connection::RequestConnection\">RequestConnection</a>&gt;::<a class=\"associatedtype\" href=\"x11rb/connection/trait.RequestConnection.html#associatedtype.Buf\" title=\"type x11rb::connection::RequestConnection::Buf\">Buf</a>&gt;, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;</h4></section></summary><div class='docblock'>Wait for the reply to a request. <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.wait_for_reply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_reply_with_fds\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.wait_for_reply_with_fds\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#method.wait_for_reply_with_fds\" class=\"fn\">wait_for_reply_with_fds</a>(\n    &amp;self,\n    sequence: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt; as <a class=\"trait\" href=\"x11rb/connection/trait.RequestConnection.html\" title=\"trait x11rb::connection::RequestConnection\">RequestConnection</a>&gt;::<a class=\"associatedtype\" href=\"x11rb/connection/trait.RequestConnection.html#associatedtype.Buf\" title=\"type x11rb::connection::RequestConnection::Buf\">Buf</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/os/fd/owned/struct.OwnedFd.html\" title=\"struct std::os::fd::owned::OwnedFd\">OwnedFd</a>&gt;), <a class=\"enum\" href=\"x11rb/errors/enum.ReplyError.html\" title=\"enum x11rb::errors::ReplyError\">ReplyError</a>&gt;</h4></section></summary><div class='docblock'>Wait for the reply to a request that has FDs. <a href=\"x11rb/connection/trait.RequestConnection.html#method.wait_for_reply_with_fds\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_reply_with_fds_raw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.wait_for_reply_with_fds_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.wait_for_reply_with_fds_raw\" class=\"fn\">wait_for_reply_with_fds_raw</a>(\n    &amp;self,\n    sequence: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"x11rb/connection/enum.ReplyOrError.html\" title=\"enum x11rb::connection::ReplyOrError\">ReplyOrError</a>&lt;(&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt; as <a class=\"trait\" href=\"x11rb/connection/trait.RequestConnection.html\" title=\"trait x11rb::connection::RequestConnection\">RequestConnection</a>&gt;::<a class=\"associatedtype\" href=\"x11rb/connection/trait.RequestConnection.html#associatedtype.Buf\" title=\"type x11rb::connection::RequestConnection::Buf\">Buf</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/os/fd/owned/struct.OwnedFd.html\" title=\"struct std::os::fd::owned::OwnedFd\">OwnedFd</a>&gt;), &lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt; as <a class=\"trait\" href=\"x11rb/connection/trait.RequestConnection.html\" title=\"trait x11rb::connection::RequestConnection\">RequestConnection</a>&gt;::<a class=\"associatedtype\" href=\"x11rb/connection/trait.RequestConnection.html#associatedtype.Buf\" title=\"type x11rb::connection::RequestConnection::Buf\">Buf</a>&gt;, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;</h4></section></summary><div class='docblock'>Wait for the reply to a request that has FDs. <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.wait_for_reply_with_fds_raw\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_for_error\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.check_for_error\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#method.check_for_error\" class=\"fn\">check_for_error</a>(&amp;self, sequence: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"x11rb/errors/enum.ReplyError.html\" title=\"enum x11rb::errors::ReplyError\">ReplyError</a>&gt;</h4></section></summary><div class='docblock'>Check whether a request that does not have a reply caused an X11 error. <a href=\"x11rb/connection/trait.RequestConnection.html#method.check_for_error\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_for_raw_error\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.check_for_raw_error\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.check_for_raw_error\" class=\"fn\">check_for_raw_error</a>(\n    &amp;self,\n    sequence: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;C&gt; as <a class=\"trait\" href=\"x11rb/connection/trait.RequestConnection.html\" title=\"trait x11rb::connection::RequestConnection\">RequestConnection</a>&gt;::<a class=\"associatedtype\" href=\"x11rb/connection/trait.RequestConnection.html#associatedtype.Buf\" title=\"type x11rb::connection::RequestConnection::Buf\">Buf</a>&gt;, <a class=\"enum\" href=\"x11rb/errors/enum.ConnectionError.html\" title=\"enum x11rb::errors::ConnectionError\">ConnectionError</a>&gt;</h4></section></summary><div class='docblock'>Check whether a request that does not have a reply caused an X11 error. <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.check_for_raw_error\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prefetch_maximum_request_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.prefetch_maximum_request_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.prefetch_maximum_request_bytes\" class=\"fn\">prefetch_maximum_request_bytes</a>(&amp;self)</h4></section></summary><div class='docblock'>Prefetches the maximum request length. <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.prefetch_maximum_request_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.maximum_request_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.maximum_request_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.maximum_request_bytes\" class=\"fn\">maximum_request_bytes</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The maximum number of bytes that the X11 server accepts in a request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_error\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.parse_error\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.parse_error\" class=\"fn\">parse_error</a>(&amp;self, error: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/x11_utils/struct.X11Error.html\" title=\"struct x11rb_protocol::x11_utils::X11Error\">X11Error</a>, <a class=\"enum\" href=\"x11rb_protocol/errors/enum.ParseError.html\" title=\"enum x11rb_protocol::errors::ParseError\">ParseError</a>&gt;</h4></section></summary><div class='docblock'>Parse a generic error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb/connection/impls.rs.html#244\">Source</a><a href=\"#method.parse_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/connection/trait.RequestConnection.html#tymethod.parse_event\" class=\"fn\">parse_event</a>(&amp;self, event: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"x11rb_protocol/protocol/enum.Event.html\" title=\"enum x11rb_protocol::protocol::Event\">Event</a>, <a class=\"enum\" href=\"x11rb_protocol/errors/enum.ParseError.html\" title=\"enum x11rb_protocol::errors::ParseError\">ParseError</a>&gt;</h4></section></summary><div class='docblock'>Parse a generic event.</div></details></div></details>","RequestConnection","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RngCore-for-Box%3CR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand_core/lib.rs.html#450\">Source</a><a href=\"#impl-RngCore-for-Box%3CR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R&gt; <a class=\"trait\" href=\"rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;R&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rand_core/lib.rs.html#452\">Source</a><a href=\"#method.next_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rand_core/trait.RngCore.html#tymethod.next_u32\" class=\"fn\">next_u32</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Return the next random <code>u32</code>. <a href=\"rand_core/trait.RngCore.html#tymethod.next_u32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rand_core/lib.rs.html#457\">Source</a><a href=\"#method.next_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rand_core/trait.RngCore.html#tymethod.next_u64\" class=\"fn\">next_u64</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Return the next random <code>u64</code>. <a href=\"rand_core/trait.RngCore.html#tymethod.next_u64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fill_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rand_core/lib.rs.html#462\">Source</a><a href=\"#method.fill_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rand_core/trait.RngCore.html#tymethod.fill_bytes\" class=\"fn\">fill_bytes</a>(&amp;mut self, dest: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Fill <code>dest</code> with random data. <a href=\"rand_core/trait.RngCore.html#tymethod.fill_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fill_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rand_core/lib.rs.html#467\">Source</a><a href=\"#method.try_fill_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rand_core/trait.RngCore.html#tymethod.try_fill_bytes\" class=\"fn\">try_fill_bytes</a>(&amp;mut self, dest: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"rand_core/error/struct.Error.html\" title=\"struct rand_core::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Fill <code>dest</code> entirely with random data. <a href=\"rand_core/trait.RngCore.html#tymethod.try_fill_bytes\">Read more</a></div></details></div></details>","RngCore","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Seek-for-Box%3CS%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#194\">Source</a></span><a href=\"#impl-Seek-for-Box%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Seek.html\" title=\"trait std::io::Seek\">Seek</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Seek.html\" title=\"trait std::io::Seek\">Seek</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.seek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#196\">Source</a><a href=\"#method.seek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Seek.html#tymethod.seek\" class=\"fn\">seek</a>(&amp;mut self, pos: <a class=\"enum\" href=\"bevy/tasks/futures_lite/io/enum.SeekFrom.html\" title=\"enum bevy::tasks::futures_lite::io::SeekFrom\">SeekFrom</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Seek to an offset, in bytes, in a stream. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Seek.html#tymethod.seek\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stream_position\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#201\">Source</a><a href=\"#method.stream_position\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Seek.html#method.stream_position\" class=\"fn\">stream_position</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Returns the current seek position from the start of the stream. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Seek.html#method.stream_position\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rewind\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.55.0\">1.55.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/mod.rs.html#2010\">Source</a></span><a href=\"#method.rewind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Seek.html#method.rewind\" class=\"fn\">rewind</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Rewind to the beginning of a stream. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Seek.html#method.rewind\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stream_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/mod.rs.html#2050\">Source</a><a href=\"#method.stream_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Seek.html#method.stream_len\" class=\"fn\">stream_len</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>seek_stream_len</code>)</span></div></span><div class='docblock'>Returns the length of this stream (in bytes). <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Seek.html#method.stream_len\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.seek_relative\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.80.0\">1.80.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/mod.rs.html#2115\">Source</a></span><a href=\"#method.seek_relative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Seek.html#method.seek_relative\" class=\"fn\">seek_relative</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Seeks relative to the current position. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Seek.html#method.seek_relative\">Read more</a></div></details></div></details>","Seek","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#535-539\">Source</a><a href=\"#impl-Serialize-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#535-539\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serializer-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#impl-Serializer-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy/reflect/erased_serde/trait.Serializer.html\" title=\"trait bevy::reflect::erased_serde::Serializer\">Serializer</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/reflect/erased_serde/trait.Serializer.html\" title=\"trait bevy::reflect::erased_serde::Serializer\">Serializer</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.erased_serialize_bool\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_bool\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_bool\" class=\"fn\">erased_serialize_bool</a>(&amp;mut self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>)</h4></section><section id=\"method.erased_serialize_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_i8\" class=\"fn\">erased_serialize_i8</a>(&amp;mut self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i8.html\">i8</a>)</h4></section><section id=\"method.erased_serialize_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_i16\" class=\"fn\">erased_serialize_i16</a>(&amp;mut self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i16.html\">i16</a>)</h4></section><section id=\"method.erased_serialize_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_i32\" class=\"fn\">erased_serialize_i32</a>(&amp;mut self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i32.html\">i32</a>)</h4></section><section id=\"method.erased_serialize_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_i64\" class=\"fn\">erased_serialize_i64</a>(&amp;mut self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i64.html\">i64</a>)</h4></section><section id=\"method.erased_serialize_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_i128\" class=\"fn\">erased_serialize_i128</a>(&amp;mut self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i128.html\">i128</a>)</h4></section><section id=\"method.erased_serialize_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_u8\" class=\"fn\">erased_serialize_u8</a>(&amp;mut self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>)</h4></section><section id=\"method.erased_serialize_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_u16\" class=\"fn\">erased_serialize_u16</a>(&amp;mut self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u16.html\">u16</a>)</h4></section><section id=\"method.erased_serialize_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_u32\" class=\"fn\">erased_serialize_u32</a>(&amp;mut self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>)</h4></section><section id=\"method.erased_serialize_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_u64\" class=\"fn\">erased_serialize_u64</a>(&amp;mut self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>)</h4></section><section id=\"method.erased_serialize_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_u128\" class=\"fn\">erased_serialize_u128</a>(&amp;mut self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u128.html\">u128</a>)</h4></section><section id=\"method.erased_serialize_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_f32\" class=\"fn\">erased_serialize_f32</a>(&amp;mut self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>)</h4></section><section id=\"method.erased_serialize_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_f64\" class=\"fn\">erased_serialize_f64</a>(&amp;mut self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f64.html\">f64</a>)</h4></section><section id=\"method.erased_serialize_char\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_char\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_char\" class=\"fn\">erased_serialize_char</a>(&amp;mut self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.char.html\">char</a>)</h4></section><section id=\"method.erased_serialize_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_str\" class=\"fn\">erased_serialize_str</a>(&amp;mut self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>)</h4></section><section id=\"method.erased_serialize_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_bytes\" class=\"fn\">erased_serialize_bytes</a>(&amp;mut self, v: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>])</h4></section><section id=\"method.erased_serialize_none\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_none\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_none\" class=\"fn\">erased_serialize_none</a>(&amp;mut self)</h4></section><section id=\"method.erased_serialize_some\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_some\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_some\" class=\"fn\">erased_serialize_some</a>(&amp;mut self, value: &amp;dyn <a class=\"trait\" href=\"bevy/reflect/erased_serde/trait.Serialize.html\" title=\"trait bevy::reflect::erased_serde::Serialize\">Serialize</a>)</h4></section><section id=\"method.erased_serialize_unit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_unit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_unit\" class=\"fn\">erased_serialize_unit</a>(&amp;mut self)</h4></section><section id=\"method.erased_serialize_unit_struct\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_unit_struct\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_unit_struct\" class=\"fn\">erased_serialize_unit_struct</a>(&amp;mut self, name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>)</h4></section><section id=\"method.erased_serialize_unit_variant\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_unit_variant\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_unit_variant\" class=\"fn\">erased_serialize_unit_variant</a>(\n    &amp;mut self,\n    name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n    variant_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>,\n    variant: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n)</h4></section><section id=\"method.erased_serialize_newtype_struct\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_newtype_struct\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_newtype_struct\" class=\"fn\">erased_serialize_newtype_struct</a>(\n    &amp;mut self,\n    name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n    value: &amp;dyn <a class=\"trait\" href=\"bevy/reflect/erased_serde/trait.Serialize.html\" title=\"trait bevy::reflect::erased_serde::Serialize\">Serialize</a>,\n)</h4></section><section id=\"method.erased_serialize_newtype_variant\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_newtype_variant\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_newtype_variant\" class=\"fn\">erased_serialize_newtype_variant</a>(\n    &amp;mut self,\n    name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n    variant_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>,\n    variant: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n    value: &amp;dyn <a class=\"trait\" href=\"bevy/reflect/erased_serde/trait.Serialize.html\" title=\"trait bevy::reflect::erased_serde::Serialize\">Serialize</a>,\n)</h4></section><section id=\"method.erased_serialize_seq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_seq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_seq\" class=\"fn\">erased_serialize_seq</a>(\n    &amp;mut self,\n    len: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut dyn SerializeSeq, ErrorImpl&gt;</h4></section><section id=\"method.erased_serialize_tuple\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_tuple\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_tuple\" class=\"fn\">erased_serialize_tuple</a>(\n    &amp;mut self,\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut dyn SerializeTuple, ErrorImpl&gt;</h4></section><section id=\"method.erased_serialize_tuple_struct\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_tuple_struct\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_tuple_struct\" class=\"fn\">erased_serialize_tuple_struct</a>(\n    &amp;mut self,\n    name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut dyn SerializeTupleStruct, ErrorImpl&gt;</h4></section><section id=\"method.erased_serialize_tuple_variant\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_tuple_variant\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_tuple_variant\" class=\"fn\">erased_serialize_tuple_variant</a>(\n    &amp;mut self,\n    name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n    variant_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>,\n    variant: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut dyn SerializeTupleVariant, ErrorImpl&gt;</h4></section><section id=\"method.erased_serialize_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_map\" class=\"fn\">erased_serialize_map</a>(\n    &amp;mut self,\n    len: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut dyn SerializeMap, ErrorImpl&gt;</h4></section><section id=\"method.erased_serialize_struct\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_struct\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_struct\" class=\"fn\">erased_serialize_struct</a>(\n    &amp;mut self,\n    name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut dyn SerializeStruct, ErrorImpl&gt;</h4></section><section id=\"method.erased_serialize_struct_variant\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_serialize_struct_variant\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_serialize_struct_variant\" class=\"fn\">erased_serialize_struct_variant</a>(\n    &amp;mut self,\n    name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n    variant_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>,\n    variant: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>,\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut dyn SerializeStructVariant, ErrorImpl&gt;</h4></section><section id=\"method.erased_is_human_readable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/erased_serde/ser.rs.html#1484\">Source</a><a href=\"#method.erased_is_human_readable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/reflect/erased_serde/trait.Serializer.html#tymethod.erased_is_human_readable\" class=\"fn\">erased_is_human_readable</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","Serializer","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShaderSize-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/encase/types/wrapper.rs.html#116\">Source</a><a href=\"#impl-ShaderSize-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy/render/render_resource/trait.ShaderSize.html\" title=\"trait bevy::render::render_resource::ShaderSize\">ShaderSize</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/render/render_resource/trait.ShaderSize.html\" title=\"trait bevy::render::render_resource::ShaderSize\">ShaderSize</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SHADER_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/encase/types/wrapper.rs.html#116\">Source</a><a href=\"#associatedconstant.SHADER_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bevy/render/render_resource/trait.ShaderSize.html#associatedconstant.SHADER_SIZE\" class=\"constant\">SHADER_SIZE</a>: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>&gt; = T::SHADER_SIZE</h4></section></summary><div class='docblock'>Represents <a href=\"https://gpuweb.github.io/gpuweb/wgsl/#alignment-and-size\">WGSL Size</a> (equivalent to <a href=\"bevy/render/render_resource/trait.ShaderType.html#method.min_size\" title=\"associated function bevy::render::render_resource::ShaderType::min_size\"><code>ShaderType::min_size</code></a>)</div></details></div></details>","ShaderSize","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShaderType-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/encase/types/wrapper.rs.html#116\">Source</a><a href=\"#impl-ShaderType-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy/render/render_resource/trait.ShaderType.html\" title=\"trait bevy::render::render_resource::ShaderType\">ShaderType</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/render/render_resource/trait.ShaderType.html\" title=\"trait bevy::render::render_resource::ShaderType\">ShaderType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/encase/types/wrapper.rs.html#116\">Source</a><a href=\"#method.size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/trait.ShaderType.html#method.size\" class=\"fn\">size</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Returns the size of <code>Self</code> at runtime <a href=\"bevy/render/render_resource/trait.ShaderType.html#method.size\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/encase/core/traits.rs.html#94\">Source</a><a href=\"#method.min_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/trait.ShaderType.html#method.min_size\" class=\"fn\">min_size</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Represents the minimum size of <code>Self</code> (equivalent to <a href=\"https://gpuweb.github.io/gpuweb/#dom-gpubufferbindinglayout-minbindingsize\">GPUBufferBindingLayout.minBindingSize</a>) <a href=\"bevy/render/render_resource/trait.ShaderType.html#method.min_size\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assert_uniform_compat\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/encase/core/traits.rs.html#208\">Source</a><a href=\"#method.assert_uniform_compat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/trait.ShaderType.html#method.assert_uniform_compat\" class=\"fn\">assert_uniform_compat</a>()</h4></section></summary><div class='docblock'>Asserts that <code>Self</code> meets the requirements of the\n<a href=\"https://gpuweb.github.io/gpuweb/wgsl/#address-spaces-uniform\">uniform address space restrictions on stored values</a> and the\n<a href=\"https://gpuweb.github.io/gpuweb/wgsl/#address-space-layout-constraints\">uniform address space layout constraints</a> <a href=\"bevy/render/render_resource/trait.ShaderType.html#method.assert_uniform_compat\">Read more</a></div></details></div></details>","ShaderType","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Stream-for-Box%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_core/stream.rs.html#215\">Source</a><a href=\"#impl-Stream-for-Box%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"bevy/tasks/futures_lite/trait.Stream.html\" title=\"trait bevy::tasks::futures_lite::Stream\">Stream</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"bevy/tasks/futures_lite/trait.Stream.html\" title=\"trait bevy::tasks::futures_lite::Stream\">Stream</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/futures_core/stream.rs.html#216\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/tasks/futures_lite/trait.Stream.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = &lt;S as <a class=\"trait\" href=\"bevy/tasks/futures_lite/trait.Stream.html\" title=\"trait bevy::tasks::futures_lite::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"bevy/tasks/futures_lite/trait.Stream.html#associatedtype.Item\" title=\"type bevy::tasks::futures_lite::Stream::Item\">Item</a></h4></section></summary><div class='docblock'>Values yielded by the stream.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_next\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_core/stream.rs.html#218\">Source</a><a href=\"#method.poll_next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/tasks/futures_lite/trait.Stream.html#tymethod.poll_next\" class=\"fn\">poll_next</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;S&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;S&gt; as <a class=\"trait\" href=\"bevy/tasks/futures_lite/trait.Stream.html\" title=\"trait bevy::tasks::futures_lite::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"bevy/tasks/futures_lite/trait.Stream.html#associatedtype.Item\" title=\"type bevy::tasks::futures_lite::Stream::Item\">Item</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to pull out the next value of this stream, registering the\ncurrent task for wakeup if the value is not yet available, and returning\n<code>None</code> if the stream is exhausted. <a href=\"bevy/tasks/futures_lite/trait.Stream.html#tymethod.poll_next\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_core/stream.rs.html#222\">Source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/tasks/futures_lite/trait.Stream.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Returns the bounds on the remaining length of the stream. <a href=\"bevy/tasks/futures_lite/trait.Stream.html#method.size_hint\">Read more</a></div></details></div></details>","Stream","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Subscriber-for-Box%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#710-712\">Source</a><a href=\"#impl-Subscriber-for-Box%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"bevy/utils/tracing/trait.Subscriber.html\" title=\"trait bevy::utils::tracing::Subscriber\">Subscriber</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"bevy/utils/tracing/trait.Subscriber.html\" title=\"trait bevy::utils::tracing::Subscriber\">Subscriber</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_callsite\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#715\">Source</a><a href=\"#method.register_callsite\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.register_callsite\" class=\"fn\">register_callsite</a>(&amp;self, metadata: &amp;'static <a class=\"struct\" href=\"bevy/utils/tracing/struct.Metadata.html\" title=\"struct bevy::utils::tracing::Metadata\">Metadata</a>&lt;'static&gt;) -&gt; <a class=\"struct\" href=\"bevy/utils/tracing/subscriber/struct.Interest.html\" title=\"struct bevy::utils::tracing::subscriber::Interest\">Interest</a></h4></section></summary><div class='docblock'>Registers a new <a href=\"bevy/utils/tracing/callsite/index.html\" title=\"mod bevy::utils::tracing::callsite\">callsite</a> with this subscriber, returning whether or not\nthe subscriber is interested in being notified about the callsite. <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.register_callsite\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#720\">Source</a><a href=\"#method.enabled\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/utils/tracing/trait.Subscriber.html#tymethod.enabled\" class=\"fn\">enabled</a>(&amp;self, metadata: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Metadata.html\" title=\"struct bevy::utils::tracing::Metadata\">Metadata</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if a span or event with the specified <a href=\"bevy/utils/tracing/struct.Metadata.html\" title=\"struct bevy::utils::tracing::Metadata\">metadata</a> would be\nrecorded. <a href=\"bevy/utils/tracing/trait.Subscriber.html#tymethod.enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_level_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#725\">Source</a><a href=\"#method.max_level_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.max_level_hint\" class=\"fn\">max_level_hint</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"bevy/log/tracing_subscriber/filter/struct.LevelFilter.html\" title=\"struct bevy::log::tracing_subscriber::filter::LevelFilter\">LevelFilter</a>&gt;</h4></section></summary><div class='docblock'>Returns the highest <a href=\"bevy/log/struct.Level.html\" title=\"struct bevy::log::Level\">verbosity level</a> that this <code>Subscriber</code> will\nenable, or <code>None</code>, if the subscriber does not implement level-based\nfiltering or chooses not to implement this method. <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.max_level_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#730\">Source</a><a href=\"#method.new_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/utils/tracing/trait.Subscriber.html#tymethod.new_span\" class=\"fn\">new_span</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/span/struct.Attributes.html\" title=\"struct bevy::utils::tracing::span::Attributes\">Attributes</a>&lt;'_&gt;) -&gt; <a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a></h4></section></summary><div class='docblock'>Visit the construction of a new span, returning a new <a href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">span ID</a> for the\nspan being constructed. <a href=\"bevy/utils/tracing/trait.Subscriber.html#tymethod.new_span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#735\">Source</a><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/utils/tracing/trait.Subscriber.html#tymethod.record\" class=\"fn\">record</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, values: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/span/struct.Record.html\" title=\"struct bevy::utils::tracing::span::Record\">Record</a>&lt;'_&gt;)</h4></section></summary><div class='docblock'>Record a set of values on a span. <a href=\"bevy/utils/tracing/trait.Subscriber.html#tymethod.record\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.record_follows_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#740\">Source</a><a href=\"#method.record_follows_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/utils/tracing/trait.Subscriber.html#tymethod.record_follows_from\" class=\"fn\">record_follows_from</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>, follows: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>)</h4></section></summary><div class='docblock'>Adds an indication that <code>span</code> follows from the span with the id\n<code>follows</code>. <a href=\"bevy/utils/tracing/trait.Subscriber.html#tymethod.record_follows_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.event_enabled\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#745\">Source</a><a href=\"#method.event_enabled\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.event_enabled\" class=\"fn\">event_enabled</a>(&amp;self, event: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Event.html\" title=\"struct bevy::utils::tracing::Event\">Event</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determine if an <a href=\"bevy/utils/tracing/struct.Event.html\" title=\"struct bevy::utils::tracing::Event\"><code>Event</code></a> should be recorded. <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.event_enabled\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#750\">Source</a><a href=\"#method.event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/utils/tracing/trait.Subscriber.html#tymethod.event\" class=\"fn\">event</a>(&amp;self, event: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Event.html\" title=\"struct bevy::utils::tracing::Event\">Event</a>&lt;'_&gt;)</h4></section></summary><div class='docblock'>Records that an <a href=\"bevy/utils/tracing/struct.Event.html\" title=\"struct bevy::utils::tracing::Event\"><code>Event</code></a> has occurred. <a href=\"bevy/utils/tracing/trait.Subscriber.html#tymethod.event\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#755\">Source</a><a href=\"#method.enter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/utils/tracing/trait.Subscriber.html#tymethod.enter\" class=\"fn\">enter</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>)</h4></section></summary><div class='docblock'>Records that a span has been entered. <a href=\"bevy/utils/tracing/trait.Subscriber.html#tymethod.enter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#760\">Source</a><a href=\"#method.exit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/utils/tracing/trait.Subscriber.html#tymethod.exit\" class=\"fn\">exit</a>(&amp;self, span: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>)</h4></section></summary><div class='docblock'>Records that a span has been exited. <a href=\"bevy/utils/tracing/trait.Subscriber.html#tymethod.exit\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#765\">Source</a><a href=\"#method.clone_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.clone_span\" class=\"fn\">clone_span</a>(&amp;self, id: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>) -&gt; <a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a></h4></section></summary><div class='docblock'>Notifies the subscriber that a <a href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">span ID</a> has been cloned. <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.clone_span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_close\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#770\">Source</a><a href=\"#method.try_close\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.try_close\" class=\"fn\">try_close</a>(&amp;self, id: <a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Notifies the subscriber that a <a href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">span ID</a> has been dropped, and returns\n<code>true</code> if there are now 0 IDs that refer to that span. <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.try_close\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#776\">Source</a><a href=\"#method.drop_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.drop_span\" class=\"fn\">drop_span</a>(&amp;self, id: <a class=\"struct\" href=\"bevy/utils/tracing/struct.Id.html\" title=\"struct bevy::utils::tracing::Id\">Id</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.1.2: use <code>Subscriber::try_close</code> instead</span></div></span><div class='docblock'><strong>This method is deprecated.</strong> <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.drop_span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#781\">Source</a><a href=\"#method.current_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.current_span\" class=\"fn\">current_span</a>(&amp;self) -&gt; <a class=\"struct\" href=\"tracing_core/span/struct.Current.html\" title=\"struct tracing_core::span::Current\">Current</a></h4></section></summary><div class='docblock'>Returns a type representing this subscriber’s view of the current span. <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.current_span\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downcast_raw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#786\">Source</a><a href=\"#method.downcast_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.downcast_raw\" class=\"fn\">downcast_raw</a>(&amp;self, id: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>If <code>self</code> is the same type as the provided <code>TypeId</code>, returns an untyped\n<code>*const</code> pointer to that type. Otherwise, returns <code>None</code>. <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.downcast_raw\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_register_dispatch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/subscriber.rs.html#103\">Source</a><a href=\"#method.on_register_dispatch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.on_register_dispatch\" class=\"fn\">on_register_dispatch</a>(&amp;self, subscriber: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/struct.Dispatch.html\" title=\"struct bevy::utils::tracing::Dispatch\">Dispatch</a>)</h4></section></summary><div class='docblock'>Invoked when this subscriber becomes a <a href=\"bevy/utils/tracing/struct.Dispatch.html\" title=\"struct bevy::utils::tracing::Dispatch\"><code>Dispatch</code></a>. <a href=\"bevy/utils/tracing/trait.Subscriber.html#method.on_register_dispatch\">Read more</a></div></details></div></details>","Subscriber","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tracing_core/field.rs.html#654-656\">Source</a><a href=\"#impl-Value-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy/utils/tracing/trait.Value.html\" title=\"trait bevy::utils::tracing::Value\">Value</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/utils/tracing/trait.Value.html\" title=\"trait bevy::utils::tracing::Value\">Value</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/field.rs.html#659\">Source</a><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/utils/tracing/trait.Value.html#tymethod.record\" class=\"fn\">record</a>(&amp;self, key: &amp;<a class=\"struct\" href=\"bevy/utils/tracing/field/struct.Field.html\" title=\"struct bevy::utils::tracing::field::Field\">Field</a>, visitor: &amp;mut dyn <a class=\"trait\" href=\"bevy/log/tracing_subscriber/field/trait.Visit.html\" title=\"trait bevy::log::tracing_subscriber::field::Visit\">Visit</a>)</h4></section></summary><div class='docblock'>Visits this value with the given <code>Visitor</code>.</div></details></div></details>","Value","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Write-for-Box%3CW%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#162\">Source</a></span><a href=\"#impl-Write-for-Box%3CW%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;W&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;W&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#164\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a buffer into this writer, returning how many bytes were written. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#tymethod.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#169\">Source</a><a href=\"#method.write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#method.write_vectored\" class=\"fn\">write_vectored</a>(&amp;mut self, bufs: &amp;[<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Like <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#tymethod.write\" title=\"method std::io::Write::write\"><code>write</code></a>, except that it writes from a slice of buffers. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#method.write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_write_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#174\">Source</a><a href=\"#method.is_write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#method.is_write_vectored\" class=\"fn\">is_write_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>can_vector</code>)</span></div></span><div class='docblock'>Determines if this <code>Write</code>r has an efficient <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#method.write_vectored\" title=\"method std::io::Write::write_vectored\"><code>write_vectored</code></a>\nimplementation. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#method.is_write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#179\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Flushes this output stream, ensuring that all intermediately buffered\ncontents reach their destination. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#tymethod.flush\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#184\">Source</a><a href=\"#method.write_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#method.write_all\" class=\"fn\">write_all</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Attempts to write an entire buffer into this writer. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#method.write_all\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/impls.rs.html#189\">Source</a><a href=\"#method.write_fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#method.write_fmt\" class=\"fn\">write_fmt</a>(&amp;mut self, fmt: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Arguments.html\" title=\"struct core::fmt::Arguments\">Arguments</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a formatted string into this writer, returning any error\nencountered. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#method.write_fmt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_all_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/mod.rs.html#1813\">Source</a><a href=\"#method.write_all_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#method.write_all_vectored\" class=\"fn\">write_all_vectored</a>(&amp;mut self, bufs: &amp;mut [<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>write_all_vectored</code>)</span></div></span><div class='docblock'>Attempts to write multiple buffers into this writer. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#method.write_all_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/std/io/mod.rs.html#1926-1928\">Source</a></span><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates a “by reference” adapter for this instance of <code>Write</code>. <a href=\"https://doc.rust-lang.org/1.85.0/std/io/trait.Write.html#method.by_ref\">Read more</a></div></details></div></details>","Write","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteColor-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/termcolor/lib.rs.html#222\">Source</a><a href=\"#impl-WriteColor-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"termcolor/trait.WriteColor.html\" title=\"trait termcolor::WriteColor\">WriteColor</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"termcolor/trait.WriteColor.html\" title=\"trait termcolor::WriteColor\">WriteColor</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.supports_color\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/termcolor/lib.rs.html#223\">Source</a><a href=\"#method.supports_color\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"termcolor/trait.WriteColor.html#tymethod.supports_color\" class=\"fn\">supports_color</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if and only if the underlying writer supports colors.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.supports_hyperlinks\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/termcolor/lib.rs.html#226\">Source</a><a href=\"#method.supports_hyperlinks\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"termcolor/trait.WriteColor.html#method.supports_hyperlinks\" class=\"fn\">supports_hyperlinks</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if and only if the underlying writer supports hyperlinks. <a href=\"termcolor/trait.WriteColor.html#method.supports_hyperlinks\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_color\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/termcolor/lib.rs.html#229\">Source</a><a href=\"#method.set_color\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"termcolor/trait.WriteColor.html#tymethod.set_color\" class=\"fn\">set_color</a>(&amp;mut self, spec: &amp;<a class=\"struct\" href=\"termcolor/struct.ColorSpec.html\" title=\"struct termcolor::ColorSpec\">ColorSpec</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Set the color settings of the writer. <a href=\"termcolor/trait.WriteColor.html#tymethod.set_color\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_hyperlink\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/termcolor/lib.rs.html#232\">Source</a><a href=\"#method.set_hyperlink\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"termcolor/trait.WriteColor.html#method.set_hyperlink\" class=\"fn\">set_hyperlink</a>(&amp;mut self, link: &amp;<a class=\"struct\" href=\"termcolor/struct.HyperlinkSpec.html\" title=\"struct termcolor::HyperlinkSpec\">HyperlinkSpec</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Set the current hyperlink of the writer. <a href=\"termcolor/trait.WriteColor.html#method.set_hyperlink\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/termcolor/lib.rs.html#235\">Source</a><a href=\"#method.reset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"termcolor/trait.WriteColor.html#tymethod.reset\" class=\"fn\">reset</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bevy/tasks/futures_lite/io/struct.Error.html\" title=\"struct bevy::tasks::futures_lite::io::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reset the current color settings to their original settings. <a href=\"termcolor/trait.WriteColor.html#tymethod.reset\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_synchronous\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/termcolor/lib.rs.html#238\">Source</a><a href=\"#method.is_synchronous\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"termcolor/trait.WriteColor.html#method.is_synchronous\" class=\"fn\">is_synchronous</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if and only if the underlying writer must synchronously\ninteract with an end user’s device in order to control colors. By\ndefault, this always returns <code>false</code>. <a href=\"termcolor/trait.WriteColor.html#method.is_synchronous\">Read more</a></div></details></div></details>","WriteColor","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteInto-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/encase/types/wrapper.rs.html#116\">Source</a><a href=\"#impl-WriteInto-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bevy/render/render_resource/encase/internal/trait.WriteInto.html\" title=\"trait bevy::render::render_resource::encase::internal::WriteInto\">WriteInto</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"bevy/render/render_resource/encase/internal/trait.WriteInto.html\" title=\"trait bevy::render::render_resource::encase::internal::WriteInto\">WriteInto</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.write_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/encase/types/wrapper.rs.html#116\">Source</a><a href=\"#method.write_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bevy/render/render_resource/encase/internal/trait.WriteInto.html#tymethod.write_into\" class=\"fn\">write_into</a>&lt;B&gt;(&amp;self, writer: &amp;mut <a class=\"struct\" href=\"bevy/render/render_resource/encase/internal/struct.Writer.html\" title=\"struct bevy::render::render_resource::encase::internal::Writer\">Writer</a>&lt;B&gt;)<div class=\"where\">where\n    B: <a class=\"trait\" href=\"bevy/render/render_resource/encase/internal/trait.BufferMut.html\" title=\"trait bevy::render::render_resource::encase::internal::BufferMut\">BufferMut</a>,</div></h4></section></div></details>","WriteInto","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<section id=\"impl-CoerceUnsized%3CBox%3CU,+A%3E%3E-for-Box%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2044\">Source</a><a href=\"#impl-CoerceUnsized%3CBox%3CU,+A%3E%3E-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/unsize/trait.CoerceUnsized.html\" title=\"trait core::ops::unsize::CoerceUnsized\">CoerceUnsized</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;U, A&gt;&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unsize.html\" title=\"trait core::marker::Unsize\">Unsize</a>&lt;U&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    U: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","CoerceUnsized<Box<U, A>>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<section id=\"impl-CryptoRng-for-Box%3CR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand_core/lib.rs.html#485\">Source</a><a href=\"#impl-CryptoRng-for-Box%3CR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R&gt; <a class=\"trait\" href=\"rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;R&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","CryptoRng","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<section id=\"impl-DerefPure-for-Box%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1983\">Source</a><a href=\"#impl-DerefPure-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/deref/trait.DerefPure.html\" title=\"trait core::ops::deref::DerefPure\">DerefPure</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","DerefPure","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<section id=\"impl-DispatchFromDyn%3CBox%3CU%3E%3E-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2053\">Source</a><a href=\"#impl-DispatchFromDyn%3CBox%3CU%3E%3E-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/unsize/trait.DispatchFromDyn.html\" title=\"trait core::ops::unsize::DispatchFromDyn\">DispatchFromDyn</a>&lt;<a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;U&gt;&gt; for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unsize.html\" title=\"trait core::marker::Unsize\">Unsize</a>&lt;U&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","DispatchFromDyn<Box<U>>","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<section id=\"impl-Eq-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#1881\">Source</a></span><a href=\"#impl-Eq-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section>","Eq","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<section id=\"impl-FusedIterator-for-Box%3CI,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.26.0\">1.26.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed/iter.rs.html#80\">Source</a></span><a href=\"#impl-FusedIterator-for-Box%3CI,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/marker/trait.FusedIterator.html\" title=\"trait core::iter::traits::marker::FusedIterator\">FusedIterator</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;I, A&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/marker/trait.FusedIterator.html\" title=\"trait core::iter::traits::marker::FusedIterator\">FusedIterator</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,</div></h3></section>","FusedIterator","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<section id=\"impl-PinCoerceUnsized-for-Box%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2047\">Source</a><a href=\"#impl-PinCoerceUnsized-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/trait.PinCoerceUnsized.html\" title=\"trait core::pin::PinCoerceUnsized\">PinCoerceUnsized</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","PinCoerceUnsized","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<section id=\"impl-PointerLike-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2162\">Source</a><a href=\"#impl-PointerLike-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.PointerLike.html\" title=\"trait core::marker::PointerLike\">PointerLike</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;</h3></section>","PointerLike","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<section id=\"impl-Unpin-for-Box%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.33.0\">1.33.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/alloc/boxed.rs.html#2106\">Source</a></span><a href=\"#impl-Unpin-for-Box%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","Unpin","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"],["<section id=\"impl-ZeroableInOption-for-Box%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytemuck/zeroable_in_option.rs.html#35\">Source</a><a href=\"#impl-ZeroableInOption-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"bytemuck/zeroable_in_option/trait.ZeroableInOption.html\" title=\"trait bytemuck::zeroable_in_option::ZeroableInOption\">ZeroableInOption</a> for <a class=\"struct\" href=\"bevy/ecs/label/struct.Box.html\" title=\"struct bevy::ecs::label::Box\">Box</a>&lt;T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","ZeroableInOption","bevy::asset::meta::MetaTransform","bevy::ecs::schedule::BoxedCondition","bevy::ecs::system::BoxedSystem","bevy::log::BoxedLayer"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[682416]}