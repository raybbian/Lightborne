(function() {
    var type_impls = Object.fromEntries([["bevy",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CS%3E-for-LoadTransformAndSave%3CL,+IdentityAssetTransformer%3C%3CL+as+AssetLoader%3E::Asset%3E,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_asset/processor/process.rs.html#67-68\">Source</a><a href=\"#impl-From%3CS%3E-for-LoadTransformAndSave%3CL,+IdentityAssetTransformer%3C%3CL+as+AssetLoader%3E::Asset%3E,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;S&gt; for <a class=\"struct\" href=\"bevy/asset/processor/struct.LoadTransformAndSave.html\" title=\"struct bevy::asset::processor::LoadTransformAndSave\">LoadTransformAndSave</a>&lt;L, <a class=\"struct\" href=\"bevy/asset/transformer/struct.IdentityAssetTransformer.html\" title=\"struct bevy::asset::transformer::IdentityAssetTransformer\">IdentityAssetTransformer</a>&lt;&lt;L as <a class=\"trait\" href=\"bevy/asset/trait.AssetLoader.html\" title=\"trait bevy::asset::AssetLoader\">AssetLoader</a>&gt;::<a class=\"associatedtype\" href=\"bevy/asset/trait.AssetLoader.html#associatedtype.Asset\" title=\"type bevy::asset::AssetLoader::Asset\">Asset</a>&gt;, S&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"bevy/asset/trait.AssetLoader.html\" title=\"trait bevy::asset::AssetLoader\">AssetLoader</a>,\n    S: <a class=\"trait\" href=\"bevy/asset/saver/trait.AssetSaver.html\" title=\"trait bevy::asset::saver::AssetSaver\">AssetSaver</a>&lt;Asset = &lt;L as <a class=\"trait\" href=\"bevy/asset/trait.AssetLoader.html\" title=\"trait bevy::asset::AssetLoader\">AssetLoader</a>&gt;::<a class=\"associatedtype\" href=\"bevy/asset/trait.AssetLoader.html#associatedtype.Asset\" title=\"type bevy::asset::AssetLoader::Asset\">Asset</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_asset/processor/process.rs.html#70\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    value: S,\n) -&gt; <a class=\"struct\" href=\"bevy/asset/processor/struct.LoadTransformAndSave.html\" title=\"struct bevy::asset::processor::LoadTransformAndSave\">LoadTransformAndSave</a>&lt;L, <a class=\"struct\" href=\"bevy/asset/transformer/struct.IdentityAssetTransformer.html\" title=\"struct bevy::asset::transformer::IdentityAssetTransformer\">IdentityAssetTransformer</a>&lt;&lt;L as <a class=\"trait\" href=\"bevy/asset/trait.AssetLoader.html\" title=\"trait bevy::asset::AssetLoader\">AssetLoader</a>&gt;::<a class=\"associatedtype\" href=\"bevy/asset/trait.AssetLoader.html#associatedtype.Asset\" title=\"type bevy::asset::AssetLoader::Asset\">Asset</a>&gt;, S&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<S>","bevy::asset::processor::LoadAndSave"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LoadTransformAndSave%3CL,+T,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_asset/processor/process.rs.html#93-97\">Source</a><a href=\"#impl-LoadTransformAndSave%3CL,+T,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L, T, S&gt; <a class=\"struct\" href=\"bevy/asset/processor/struct.LoadTransformAndSave.html\" title=\"struct bevy::asset::processor::LoadTransformAndSave\">LoadTransformAndSave</a>&lt;L, T, S&gt;<div class=\"where\">where\n    L: <a class=\"trait\" href=\"bevy/asset/trait.AssetLoader.html\" title=\"trait bevy::asset::AssetLoader\">AssetLoader</a>,\n    T: <a class=\"trait\" href=\"bevy/asset/transformer/trait.AssetTransformer.html\" title=\"trait bevy::asset::transformer::AssetTransformer\">AssetTransformer</a>&lt;AssetInput = &lt;L as <a class=\"trait\" href=\"bevy/asset/trait.AssetLoader.html\" title=\"trait bevy::asset::AssetLoader\">AssetLoader</a>&gt;::<a class=\"associatedtype\" href=\"bevy/asset/trait.AssetLoader.html#associatedtype.Asset\" title=\"type bevy::asset::AssetLoader::Asset\">Asset</a>&gt;,\n    S: <a class=\"trait\" href=\"bevy/asset/saver/trait.AssetSaver.html\" title=\"trait bevy::asset::saver::AssetSaver\">AssetSaver</a>&lt;Asset = &lt;T as <a class=\"trait\" href=\"bevy/asset/transformer/trait.AssetTransformer.html\" title=\"trait bevy::asset::transformer::AssetTransformer\">AssetTransformer</a>&gt;::<a class=\"associatedtype\" href=\"bevy/asset/transformer/trait.AssetTransformer.html#associatedtype.AssetOutput\" title=\"type bevy::asset::transformer::AssetTransformer::AssetOutput\">AssetOutput</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/bevy_asset/processor/process.rs.html#99\">Source</a><h4 class=\"code-header\">pub fn <a href=\"bevy/asset/processor/struct.LoadTransformAndSave.html#tymethod.new\" class=\"fn\">new</a>(transformer: T, saver: S) -&gt; <a class=\"struct\" href=\"bevy/asset/processor/struct.LoadTransformAndSave.html\" title=\"struct bevy::asset::processor::LoadTransformAndSave\">LoadTransformAndSave</a>&lt;L, T, S&gt;</h4></section></div></details>",0,"bevy::asset::processor::LoadAndSave"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Process-for-LoadTransformAndSave%3CLoader,+Transformer,+Saver%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_asset/processor/process.rs.html#172-176\">Source</a><a href=\"#impl-Process-for-LoadTransformAndSave%3CLoader,+Transformer,+Saver%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Loader, Transformer, Saver&gt; <a class=\"trait\" href=\"bevy/asset/processor/trait.Process.html\" title=\"trait bevy::asset::processor::Process\">Process</a> for <a class=\"struct\" href=\"bevy/asset/processor/struct.LoadTransformAndSave.html\" title=\"struct bevy::asset::processor::LoadTransformAndSave\">LoadTransformAndSave</a>&lt;Loader, Transformer, Saver&gt;<div class=\"where\">where\n    Loader: <a class=\"trait\" href=\"bevy/asset/trait.AssetLoader.html\" title=\"trait bevy::asset::AssetLoader\">AssetLoader</a>,\n    Transformer: <a class=\"trait\" href=\"bevy/asset/transformer/trait.AssetTransformer.html\" title=\"trait bevy::asset::transformer::AssetTransformer\">AssetTransformer</a>&lt;AssetInput = &lt;Loader as <a class=\"trait\" href=\"bevy/asset/trait.AssetLoader.html\" title=\"trait bevy::asset::AssetLoader\">AssetLoader</a>&gt;::<a class=\"associatedtype\" href=\"bevy/asset/trait.AssetLoader.html#associatedtype.Asset\" title=\"type bevy::asset::AssetLoader::Asset\">Asset</a>&gt;,\n    Saver: <a class=\"trait\" href=\"bevy/asset/saver/trait.AssetSaver.html\" title=\"trait bevy::asset::saver::AssetSaver\">AssetSaver</a>&lt;Asset = &lt;Transformer as <a class=\"trait\" href=\"bevy/asset/transformer/trait.AssetTransformer.html\" title=\"trait bevy::asset::transformer::AssetTransformer\">AssetTransformer</a>&gt;::<a class=\"associatedtype\" href=\"bevy/asset/transformer/trait.AssetTransformer.html#associatedtype.AssetOutput\" title=\"type bevy::asset::transformer::AssetTransformer::AssetOutput\">AssetOutput</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Settings\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/bevy_asset/processor/process.rs.html#178\">Source</a><a href=\"#associatedtype.Settings\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/asset/processor/trait.Process.html#associatedtype.Settings\" class=\"associatedtype\">Settings</a> = <a class=\"struct\" href=\"bevy/asset/processor/struct.LoadTransformAndSaveSettings.html\" title=\"struct bevy::asset::processor::LoadTransformAndSaveSettings\">LoadTransformAndSaveSettings</a>&lt;&lt;Loader as <a class=\"trait\" href=\"bevy/asset/trait.AssetLoader.html\" title=\"trait bevy::asset::AssetLoader\">AssetLoader</a>&gt;::<a class=\"associatedtype\" href=\"bevy/asset/trait.AssetLoader.html#associatedtype.Settings\" title=\"type bevy::asset::AssetLoader::Settings\">Settings</a>, &lt;Transformer as <a class=\"trait\" href=\"bevy/asset/transformer/trait.AssetTransformer.html\" title=\"trait bevy::asset::transformer::AssetTransformer\">AssetTransformer</a>&gt;::<a class=\"associatedtype\" href=\"bevy/asset/transformer/trait.AssetTransformer.html#associatedtype.Settings\" title=\"type bevy::asset::transformer::AssetTransformer::Settings\">Settings</a>, &lt;Saver as <a class=\"trait\" href=\"bevy/asset/saver/trait.AssetSaver.html\" title=\"trait bevy::asset::saver::AssetSaver\">AssetSaver</a>&gt;::<a class=\"associatedtype\" href=\"bevy/asset/saver/trait.AssetSaver.html#associatedtype.Settings\" title=\"type bevy::asset::saver::AssetSaver::Settings\">Settings</a>&gt;</h4></section></summary><div class='docblock'>The configuration / settings used to process the asset. This will be stored in the <a href=\"bevy/asset/meta/struct.AssetMeta.html\" title=\"struct bevy::asset::meta::AssetMeta\"><code>AssetMeta</code></a> and is user-configurable per-asset.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OutputLoader\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/bevy_asset/processor/process.rs.html#180\">Source</a><a href=\"#associatedtype.OutputLoader\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bevy/asset/processor/trait.Process.html#associatedtype.OutputLoader\" class=\"associatedtype\">OutputLoader</a> = &lt;Saver as <a class=\"trait\" href=\"bevy/asset/saver/trait.AssetSaver.html\" title=\"trait bevy::asset::saver::AssetSaver\">AssetSaver</a>&gt;::<a class=\"associatedtype\" href=\"bevy/asset/saver/trait.AssetSaver.html#associatedtype.OutputLoader\" title=\"type bevy::asset::saver::AssetSaver::OutputLoader\">OutputLoader</a></h4></section></summary><div class='docblock'>The <a href=\"bevy/asset/trait.AssetLoader.html\" title=\"trait bevy::asset::AssetLoader\"><code>AssetLoader</code></a> that will be used to load the final processed asset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.process\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_asset/processor/process.rs.html#182-187\">Source</a><a href=\"#method.process\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"bevy/asset/processor/trait.Process.html#tymethod.process\" class=\"fn\">process</a>(\n    &amp;self,\n    context: &amp;mut <a class=\"struct\" href=\"bevy/asset/processor/struct.ProcessContext.html\" title=\"struct bevy::asset::processor::ProcessContext\">ProcessContext</a>&lt;'_&gt;,\n    meta: <a class=\"struct\" href=\"bevy/asset/meta/struct.AssetMeta.html\" title=\"struct bevy::asset::meta::AssetMeta\">AssetMeta</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bevy/asset/processor/struct.LoadTransformAndSave.html\" title=\"struct bevy::asset::processor::LoadTransformAndSave\">LoadTransformAndSave</a>&lt;Loader, Transformer, Saver&gt;&gt;,\n    writer: &amp;mut (dyn <a class=\"trait\" href=\"bevy/tasks/futures_lite/trait.AsyncWrite.html\" title=\"trait bevy::tasks::futures_lite::AsyncWrite\">AsyncWrite</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + 'static),\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;<a class=\"struct\" href=\"bevy/asset/processor/struct.LoadTransformAndSave.html\" title=\"struct bevy::asset::processor::LoadTransformAndSave\">LoadTransformAndSave</a>&lt;Loader, Transformer, Saver&gt; as <a class=\"trait\" href=\"bevy/asset/processor/trait.Process.html\" title=\"trait bevy::asset::processor::Process\">Process</a>&gt;::<a class=\"associatedtype\" href=\"bevy/asset/processor/trait.Process.html#associatedtype.OutputLoader\" title=\"type bevy::asset::processor::Process::OutputLoader\">OutputLoader</a> as <a class=\"trait\" href=\"bevy/asset/trait.AssetLoader.html\" title=\"trait bevy::asset::AssetLoader\">AssetLoader</a>&gt;::<a class=\"associatedtype\" href=\"bevy/asset/trait.AssetLoader.html#associatedtype.Settings\" title=\"type bevy::asset::AssetLoader::Settings\">Settings</a>, <a class=\"enum\" href=\"bevy/asset/processor/enum.ProcessError.html\" title=\"enum bevy::asset::processor::ProcessError\">ProcessError</a>&gt;</h4></section></summary><div class='docblock'>Processes the asset stored on <code>context</code> in some way using the settings stored on <code>meta</code>. The results are written to <code>writer</code>. The\nfinal written processed asset is loadable using <a href=\"bevy/asset/processor/trait.Process.html#associatedtype.OutputLoader\" title=\"associated type bevy::asset::processor::Process::OutputLoader\"><code>Process::OutputLoader</code></a>. This load will use the returned <a href=\"bevy/asset/trait.AssetLoader.html#associatedtype.Settings\" title=\"associated type bevy::asset::AssetLoader::Settings\"><code>AssetLoader::Settings</code></a>.</div></details></div></details>","Process","bevy::asset::processor::LoadAndSave"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[13868]}