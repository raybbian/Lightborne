(function() {
    var type_impls = Object.fromEntries([["rapier2d",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbsDiffEq-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#508-511\">Source</a><a href=\"#impl-AbsDiffEq-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a> for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt; + <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&lt;Epsilon = &lt;T as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>&gt;,\n    &lt;T as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Epsilon\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#513\">Source</a><a href=\"#associatedtype.Epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" class=\"associatedtype\">Epsilon</a> = &lt;T as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a></h4></section></summary><div class='docblock'>Used for specifying relative comparisons.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_epsilon\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#516\">Source</a><a href=\"#method.default_epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.default_epsilon\" class=\"fn\">default_epsilon</a>() -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a></h4></section></summary><div class='docblock'>The default tolerance to use when testing values that are close together. <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.default_epsilon\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#521\">Source</a><a href=\"#method.abs_diff_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.abs_diff_eq\" class=\"fn\">abs_diff_eq</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;,\n    epsilon: &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses the absolute difference to compute the approximate\nequality of two numbers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/abs_diff_eq.rs.html#24\">Source</a><a href=\"#method.abs_diff_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#method.abs_diff_ne\" class=\"fn\">abs_diff_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;Rhs</a>, epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.abs_diff_eq\" title=\"method approx::abs_diff_eq::AbsDiffEq::abs_diff_eq\"><code>AbsDiffEq::abs_diff_eq</code></a>.</div></details></div></details>","AbsDiffEq","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#58\">Source</a><a href=\"#impl-Clone-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#58\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#58\">Source</a><a href=\"#impl-Debug-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#58\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_construction.rs.html#24-26\">Source</a><a href=\"#impl-Default-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_construction.rs.html#28\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#576-578\">Source</a><a href=\"#impl-Display-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#580\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Isometry%3CT,+R,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#156-163\">Source</a><a href=\"#impl-Div%3C%26Isometry%3CT,+R,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#156-163\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#156-163\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'b Isometry<T, R, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Similarity%3CT,+R,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#326-333\">Source</a><a href=\"#impl-Div%3C%26Similarity%3CT,+R,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, R, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#326-333\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#326-333\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, R, D&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, R, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'b Similarity<T, R, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Unit%3CComplex%3CT%3E%3E%3E-for-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#527-536\">Source</a><a href=\"#impl-Div%3C%26Unit%3CComplex%3CT%3E%3E%3E-for-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#527-536\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#527-536\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'b Unit<Complex<T>>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CSimilarity%3CT,+R,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#326-333\">Source</a><a href=\"#impl-Div%3CSimilarity%3CT,+R,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, R, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#326-333\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#326-333\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, R, D&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, R, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Similarity<T, R, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CUnit%3CComplex%3CT%3E%3E%3E-for-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#527-536\">Source</a><a href=\"#impl-Div%3CUnit%3CComplex%3CT%3E%3E%3E-for-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#527-536\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#527-536\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Unit<Complex<T>>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#156-163\">Source</a><a href=\"#impl-Div-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#156-163\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#156-163\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26Isometry%3CT,+R,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#189-194\">Source</a><a href=\"#impl-DivAssign%3C%26Isometry%3CT,+R,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#189-194\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&'b Isometry<T, R, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26Unit%3CComplex%3CT%3E%3E%3E-for-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#245-253\">Source</a><a href=\"#impl-DivAssign%3C%26Unit%3CComplex%3CT%3E%3E%3E-for-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedAddAssign.html\" title=\"trait simba::scalar::field::ClosedAddAssign\">ClosedAddAssign</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedMulAssign.html\" title=\"trait simba::scalar::field::ClosedMulAssign\">ClosedMulAssign</a> + <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#245-253\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&'b Unit<Complex<T>>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CUnit%3CComplex%3CT%3E%3E%3E-for-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#245-253\">Source</a><a href=\"#impl-DivAssign%3CUnit%3CComplex%3CT%3E%3E%3E-for-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedAddAssign.html\" title=\"trait simba::scalar::field::ClosedAddAssign\">ClosedAddAssign</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedMulAssign.html\" title=\"trait simba::scalar::field::ClosedMulAssign\">ClosedMulAssign</a> + <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#245-253\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Unit<Complex<T>>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#189-194\">Source</a><a href=\"#impl-DivAssign-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#189-194\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BIsometry%3C%3CT+as+SimdValue%3E::Element,+%3CR+as+SimdValue%3E::Element,+D%3E;+16%5D%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#306-313\">Source</a><a href=\"#impl-From%3C%5BIsometry%3C%3CT+as+SimdValue%3E::Element,+%3CR+as+SimdValue%3E::Element,+D%3E;+16%5D%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, &lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, D&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">16</a>]&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"simba/simd/simd_value/trait.PrimitiveSimdValue.html\" title=\"trait simba::simd::simd_value::PrimitiveSimdValue\">PrimitiveSimdValue</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">16</a>]&gt;,\n    R: <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a> + <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[&lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">16</a>]&gt;,\n    &lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, D&gt; + <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#316\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    arr: [<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, &lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, D&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">16</a>],\n) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Isometry<<T as SimdValue>::Element, <R as SimdValue>::Element, D>; 16]>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BIsometry%3C%3CT+as+SimdValue%3E::Element,+%3CR+as+SimdValue%3E::Element,+D%3E;+2%5D%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#224-231\">Source</a><a href=\"#impl-From%3C%5BIsometry%3C%3CT+as+SimdValue%3E::Element,+%3CR+as+SimdValue%3E::Element,+D%3E;+2%5D%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, &lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, D&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">2</a>]&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"simba/simd/simd_value/trait.PrimitiveSimdValue.html\" title=\"trait simba::simd::simd_value::PrimitiveSimdValue\">PrimitiveSimdValue</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">2</a>]&gt;,\n    R: <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a> + <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[&lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">2</a>]&gt;,\n    &lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, D&gt; + <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#234\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    arr: [<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, &lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, D&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">2</a>],\n) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Isometry<<T as SimdValue>::Element, <R as SimdValue>::Element, D>; 2]>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BIsometry%3C%3CT+as+SimdValue%3E::Element,+%3CR+as+SimdValue%3E::Element,+D%3E;+4%5D%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#242-249\">Source</a><a href=\"#impl-From%3C%5BIsometry%3C%3CT+as+SimdValue%3E::Element,+%3CR+as+SimdValue%3E::Element,+D%3E;+4%5D%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, &lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, D&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">4</a>]&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"simba/simd/simd_value/trait.PrimitiveSimdValue.html\" title=\"trait simba::simd::simd_value::PrimitiveSimdValue\">PrimitiveSimdValue</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">4</a>]&gt;,\n    R: <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a> + <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[&lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">4</a>]&gt;,\n    &lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, D&gt; + <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#252\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    arr: [<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, &lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, D&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">4</a>],\n) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Isometry<<T as SimdValue>::Element, <R as SimdValue>::Element, D>; 4]>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BIsometry%3C%3CT+as+SimdValue%3E::Element,+%3CR+as+SimdValue%3E::Element,+D%3E;+8%5D%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#270-277\">Source</a><a href=\"#impl-From%3C%5BIsometry%3C%3CT+as+SimdValue%3E::Element,+%3CR+as+SimdValue%3E::Element,+D%3E;+8%5D%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, &lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, D&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">8</a>]&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"simba/simd/simd_value/trait.PrimitiveSimdValue.html\" title=\"trait simba::simd::simd_value::PrimitiveSimdValue\">PrimitiveSimdValue</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">8</a>]&gt;,\n    R: <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a> + <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[&lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">8</a>]&gt;,\n    &lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, D&gt; + <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#280\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    arr: [<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, &lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, D&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">8</a>],\n) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Isometry<<T as SimdValue>::Element, <R as SimdValue>::Element, D>; 8]>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+D%5D%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#195-197\">Source</a><a href=\"#impl-From%3C%5BT;+D%5D%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">[T; D]</a>&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#200\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(coords: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">[T; D]</a>) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; D]>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(DVec2,+f64)%3E-for-Isometry%3Cf64,+Unit%3CComplex%3Cf64%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_isometry.rs.html#73\">Source</a><a href=\"#impl-From%3C(DVec2,+f64)%3E-for-Isometry%3Cf64,+Unit%3CComplex%3Cf64%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(<a class=\"struct\" href=\"glam/f64/dvec2/struct.DVec2.html\" title=\"struct glam::f64::dvec2::DVec2\">DVec2</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f64.html\">f64</a>)&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f64.html\">f64</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f64.html\">f64</a>&gt;&gt;, 2&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_isometry.rs.html#74\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(_: (<a class=\"struct\" href=\"glam/f64/dvec2/struct.DVec2.html\" title=\"struct glam::f64::dvec2::DVec2\">DVec2</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f64.html\">f64</a>)) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f64.html\">f64</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f64.html\">f64</a>&gt;&gt;, 2&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(DVec2, f64)>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(Vec2,+f32)%3E-for-Isometry%3Cf32,+Unit%3CComplex%3Cf32%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_isometry.rs.html#67\">Source</a><a href=\"#impl-From%3C(Vec2,+f32)%3E-for-Isometry%3Cf32,+Unit%3CComplex%3Cf32%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(<a class=\"struct\" href=\"glam/f32/vec2/struct.Vec2.html\" title=\"struct glam::f32::vec2::Vec2\">Vec2</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>)&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 2&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_isometry.rs.html#68\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(_: (<a class=\"struct\" href=\"glam/f32/vec2/struct.Vec2.html\" title=\"struct glam::f32::vec2::Vec2\">Vec2</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>)) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 2&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(Vec2, f32)>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDVec2%3E-for-Isometry%3Cf64,+Unit%3CComplex%3Cf64%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_isometry.rs.html#109\">Source</a><a href=\"#impl-From%3CDVec2%3E-for-Isometry%3Cf64,+Unit%3CComplex%3Cf64%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"glam/f64/dvec2/struct.DVec2.html\" title=\"struct glam::f64::dvec2::DVec2\">DVec2</a>&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f64.html\">f64</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f64.html\">f64</a>&gt;&gt;, 2&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_isometry.rs.html#110\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tra: <a class=\"struct\" href=\"glam/f64/dvec2/struct.DVec2.html\" title=\"struct glam::f64::dvec2::DVec2\">DVec2</a>) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f64.html\">f64</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f64.html\">f64</a>&gt;&gt;, 2&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<DVec2>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMatrix%3CT,+Const%3CD%3E,+Const%3C1%3E,+ArrayStorage%3CT,+D,+1%3E%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#205-207\">Source</a><a href=\"#impl-From%3CMatrix%3CT,+Const%3CD%3E,+Const%3C1%3E,+ArrayStorage%3CT,+D,+1%3E%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#210\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    coords: <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Matrix<T, Const<D>, Const<1>, ArrayStorage<T, D, 1>>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3COPoint%3CT,+Const%3CD%3E%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#214-216\">Source</a><a href=\"#impl-From%3COPoint%3CT,+Const%3CD%3E%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#219\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(coords: <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<OPoint<T, Const<D>>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTranslation%3CT,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#173-174\">Source</a><a href=\"#impl-From%3CTranslation%3CT,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#177\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tra: <a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, D&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Translation<T, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVec2%3E-for-Isometry%3Cf32,+Unit%3CComplex%3Cf32%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_isometry.rs.html#103\">Source</a><a href=\"#impl-From%3CVec2%3E-for-Isometry%3Cf32,+Unit%3CComplex%3Cf32%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"glam/f32/vec2/struct.Vec2.html\" title=\"struct glam::f32::vec2::Vec2\">Vec2</a>&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 2&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_isometry.rs.html#104\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tra: <a class=\"struct\" href=\"glam/f32/vec2/struct.Vec2.html\" title=\"struct glam::f32::vec2::Vec2\">Vec2</a>) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 2&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Vec2>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#94-96\">Source</a><a href=\"#impl-Hash-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&lt;T&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#98\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#122\">Source</a><a href=\"#impl-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3><div class=\"docblock\"><h4 id=\"from-the-translation-and-rotation-parts\"><a class=\"doc-anchor\" href=\"#from-the-translation-and-rotation-parts\">§</a>From the translation and rotation parts</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_parts\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#138\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.from_parts\" class=\"fn\">from_parts</a>(\n    translation: <a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, D&gt;,\n    rotation: R,\n) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new isometry from its rotational and translational parts.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>tra = Translation3::new(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">3.0</span>);\n<span class=\"kw\">let </span>rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::PI);\n<span class=\"kw\">let </span>iso = Isometry3::from_parts(tra, rot);\n\n<span class=\"macro\">assert_relative_eq!</span>(iso * Point3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>), Point3::new(-<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">0.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details></div></details>",0,"rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#147-149\">Source</a><a href=\"#impl-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3><div class=\"docblock\"><h4 id=\"inversion-and-in-place-composition\"><a class=\"doc-anchor\" href=\"#inversion-and-in-place-composition\">§</a>Inversion and in-place composition</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#166\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.inverse\" class=\"fn\">inverse</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class=\"docblock\"><p>Inverts <code>self</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>iso = Isometry2::new(Vector2::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>), f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>inv = iso.inverse();\n<span class=\"kw\">let </span>pt = Point2::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(inv * (iso * pt), pt);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#187\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.inverse_mut\" class=\"fn\">inverse_mut</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Inverts <code>self</code> in-place.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>iso = Isometry2::new(Vector2::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>), f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>pt = Point2::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>);\n<span class=\"kw\">let </span>transformed_pt = iso * pt;\niso.inverse_mut();\n\n<span class=\"macro\">assert_eq!</span>(iso * transformed_pt, pt);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inv_mul\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#207\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.inv_mul\" class=\"fn\">inv_mul</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class=\"docblock\"><p>Computes <code>self.inverse() * rhs</code> in a more efficient way.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>iso1 = Isometry2::new(Vector2::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>), f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>iso2 = Isometry2::new(Vector2::new(<span class=\"number\">10.0</span>, <span class=\"number\">20.0</span>), f32::consts::FRAC_PI_4);\n\n<span class=\"macro\">assert_eq!</span>(iso1.inverse() * iso2, iso1.inv_mul(<span class=\"kw-2\">&amp;</span>iso2));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append_translation_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#231\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.append_translation_mut\" class=\"fn\">append_translation_mut</a>(&amp;mut self, t: &amp;<a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, D&gt;)</h4></section></summary><div class=\"docblock\"><p>Appends to <code>self</code> the given translation in-place.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>iso = Isometry2::new(Vector2::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>), f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>tra = Translation2::new(<span class=\"number\">3.0</span>, <span class=\"number\">4.0</span>);\n<span class=\"comment\">// Same as `iso = tra * iso`.\n</span>iso.append_translation_mut(<span class=\"kw-2\">&amp;</span>tra);\n\n<span class=\"macro\">assert_eq!</span>(iso.translation, Translation2::new(<span class=\"number\">4.0</span>, <span class=\"number\">6.0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append_rotation_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#251\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.append_rotation_mut\" class=\"fn\">append_rotation_mut</a>(&amp;mut self, r: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;R</a>)</h4></section></summary><div class=\"docblock\"><p>Appends to <code>self</code> the given rotation in-place.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>iso = Isometry2::new(Vector2::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>), f32::consts::PI / <span class=\"number\">6.0</span>);\n<span class=\"kw\">let </span>rot = UnitComplex::new(f32::consts::PI / <span class=\"number\">2.0</span>);\n<span class=\"comment\">// Same as `iso = rot * iso`.\n</span>iso.append_rotation_mut(<span class=\"kw-2\">&amp;</span>rot);\n\n<span class=\"macro\">assert_relative_eq!</span>(iso, Isometry2::new(Vector2::new(-<span class=\"number\">2.0</span>, <span class=\"number\">1.0</span>), f32::consts::PI * <span class=\"number\">2.0 </span>/ <span class=\"number\">3.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append_rotation_wrt_point_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#273\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.append_rotation_wrt_point_mut\" class=\"fn\">append_rotation_wrt_point_mut</a>(&amp;mut self, r: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;R</a>, p: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;)</h4></section></summary><div class=\"docblock\"><p>Appends in-place to <code>self</code> a rotation centered at the point <code>p</code>, i.e., the rotation that\nlets <code>p</code> invariant.</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>iso = Isometry2::new(Vector2::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>), f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>rot = UnitComplex::new(f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>pt = Point2::new(<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>);\niso.append_rotation_wrt_point_mut(<span class=\"kw-2\">&amp;</span>rot, <span class=\"kw-2\">&amp;</span>pt);\n\n<span class=\"macro\">assert_relative_eq!</span>(iso * pt, Point2::new(-<span class=\"number\">2.0</span>, <span class=\"number\">0.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append_rotation_wrt_center_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#296\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.append_rotation_wrt_center_mut\" class=\"fn\">append_rotation_wrt_center_mut</a>(&amp;mut self, r: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;R</a>)</h4></section></summary><div class=\"docblock\"><p>Appends in-place to <code>self</code> a rotation centered at the point with coordinates\n<code>self.translation</code>.</p>\n<h5 id=\"example-6\"><a class=\"doc-anchor\" href=\"#example-6\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>iso = Isometry2::new(Vector2::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>), f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>rot = UnitComplex::new(f32::consts::FRAC_PI_2);\niso.append_rotation_wrt_center_mut(<span class=\"kw-2\">&amp;</span>rot);\n\n<span class=\"comment\">// The translation part should not have changed.\n</span><span class=\"macro\">assert_eq!</span>(iso.translation.vector, Vector2::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>));\n<span class=\"macro\">assert_eq!</span>(iso.rotation, UnitComplex::new(f32::consts::PI));</code></pre></div>\n</div></details></div></details>",0,"rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#302-304\">Source</a><a href=\"#impl-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3><div class=\"docblock\"><h4 id=\"transformation-of-a-vector-or-a-point\"><a class=\"doc-anchor\" href=\"#transformation-of-a-vector-or-a-point\">§</a>Transformation of a vector or a point</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_point\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#325\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.transform_point\" class=\"fn\">transform_point</a>(&amp;self, pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Transform the given point by this isometry.</p>\n<p>This is the same as the multiplication <code>self * pt</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>tra = Translation3::new(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">3.0</span>);\n<span class=\"kw\">let </span>rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>iso = Isometry3::from_parts(tra, rot);\n\n<span class=\"kw\">let </span>transformed_point = iso.transform_point(<span class=\"kw-2\">&amp;</span>Point3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"macro\">assert_relative_eq!</span>(transformed_point, Point3::new(<span class=\"number\">3.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">2.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#349\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.transform_vector\" class=\"fn\">transform_vector</a>(\n    &amp;self,\n    v: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Transform the given vector by this isometry, ignoring the translation\ncomponent of the isometry.</p>\n<p>This is the same as the multiplication <code>self * v</code>.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>tra = Translation3::new(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">3.0</span>);\n<span class=\"kw\">let </span>rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>iso = Isometry3::from_parts(tra, rot);\n\n<span class=\"kw\">let </span>transformed_point = iso.transform_vector(<span class=\"kw-2\">&amp;</span>Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"macro\">assert_relative_eq!</span>(transformed_point, Vector3::new(<span class=\"number\">3.0</span>, <span class=\"number\">2.0</span>, -<span class=\"number\">1.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_transform_point\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#372\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.inverse_transform_point\" class=\"fn\">inverse_transform_point</a>(\n    &amp;self,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Transform the given point by the inverse of this isometry. This may be\nless expensive than computing the entire isometry inverse and then\ntransforming the point.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>tra = Translation3::new(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">3.0</span>);\n<span class=\"kw\">let </span>rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>iso = Isometry3::from_parts(tra, rot);\n\n<span class=\"kw\">let </span>transformed_point = iso.inverse_transform_point(<span class=\"kw-2\">&amp;</span>Point3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"macro\">assert_relative_eq!</span>(transformed_point, Point3::new(<span class=\"number\">0.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">1.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_transform_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#397\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.inverse_transform_vector\" class=\"fn\">inverse_transform_vector</a>(\n    &amp;self,\n    v: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Transform the given vector by the inverse of this isometry, ignoring the\ntranslation component of the isometry. This may be\nless expensive than computing the entire isometry inverse and then\ntransforming the point.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>tra = Translation3::new(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">3.0</span>);\n<span class=\"kw\">let </span>rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>iso = Isometry3::from_parts(tra, rot);\n\n<span class=\"kw\">let </span>transformed_point = iso.inverse_transform_vector(<span class=\"kw-2\">&amp;</span>Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"macro\">assert_relative_eq!</span>(transformed_point, Vector3::new(-<span class=\"number\">3.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">1.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_transform_unit_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#421\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.inverse_transform_unit_vector\" class=\"fn\">inverse_transform_unit_vector</a>(\n    &amp;self,\n    v: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Transform the given unit vector by the inverse of this isometry, ignoring the\ntranslation component of the isometry. This may be\nless expensive than computing the entire isometry inverse and then\ntransforming the point.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>tra = Translation3::new(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">3.0</span>);\n<span class=\"kw\">let </span>rot = UnitQuaternion::from_scaled_axis(Vector3::z() * f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>iso = Isometry3::from_parts(tra, rot);\n\n<span class=\"kw\">let </span>transformed_point = iso.inverse_transform_unit_vector(<span class=\"kw-2\">&amp;</span>Vector3::x_axis());\n<span class=\"macro\">assert_relative_eq!</span>(transformed_point, -Vector3::y_axis(), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details></div></details>",0,"rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#431\">Source</a><a href=\"#impl-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3><div class=\"docblock\"><h4 id=\"conversion-to-a-matrix\"><a class=\"doc-anchor\" href=\"#conversion-to-a-matrix\">§</a>Conversion to a matrix</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_homogeneous\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#451-455\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.to_homogeneous\" class=\"fn\">to_homogeneous</a>(\n    &amp;self,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&lt;T&gt;&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;,\n    R: <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&lt;T&gt;&gt;&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Converts this isometry into its equivalent homogeneous transformation matrix.</p>\n<p>This is the same as <code>self.to_matrix()</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>iso = Isometry2::new(Vector2::new(<span class=\"number\">10.0</span>, <span class=\"number\">20.0</span>), f32::consts::FRAC_PI_6);\n<span class=\"kw\">let </span>expected = Matrix3::new(<span class=\"number\">0.8660254</span>, -<span class=\"number\">0.5</span>,      <span class=\"number\">10.0</span>,\n                            <span class=\"number\">0.5</span>,       <span class=\"number\">0.8660254</span>, <span class=\"number\">20.0</span>,\n                            <span class=\"number\">0.0</span>,       <span class=\"number\">0.0</span>,       <span class=\"number\">1.0</span>);\n\n<span class=\"macro\">assert_relative_eq!</span>(iso.to_homogeneous(), expected, epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_matrix\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#483-487\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.to_matrix\" class=\"fn\">to_matrix</a>(\n    &amp;self,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&lt;T&gt;&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;,\n    R: <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&lt;T&gt;&gt;&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Converts this isometry into its equivalent homogeneous transformation matrix.</p>\n<p>This is the same as <code>self.to_homogeneous()</code>.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>iso = Isometry2::new(Vector2::new(<span class=\"number\">10.0</span>, <span class=\"number\">20.0</span>), f32::consts::FRAC_PI_6);\n<span class=\"kw\">let </span>expected = Matrix3::new(<span class=\"number\">0.8660254</span>, -<span class=\"number\">0.5</span>,      <span class=\"number\">10.0</span>,\n                            <span class=\"number\">0.5</span>,       <span class=\"number\">0.8660254</span>, <span class=\"number\">20.0</span>,\n                            <span class=\"number\">0.0</span>,       <span class=\"number\">0.0</span>,       <span class=\"number\">1.0</span>);\n\n<span class=\"macro\">assert_relative_eq!</span>(iso.to_matrix(), expected, epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details></div></details>",0,"rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_construction.rs.html#33-35\">Source</a><a href=\"#impl-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.identity\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_construction.rs.html#53\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.identity\" class=\"fn\">identity</a>() -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new identity isometry.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>iso = Isometry2::identity();\n<span class=\"kw\">let </span>pt = Point2::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>);\n<span class=\"macro\">assert_eq!</span>(iso * pt, pt);\n\n<span class=\"kw\">let </span>iso = Isometry3::identity();\n<span class=\"kw\">let </span>pt = Point3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>);\n<span class=\"macro\">assert_eq!</span>(iso * pt, pt);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotation_wrt_point\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_construction.rs.html#74\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.rotation_wrt_point\" class=\"fn\">rotation_wrt_point</a>(r: R, p: <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class=\"docblock\"><p>The isometry that applies the rotation <code>r</code> with its axis passing through the point <code>p</code>.\nThis effectively lets <code>p</code> invariant.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = UnitComplex::new(f32::consts::PI);\n<span class=\"kw\">let </span>pt = Point2::new(<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>);\n<span class=\"kw\">let </span>iso = Isometry2::rotation_wrt_point(rot, pt);\n\n<span class=\"macro\">assert_eq!</span>(iso * pt, pt); <span class=\"comment\">// The rotation center is not affected.\n</span><span class=\"macro\">assert_relative_eq!</span>(iso * Point2::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>), Point2::new(<span class=\"number\">1.0</span>, -<span class=\"number\">2.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details></div></details>",0,"rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_construction.rs.html#175-177\">Source</a><a href=\"#impl-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_construction.rs.html#193\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.new\" class=\"fn\">new</a>(\n    translation: <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 2, 1&gt;&gt;,\n    angle: T,\n) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new 2D isometry from a translation and a rotation angle.</p>\n<p>Its rotational part is represented as an unit complex number.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>iso = IsometryMatrix2::new(Vector2::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>), f32::consts::FRAC_PI_2);\n\n<span class=\"macro\">assert_eq!</span>(iso * Point2::new(<span class=\"number\">3.0</span>, <span class=\"number\">4.0</span>), Point2::new(-<span class=\"number\">3.0</span>, <span class=\"number\">5.0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translation\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_construction.rs.html#202\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.translation\" class=\"fn\">translation</a>(x: T, y: T) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new isometry from the given translation coordinates.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotation\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_construction.rs.html#208\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.rotation\" class=\"fn\">rotation</a>(angle: T) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new isometry from the given rotation angle.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_construction.rs.html#221-223\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.cast\" class=\"fn\">cast</a>&lt;To&gt;(self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;To, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;To&gt;&gt;, 2&gt;<div class=\"where\">where\n    To: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a>,\n    <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;To, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;To&gt;&gt;, 2&gt;: <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Cast the components of <code>self</code> to another type.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>iso = Isometry2::&lt;f64&gt;::identity();\n<span class=\"kw\">let </span>iso2 = iso.cast::&lt;f32&gt;();\n<span class=\"macro\">assert_eq!</span>(iso2, Isometry2::&lt;f32&gt;::identity());</code></pre></div>\n</div></details></div></details>",0,"rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_interpolation.rs.html#156\">Source</a><a href=\"#impl-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp_slerp\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_interpolation.rs.html#183-185\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/isometry/struct.Isometry.html#tymethod.lerp_slerp\" class=\"fn\">lerp_slerp</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;,\n    t: T,\n) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,</div></h4></section></summary><div class=\"docblock\"><p>Interpolates between two isometries using a linear interpolation for the translation part,\nand a spherical interpolation for the rotation part.</p>\n<p>Panics if the angle between both rotations is 180 degrees (in which case the interpolation\nis not well-defined). Use <code>.try_lerp_slerp</code> instead to avoid the panic.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples:</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>t1 = Translation2::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>);\n<span class=\"kw\">let </span>t2 = Translation2::new(<span class=\"number\">4.0</span>, <span class=\"number\">8.0</span>);\n<span class=\"kw\">let </span>q1 = UnitComplex::new(std::f32::consts::FRAC_PI_4);\n<span class=\"kw\">let </span>q2 = UnitComplex::new(-std::f32::consts::PI);\n<span class=\"kw\">let </span>iso1 = Isometry2::from_parts(t1, q1);\n<span class=\"kw\">let </span>iso2 = Isometry2::from_parts(t2, q2);\n\n<span class=\"kw\">let </span>iso3 = iso1.lerp_slerp(<span class=\"kw-2\">&amp;</span>iso2, <span class=\"number\">1.0 </span>/ <span class=\"number\">3.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(iso3.translation.vector, Vector2::new(<span class=\"number\">2.0</span>, <span class=\"number\">4.0</span>));\n<span class=\"macro\">assert_relative_eq!</span>(iso3.rotation.angle(), std::f32::consts::FRAC_PI_2);</code></pre></div>\n</div></details></div></details>",0,"rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IsometryOps%3CAutoSimd%3C%5Bf32;+4%5D%3E%3E-for-Isometry%3CAutoSimd%3C%5Bf32;+4%5D%3E,+Unit%3CComplex%3CAutoSimd%3C%5Bf32;+4%5D%3E%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry2d/utils/isometry_ops.rs.html#22\">Source</a><a href=\"#impl-IsometryOps%3CAutoSimd%3C%5Bf32;+4%5D%3E%3E-for-Isometry%3CAutoSimd%3C%5Bf32;+4%5D%3E,+Unit%3CComplex%3CAutoSimd%3C%5Bf32;+4%5D%3E%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"parry2d/utils/isometry_ops/trait.IsometryOps.html\" title=\"trait parry2d::utils::isometry_ops::IsometryOps\">IsometryOps</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">4</a>]&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">4</a>]&gt;, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">4</a>]&gt;&gt;&gt;, 2&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.absolute_transform_vector\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/utils/isometry_ops.rs.html#24\">Source</a><a href=\"#method.absolute_transform_vector\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry2d/utils/isometry_ops/trait.IsometryOps.html#tymethod.absolute_transform_vector\" class=\"fn\">absolute_transform_vector</a>(\n    &amp;self,\n    v: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">4</a>]&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">4</a>]&gt;, 2, 1&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">4</a>]&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">4</a>]&gt;, 2, 1&gt;&gt;</h4></section></summary><div class='docblock'>Transform a vector by the absolute value of the homogeneous matrix\nequivalent to <code>self</code>.</div></details></div></details>","IsometryOps<AutoSimd<[f32; 4]>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IsometryOps%3Cf32%3E-for-Isometry%3Cf32,+Unit%3CComplex%3Cf32%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry2d/utils/isometry_ops.rs.html#15\">Source</a><a href=\"#impl-IsometryOps%3Cf32%3E-for-Isometry%3Cf32,+Unit%3CComplex%3Cf32%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"parry2d/utils/isometry_ops/trait.IsometryOps.html\" title=\"trait parry2d::utils::isometry_ops::IsometryOps\">IsometryOps</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 2&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.absolute_transform_vector\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/utils/isometry_ops.rs.html#17\">Source</a><a href=\"#method.absolute_transform_vector\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry2d/utils/isometry_ops/trait.IsometryOps.html#tymethod.absolute_transform_vector\" class=\"fn\">absolute_transform_vector</a>(\n    &amp;self,\n    v: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, 2, 1&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, 2, 1&gt;&gt;</h4></section></summary><div class='docblock'>Transform a vector by the absolute value of the homogeneous matrix\nequivalent to <code>self</code>.</div></details></div></details>","IsometryOps<f32>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Isometry%3CT,+R,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#141-154\">Source</a><a href=\"#impl-Mul%3C%26Isometry%3CT,+R,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#141-154\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#141-154\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Isometry<T, R, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Matrix%3CT,+Const%3CD%3E,+Const%3C1%3E,+ArrayStorage%3CT,+D,+1%3E%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#266-275\">Source</a><a href=\"#impl-Mul%3C%26Matrix%3CT,+Const%3CD%3E,+Const%3C1%3E,+ArrayStorage%3CT,+D,+1%3E%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#266-275\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#266-275\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    right: &amp;'b <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Matrix<T, Const<D>, Const<1>, ArrayStorage<T, D, 1>>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26OPoint%3CT,+Const%3CD%3E%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#256-263\">Source</a><a href=\"#impl-Mul%3C%26OPoint%3CT,+Const%3CD%3E%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#256-263\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#256-263\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    right: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b OPoint<T, Const<D>>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Similarity%3CT,+R,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#305-324\">Source</a><a href=\"#impl-Mul%3C%26Similarity%3CT,+R,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, R, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#305-324\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#305-324\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, R, D&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, R, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Similarity<T, R, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Transform%3CT,+C,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#286-298\">Source</a><a href=\"#impl-Mul%3C%26Transform%3CT,+C,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, C, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedAddAssign.html\" title=\"trait simba::scalar::field::ClosedAddAssign\">ClosedAddAssign</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedMulAssign.html\" title=\"trait simba::scalar::field::ClosedMulAssign\">ClosedMulAssign</a> + <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;,\n    C: <a class=\"trait\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::transform::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/transform/enum.TAffine.html\" title=\"enum nalgebra::geometry::transform::TAffine\">TAffine</a>&gt;,\n    R: <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&lt;T&gt;&gt;&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#286-298\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, &lt;C as <a class=\"trait\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::transform::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/transform/enum.TAffine.html\" title=\"enum nalgebra::geometry::transform::TAffine\">TAffine</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html#associatedtype.Representative\" title=\"type nalgebra::geometry::transform::TCategoryMul::Representative\">Representative</a>, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#286-298\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, D&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Transform<T, C, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Translation%3CT,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#290-301\">Source</a><a href=\"#impl-Mul%3C%26Translation%3CT,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#290-301\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#290-301\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    right: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, D&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Translation<T, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Unit%3CComplex%3CT%3E%3E%3E-for-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#515-524\">Source</a><a href=\"#impl-Mul%3C%26Unit%3CComplex%3CT%3E%3E%3E-for-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#515-524\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#515-524\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Unit<Complex<T>>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Unit%3CMatrix%3CT,+Const%3CD%3E,+Const%3C1%3E,+ArrayStorage%3CT,+D,+1%3E%3E%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#278-287\">Source</a><a href=\"#impl-Mul%3C%26Unit%3CMatrix%3CT,+Const%3CD%3E,+Const%3C1%3E,+ArrayStorage%3CT,+D,+1%3E%3E%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#278-287\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#278-287\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    right: &amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Unit<Matrix<T, Const<D>, Const<1>, ArrayStorage<T, D, 1>>>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CMatrix%3CT,+Const%3CD%3E,+Const%3C1%3E,+ArrayStorage%3CT,+D,+1%3E%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#266-275\">Source</a><a href=\"#impl-Mul%3CMatrix%3CT,+Const%3CD%3E,+Const%3C1%3E,+ArrayStorage%3CT,+D,+1%3E%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#266-275\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#266-275\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    right: <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Matrix<T, Const<D>, Const<1>, ArrayStorage<T, D, 1>>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3COPoint%3CT,+Const%3CD%3E%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#256-263\">Source</a><a href=\"#impl-Mul%3COPoint%3CT,+Const%3CD%3E%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#256-263\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#256-263\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    right: <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<OPoint<T, Const<D>>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CSimilarity%3CT,+R,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#305-324\">Source</a><a href=\"#impl-Mul%3CSimilarity%3CT,+R,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, R, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#305-324\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#305-324\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, R, D&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, R, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Similarity<T, R, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CTransform%3CT,+C,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#286-298\">Source</a><a href=\"#impl-Mul%3CTransform%3CT,+C,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedAddAssign.html\" title=\"trait simba::scalar::field::ClosedAddAssign\">ClosedAddAssign</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedMulAssign.html\" title=\"trait simba::scalar::field::ClosedMulAssign\">ClosedMulAssign</a> + <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;,\n    C: <a class=\"trait\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::transform::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/transform/enum.TAffine.html\" title=\"enum nalgebra::geometry::transform::TAffine\">TAffine</a>&gt;,\n    R: <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&lt;T&gt;&gt;&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#286-298\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, &lt;C as <a class=\"trait\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::transform::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/transform/enum.TAffine.html\" title=\"enum nalgebra::geometry::transform::TAffine\">TAffine</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html#associatedtype.Representative\" title=\"type nalgebra::geometry::transform::TCategoryMul::Representative\">Representative</a>, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#286-298\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, D&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Transform<T, C, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CTranslation%3CT,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#290-301\">Source</a><a href=\"#impl-Mul%3CTranslation%3CT,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#290-301\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#290-301\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    right: <a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, D&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Translation<T, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CUnit%3CComplex%3CT%3E%3E%3E-for-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#515-524\">Source</a><a href=\"#impl-Mul%3CUnit%3CComplex%3CT%3E%3E%3E-for-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#515-524\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#515-524\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Unit<Complex<T>>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CUnit%3CMatrix%3CT,+Const%3CD%3E,+Const%3C1%3E,+ArrayStorage%3CT,+D,+1%3E%3E%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#278-287\">Source</a><a href=\"#impl-Mul%3CUnit%3CMatrix%3CT,+Const%3CD%3E,+Const%3C1%3E,+ArrayStorage%3CT,+D,+1%3E%3E%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#278-287\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#278-287\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    right: <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Unit<Matrix<T, Const<D>, Const<1>, ArrayStorage<T, D, 1>>>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#141-154\">Source</a><a href=\"#impl-Mul-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#141-154\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#141-154\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26Isometry%3CT,+R,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#178-187\">Source</a><a href=\"#impl-MulAssign%3C%26Isometry%3CT,+R,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#178-187\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&'b Isometry<T, R, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26Translation%3CT,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#166-174\">Source</a><a href=\"#impl-MulAssign%3C%26Translation%3CT,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#166-174\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, D&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&'b Translation<T, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26Unit%3CComplex%3CT%3E%3E%3E-for-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#236-243\">Source</a><a href=\"#impl-MulAssign%3C%26Unit%3CComplex%3CT%3E%3E%3E-for-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedAddAssign.html\" title=\"trait simba::scalar::field::ClosedAddAssign\">ClosedAddAssign</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedMulAssign.html\" title=\"trait simba::scalar::field::ClosedMulAssign\">ClosedMulAssign</a> + <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#236-243\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&'b Unit<Complex<T>>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CTranslation%3CT,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#166-174\">Source</a><a href=\"#impl-MulAssign%3CTranslation%3CT,+D%3E%3E-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#166-174\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, D&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Translation<T, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CUnit%3CComplex%3CT%3E%3E%3E-for-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#236-243\">Source</a><a href=\"#impl-MulAssign%3CUnit%3CComplex%3CT%3E%3E%3E-for-Isometry%3CT,+Unit%3CComplex%3CT%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;, 2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedAddAssign.html\" title=\"trait simba::scalar::field::ClosedAddAssign\">ClosedAddAssign</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedMulAssign.html\" title=\"trait simba::scalar::field::ClosedMulAssign\">ClosedMulAssign</a> + <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#236-243\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt;&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Unit<Complex<T>>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#178-187\">Source</a><a href=\"#impl-MulAssign-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#178-187\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.85.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_construction.rs.html#80-82\">Source</a><a href=\"#impl-One-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_construction.rs.html#86\">Source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new identity isometry.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#118\">Source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#128-130\">Source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"num_traits/identities/trait.One.html#method.is_one\">Read more</a></div></details></div></details>","One","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#498-500\">Source</a><a href=\"#impl-PartialEq-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#503\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, right: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeEq-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#528-531\">Source</a><a href=\"#impl-RelativeEq-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"approx/relative_eq/trait.RelativeEq.html\" title=\"trait approx::relative_eq::RelativeEq\">RelativeEq</a> for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt; + <a class=\"trait\" href=\"approx/relative_eq/trait.RelativeEq.html\" title=\"trait approx::relative_eq::RelativeEq\">RelativeEq</a>&lt;Epsilon = &lt;T as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>&gt;,\n    &lt;T as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_relative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#534\">Source</a><a href=\"#method.default_max_relative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.default_max_relative\" class=\"fn\">default_max_relative</a>() -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a></h4></section></summary><div class='docblock'>The default relative tolerance for testing values that are far-apart. <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.default_max_relative\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#539-544\">Source</a><a href=\"#method.relative_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.relative_eq\" class=\"fn\">relative_eq</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;,\n    epsilon: &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n    max_relative: &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses a relative comparison if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/relative_eq.rs.html#22-27\">Source</a><a href=\"#method.relative_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#method.relative_ne\" class=\"fn\">relative_ne</a>(\n    &amp;self,\n    other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;Rhs</a>,\n    epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n    max_relative: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.relative_eq\" title=\"method approx::relative_eq::RelativeEq::relative_eq\"><code>RelativeEq::relative_eq</code></a>.</div></details></div></details>","RelativeEq","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdValue-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_simba.rs.html#7-11\">Source</a><a href=\"#impl-SimdValue-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a> for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&lt;SimdBool = &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type simba::simd::simd_value::SimdValue::SimdBool\">SimdBool</a>&gt; + <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt;,\n    &lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.LANES\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_simba.rs.html#13\">Source</a><a href=\"#associatedconstant.LANES\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"simba/simd/simd_value/trait.SimdValue.html#associatedconstant.LANES\" class=\"constant\">LANES</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a> = T::LANES</h4></section></summary><div class='docblock'>The number of lanes of this SIMD value.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Element\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_simba.rs.html#14\">Source</a><a href=\"#associatedtype.Element\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" class=\"associatedtype\">Element</a> = <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, &lt;R as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, D&gt;</h4></section></summary><div class='docblock'>The type of the elements of each lane of this SIMD value.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.SimdBool\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_simba.rs.html#15\">Source</a><a href=\"#associatedtype.SimdBool\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" class=\"associatedtype\">SimdBool</a> = &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type simba::simd::simd_value::SimdValue::SimdBool\">SimdBool</a></h4></section></summary><div class='docblock'>Type of the result of comparing two SIMD values like <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splat\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_simba.rs.html#18\">Source</a><a href=\"#method.splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.splat\" class=\"fn\">splat</a>(val: &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>Initializes an SIMD value with each lanes set to <code>val</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_simba.rs.html#23\">Source</a><a href=\"#method.extract\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.extract\" class=\"fn\">extract</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a></h4></section></summary><div class='docblock'>Extracts the i-th lane of <code>self</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.extract\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_simba.rs.html#28\">Source</a><a href=\"#method.extract_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.extract_unchecked\" class=\"fn\">extract_unchecked</a>(\n    &amp;self,\n    i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a></h4></section></summary><div class='docblock'>Extracts the i-th lane of <code>self</code> without bound-checking. <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.extract_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_simba.rs.html#36\">Source</a><a href=\"#method.replace\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.replace\" class=\"fn\">replace</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, val: &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>)</h4></section></summary><div class='docblock'>Replaces the i-th lane of <code>self</code> by <code>val</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.replace\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_simba.rs.html#42\">Source</a><a href=\"#method.replace_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.replace_unchecked\" class=\"fn\">replace_unchecked</a>(\n    &amp;mut self,\n    i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n    val: &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>,\n)</h4></section></summary><div class='docblock'>Replaces the i-th lane of <code>self</code> by <code>val</code> without bound-checking. <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.replace_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.select\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_simba.rs.html#48\">Source</a><a href=\"#method.select\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.select\" class=\"fn\">select</a>(\n    self,\n    cond: &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type simba::simd::simd_value::SimdValue::SimdBool\">SimdBool</a>,\n    other: <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;</h4></section></summary><div class='docblock'>Merges <code>self</code> and <code>other</code> depending on the lanes of <code>cond</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.select\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_lanes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/simd_value.rs.html#45-47\">Source</a><a href=\"#method.map_lanes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#method.map_lanes\" class=\"fn\">map_lanes</a>(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>) -&gt; Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Applies a function to each lane of <code>self</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#method.map_lanes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip_map_lanes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/simd_value.rs.html#64-70\">Source</a><a href=\"#method.zip_map_lanes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#method.zip_map_lanes\" class=\"fn\">zip_map_lanes</a>(\n    self,\n    b: Self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>) -&gt; Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>,\n) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Applies a function to each lane of <code>self</code> paired with the corresponding lane of <code>b</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#method.zip_map_lanes\">Read more</a></div></details></div></details>","SimdValue","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubsetOf%3CIsometry%3CT2,+R2,+D%3E%3E-for-Isometry%3CT1,+R1,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#25-30\">Source</a><a href=\"#impl-SubsetOf%3CIsometry%3CT2,+R2,+D%3E%3E-for-Isometry%3CT1,+R1,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, R1, R2, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T2, R2, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T1, R1, D&gt;<div class=\"where\">where\n    T1: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    T2: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a> + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;T1&gt;,\n    R1: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T1, D&gt; + <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;R2&gt;,\n    R2: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T2, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#33\">Source</a><a href=\"#method.to_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.to_superset\" class=\"fn\">to_superset</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T2, R2, D&gt;</h4></section></summary><div class='docblock'>The inclusion map: converts <code>self</code> to the equivalent element of its superset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_subset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#38\">Source</a><a href=\"#method.is_in_subset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.is_in_subset\" class=\"fn\">is_in_subset</a>(iso: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T2, R2, D&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>element</code> is actually part of the subset <code>Self</code> (and can be converted to it).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#44\">Source</a><a href=\"#method.from_superset_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.from_superset_unchecked\" class=\"fn\">from_superset_unchecked</a>(iso: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T2, R2, D&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T1, R1, D&gt;</h4></section></summary><div class='docblock'>Use with care! Same as <code>self.to_superset</code> but without any property checks. Always succeeds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/scalar/subset.rs.html#32\">Source</a><a href=\"#method.from_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\" class=\"fn\">from_superset</a>(element: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>The inverse inclusion map: attempts to construct <code>self</code> from the equivalent element of its\nsuperset. <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\">Read more</a></div></details></div></details>","SubsetOf<Isometry<T2, R2, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubsetOf%3CMatrix%3CT2,+%3CConst%3CD%3E+as+DimNameAdd%3CConst%3C1%3E%3E%3E::Output,+%3CConst%3CD%3E+as+DimNameAdd%3CConst%3C1%3E%3E%3E::Output,+%3CDefaultAllocator+as+Allocator%3C%3CConst%3CD%3E+as+DimNameAdd%3CConst%3C1%3E%3E%3E::Output,+%3CConst%3CD%3E+as+DimNameAdd%3CConst%3C1%3E%3E%3E::Output%3E%3E::Buffer%3CT2%3E%3E%3E-for-Isometry%3CT1,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#130-140\">Source</a><a href=\"#impl-SubsetOf%3CMatrix%3CT2,+%3CConst%3CD%3E+as+DimNameAdd%3CConst%3C1%3E%3E%3E::Output,+%3CConst%3CD%3E+as+DimNameAdd%3CConst%3C1%3E%3E%3E::Output,+%3CDefaultAllocator+as+Allocator%3C%3CConst%3CD%3E+as+DimNameAdd%3CConst%3C1%3E%3E%3E::Output,+%3CConst%3CD%3E+as+DimNameAdd%3CConst%3C1%3E%3E%3E::Output%3E%3E::Buffer%3CT2%3E%3E%3E-for-Isometry%3CT1,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T2, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&lt;T2&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T1, R, D&gt;<div class=\"where\">where\n    T1: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    T2: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a> + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;T1&gt;,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T1, D&gt; + <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T1, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&lt;T1&gt;&gt;&gt; + <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T2, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&lt;T2&gt;&gt;&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt; + <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimMin.html\" title=\"trait nalgebra::base::dimension::DimMin\">DimMin</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, Output = <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, Buffer&lt;T1&gt; = <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T1, D, 1&gt;&gt; + <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#143\">Source</a><a href=\"#method.to_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.to_superset\" class=\"fn\">to_superset</a>(\n    &amp;self,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T2, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&lt;T2&gt;&gt;</h4></section></summary><div class='docblock'>The inclusion map: converts <code>self</code> to the equivalent element of its superset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_subset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#148\">Source</a><a href=\"#method.is_in_subset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.is_in_subset\" class=\"fn\">is_in_subset</a>(\n    m: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T2, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&lt;T2&gt;&gt;,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>element</code> is actually part of the subset <code>Self</code> (and can be converted to it).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#161-163\">Source</a><a href=\"#method.from_superset_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.from_superset_unchecked\" class=\"fn\">from_superset_unchecked</a>(\n    m: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T2, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&lt;T2&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T1, R, D&gt;</h4></section></summary><div class='docblock'>Use with care! Same as <code>self.to_superset</code> but without any property checks. Always succeeds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/scalar/subset.rs.html#32\">Source</a><a href=\"#method.from_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\" class=\"fn\">from_superset</a>(element: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>The inverse inclusion map: attempts to construct <code>self</code> from the equivalent element of its\nsuperset. <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\">Read more</a></div></details></div></details>","SubsetOf<Matrix<T2, <Const<D> as DimNameAdd<Const<1>>>::Output, <Const<D> as DimNameAdd<Const<1>>>::Output, <DefaultAllocator as Allocator<<Const<D> as DimNameAdd<Const<1>>>::Output, <Const<D> as DimNameAdd<Const<1>>>::Output>>::Buffer<T2>>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubsetOf%3CSimilarity%3CT2,+R2,+D%3E%3E-for-Isometry%3CT1,+R1,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#76-81\">Source</a><a href=\"#impl-SubsetOf%3CSimilarity%3CT2,+R2,+D%3E%3E-for-Isometry%3CT1,+R1,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, R1, R2, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T2, R2, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T1, R1, D&gt;<div class=\"where\">where\n    T1: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    T2: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a> + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;T1&gt;,\n    R1: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T1, D&gt; + <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;R2&gt;,\n    R2: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T2, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#84\">Source</a><a href=\"#method.to_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.to_superset\" class=\"fn\">to_superset</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T2, R2, D&gt;</h4></section></summary><div class='docblock'>The inclusion map: converts <code>self</code> to the equivalent element of its superset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_subset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#89\">Source</a><a href=\"#method.is_in_subset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.is_in_subset\" class=\"fn\">is_in_subset</a>(sim: &amp;<a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T2, R2, D&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>element</code> is actually part of the subset <code>Self</code> (and can be converted to it).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#94\">Source</a><a href=\"#method.from_superset_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.from_superset_unchecked\" class=\"fn\">from_superset_unchecked</a>(sim: &amp;<a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T2, R2, D&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T1, R1, D&gt;</h4></section></summary><div class='docblock'>Use with care! Same as <code>self.to_superset</code> but without any property checks. Always succeeds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/scalar/subset.rs.html#32\">Source</a><a href=\"#method.from_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\" class=\"fn\">from_superset</a>(element: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>The inverse inclusion map: attempts to construct <code>self</code> from the equivalent element of its\nsuperset. <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\">Read more</a></div></details></div></details>","SubsetOf<Similarity<T2, R2, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubsetOf%3CTransform%3CT2,+C,+D%3E%3E-for-Isometry%3CT1,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#99-108\">Source</a><a href=\"#impl-SubsetOf%3CTransform%3CT2,+C,+D%3E%3E-for-Isometry%3CT1,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, R, C, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T2, C, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T1, R, D&gt;<div class=\"where\">where\n    T1: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    T2: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a> + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;T1&gt;,\n    C: <a class=\"trait\" href=\"nalgebra/geometry/transform/trait.SuperTCategoryOf.html\" title=\"trait nalgebra::geometry::transform::SuperTCategoryOf\">SuperTCategoryOf</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/transform/enum.TAffine.html\" title=\"enum nalgebra::geometry::transform::TAffine\">TAffine</a>&gt;,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T1, D&gt; + <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T1, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&lt;T1&gt;&gt;&gt; + <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T2, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&lt;T2&gt;&gt;&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt; + <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimMin.html\" title=\"trait nalgebra::base::dimension::DimMin\">DimMin</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, Output = <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#115\">Source</a><a href=\"#method.to_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.to_superset\" class=\"fn\">to_superset</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T2, C, D&gt;</h4></section></summary><div class='docblock'>The inclusion map: converts <code>self</code> to the equivalent element of its superset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_subset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#120\">Source</a><a href=\"#method.is_in_subset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.is_in_subset\" class=\"fn\">is_in_subset</a>(t: &amp;<a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T2, C, D&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>element</code> is actually part of the subset <code>Self</code> (and can be converted to it).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_conversion.rs.html#125\">Source</a><a href=\"#method.from_superset_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.from_superset_unchecked\" class=\"fn\">from_superset_unchecked</a>(t: &amp;<a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T2, C, D&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T1, R, D&gt;</h4></section></summary><div class='docblock'>Use with care! Same as <code>self.to_superset</code> but without any property checks. Always succeeds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/scalar/subset.rs.html#32\">Source</a><a href=\"#method.from_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\" class=\"fn\">from_superset</a>(element: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>The inverse inclusion map: attempts to construct <code>self</code> from the equivalent element of its\nsuperset. <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\">Read more</a></div></details></div></details>","SubsetOf<Transform<T2, C, D>>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CDMat3%3E-for-Isometry%3Cf64,+Unit%3CComplex%3Cf64%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_isometry.rs.html#131\">Source</a><a href=\"#impl-TryFrom%3CDMat3%3E-for-Isometry%3Cf64,+Unit%3CComplex%3Cf64%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"glam/f64/dmat3/struct.DMat3.html\" title=\"struct glam::f64::dmat3::DMat3\">DMat3</a>&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f64.html\">f64</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f64.html\">f64</a>&gt;&gt;, 2&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_isometry.rs.html#132\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_isometry.rs.html#134\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    mat3: <a class=\"struct\" href=\"glam/f64/dmat3/struct.DMat3.html\" title=\"struct glam::f64::dmat3::DMat3\">DMat3</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f64.html\">f64</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f64.html\">f64</a>&gt;&gt;, 2&gt;, &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f64.html\">f64</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f64.html\">f64</a>&gt;&gt;, 2&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"glam/f64/dmat3/struct.DMat3.html\" title=\"struct glam::f64::dmat3::DMat3\">DMat3</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<DMat3>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CMat3%3E-for-Isometry%3Cf32,+Unit%3CComplex%3Cf32%3E%3E,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_isometry.rs.html#115\">Source</a><a href=\"#impl-TryFrom%3CMat3%3E-for-Isometry%3Cf32,+Unit%3CComplex%3Cf32%3E%3E,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"glam/f32/mat3/struct.Mat3.html\" title=\"struct glam::f32::mat3::Mat3\">Mat3</a>&gt; for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 2&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_isometry.rs.html#116\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_isometry.rs.html#118\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    mat3: <a class=\"struct\" href=\"glam/f32/mat3/struct.Mat3.html\" title=\"struct glam::f32::mat3::Mat3\">Mat3</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 2&gt;, &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 2&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"glam/f32/mat3/struct.Mat3.html\" title=\"struct glam::f32::mat3::Mat3\">Mat3</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Mat3>","rapier2d::math::Isometry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UlpsEq-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#553-556\">Source</a><a href=\"#impl-UlpsEq-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"approx/ulps_eq/trait.UlpsEq.html\" title=\"trait approx::ulps_eq::UlpsEq\">UlpsEq</a> for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt; + <a class=\"trait\" href=\"approx/ulps_eq/trait.UlpsEq.html\" title=\"trait approx::ulps_eq::UlpsEq\">UlpsEq</a>&lt;Epsilon = &lt;T as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>&gt;,\n    &lt;T as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_ulps\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#559\">Source</a><a href=\"#method.default_max_ulps\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.default_max_ulps\" class=\"fn\">default_max_ulps</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The default ULPs to tolerate when testing values that are far-apart. <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.default_max_ulps\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#564\">Source</a><a href=\"#method.ulps_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.ulps_eq\" class=\"fn\">ulps_eq</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;,\n    epsilon: &lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt; as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n    max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses units in the last place (ULP) if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/ulps_eq.rs.html#23\">Source</a><a href=\"#method.ulps_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#method.ulps_ne\" class=\"fn\">ulps_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;Rhs</a>, epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>, max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.ulps_eq\" title=\"method approx::ulps_eq::UlpsEq::ulps_eq\"><code>UlpsEq::ulps_eq</code></a>.</div></details></div></details>","UlpsEq","rapier2d::math::Isometry"],["<section id=\"impl-Copy-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#58\">Source</a><a href=\"#impl-Copy-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","rapier2d::math::Isometry"],["<section id=\"impl-Eq-for-Isometry%3CT,+R,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry.rs.html#493-494\">Source</a><a href=\"#impl-Eq-for-Isometry%3CT,+R,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, R, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","rapier2d::math::Isometry"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[393271]}