(function() {
    var type_impls = Object.fromEntries([["rapier2d",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Aabb\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#33\">Source</a><a href=\"#impl-Aabb\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#95\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.new\" class=\"fn\">new</a>(mins: <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;, maxs: <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;) -&gt; <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h4></section></summary><div class=\"docblock\"><p>Creates a new Aabb.</p>\n<h5 id=\"arguments\"><a class=\"doc-anchor\" href=\"#arguments\">ยง</a>Arguments:</h5>\n<ul>\n<li><code>mins</code> - position of the point with the smallest coordinates.</li>\n<li><code>maxs</code> - position of the point with the highest coordinates. Each component of <code>mins</code>\nmust be smaller than the related components of <code>maxs</code>.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_invalid\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#103\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.new_invalid\" class=\"fn\">new_invalid</a>() -&gt; <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h4></section></summary><div class=\"docblock\"><p>Creates an invalid <code>Aabb</code> with <code>mins</code> components set to <code>Real::max_values</code> and <code>maxs</code>components set to <code>-Real::max_values</code>.</p>\n<p>This is often used as the initial values of some <code>Aabb</code> merging algorithms.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_half_extents\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#112\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.from_half_extents\" class=\"fn\">from_half_extents</a>(\n    center: <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;,\n    half_extents: <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, 2, 1&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h4></section></summary><div class=\"docblock\"><p>Creates a new <code>Aabb</code> from its center and its half-extents.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_points\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#117-119\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.from_points\" class=\"fn\">from_points</a>&lt;'a, I&gt;(pts: I) -&gt; <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new <code>Aabb</code> from a set of points.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.center\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#126\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.center\" class=\"fn\">center</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>The center of this <code>Aabb</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.half_extents\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#132\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.half_extents\" class=\"fn\">half_extents</a>(\n    &amp;self,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, 2, 1&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>The half extents of this <code>Aabb</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.volume\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#139\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.volume\" class=\"fn\">volume</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>The volume of this <code>Aabb</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extents\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#149\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.extents\" class=\"fn\">extents</a>(\n    &amp;self,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, 2, 1&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>The extents of this <code>Aabb</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_point\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#154\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.take_point\" class=\"fn\">take_point</a>(&amp;mut self, pt: <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;)</h4></section></summary><div class=\"docblock\"><p>Enlarges this <code>Aabb</code> so it also contains the point <code>pt</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_by\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#161\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.transform_by\" class=\"fn\">transform_by</a>(&amp;self, m: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 2&gt;) -&gt; <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h4></section></summary><div class=\"docblock\"><p>Computes the <code>Aabb</code> bounding <code>self</code> transformed by <code>m</code>.</p>\n</div></details><section id=\"method.scaled\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#170\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.scaled\" class=\"fn\">scaled</a>(\n    self,\n    scale: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, 2, 1&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.scaled_wrt_center\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#187\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.scaled_wrt_center\" class=\"fn\">scaled_wrt_center</a>(\n    self,\n    scale: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, 2, 1&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h4></section></summary><div class=\"docblock\"><p>Returns an AABB with the same center as <code>self</code> but with extents scaled by <code>scale</code>.</p>\n<h5 id=\"parameters\"><a class=\"doc-anchor\" href=\"#parameters\">ยง</a>Parameters</h5>\n<ul>\n<li><code>scale</code>: the scaling factor. It can be non-uniform and/or negative. The AABB being\nsymmetric wrt. its center, a negative scale value has the same effect as scaling\nby its absolute value.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bounding_sphere\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#198\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.bounding_sphere\" class=\"fn\">bounding_sphere</a>(&amp;self) -&gt; <a class=\"struct\" href=\"parry2d/bounding_volume/bounding_sphere/struct.BoundingSphere.html\" title=\"struct parry2d::bounding_volume::bounding_sphere::BoundingSphere\">BoundingSphere</a></h4></section></summary><div class=\"docblock\"><p>The smallest bounding sphere containing this <code>Aabb</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_local_point\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#206\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.contains_local_point\" class=\"fn\">contains_local_point</a>(&amp;self, point: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does this AABB contains a point expressed in the same coordinate frame as <code>self</code>?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersects_moving_aabb\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#218\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.intersects_moving_aabb\" class=\"fn\">intersects_moving_aabb</a>(\n    &amp;self,\n    aabb2: &amp;<a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a>,\n    vel12: <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, 2, 1&gt;&gt;,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Does this AABB intersects an AABB <code>aabb2</code> moving at velocity <code>vel12</code> relative to <code>self</code>?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersection\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#230\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.intersection\" class=\"fn\">intersection</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the intersection of this <code>Aabb</code> and another one.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.difference\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#249\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.difference\" class=\"fn\">difference</a>(\n    &amp;self,\n    rhs: &amp;<a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a>,\n) -&gt; <a class=\"struct\" href=\"arrayvec/arrayvec/struct.ArrayVec.html\" title=\"struct arrayvec::arrayvec::ArrayVec\">ArrayVec</a>&lt;<a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a>, parry2d::::bounding_volume::aabb::{impl#0}::difference::{constant#0}&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the difference between this <code>Aabb</code> and <code>rhs</code>.</p>\n<p>Removing another <code>Aabb</code> from <code>self</code> will result in zero, one, or up to 4 (in 2D) or 8 (in 3D)\nnew smaller Aabbs.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.difference_with_cut_sequence\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#271-274\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.difference_with_cut_sequence\" class=\"fn\">difference_with_cut_sequence</a>(\n    &amp;self,\n    rhs: &amp;<a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a>,\n) -&gt; (<a class=\"struct\" href=\"arrayvec/arrayvec/struct.ArrayVec.html\" title=\"struct arrayvec::arrayvec::ArrayVec\">ArrayVec</a>&lt;<a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a>, parry2d::::bounding_volume::aabb::{impl#0}::difference_with_cut_sequence::{constant#0}&gt;, <a class=\"struct\" href=\"arrayvec/arrayvec/struct.ArrayVec.html\" title=\"struct arrayvec::arrayvec::ArrayVec\">ArrayVec</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i8.html\">i8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>), parry2d::::bounding_volume::aabb::{impl#0}::difference_with_cut_sequence::{constant#1}&gt;)</h4></section></summary><div class=\"docblock\"><p>Returns the difference between this <code>Aabb</code> and <code>rhs</code>.</p>\n<p>Removing another <code>Aabb</code> from <code>self</code> will result in zero, one, or up to 4 (in 2D) or 8 (in 3D)\nnew smaller Aabbs.</p>\n<h5 id=\"return\"><a class=\"doc-anchor\" href=\"#return\">ยง</a>Return</h5>\n<p>This returns a pair where the first item are the new Aabbs and the second item is\nthe sequence of cuts applied to <code>self</code> to obtain the new Aabbs. Each cut is performed\nalong one axis identified by <code>-1, -2, -3</code> for <code>-X, -Y, -Z</code> and <code>1, 2, 3</code> for <code>+X, +Y, +Z</code>, and\nthe planeโs bias.</p>\n<p>The cuts are applied sequentially. For example, if <code>result.1[0]</code> contains <code>1</code>, then it means\nthat <code>result.0[0]</code> is equal to the piece of <code>self</code> lying in the negative half-space delimited\nby the plane with outward normal <code>+X</code>. Then, the other piece of <code>self</code> generated by this cut\n(i.e. the piece of <code>self</code> lying in the positive half-space delimited by the plane with outward\nnormal <code>+X</code>) is the one that will be affected by the next cut.</p>\n<p>The returned cut sequence will be empty if the aabbs are disjoint.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.vertices\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#314\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.vertices\" class=\"fn\">vertices</a>(&amp;self) -&gt; [<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">4</a>]</h4></section></summary><div class=\"docblock\"><p>Computes the vertices of this <code>Aabb</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_at_center\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#342\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.split_at_center\" class=\"fn\">split_at_center</a>(&amp;self) -&gt; [<a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">4</a>]</h4></section></summary><div class=\"docblock\"><p>Splits this <code>Aabb</code> at its center, into four parts (as in a quad-tree).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.project_on_axis\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#402\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.project_on_axis\" class=\"fn\">project_on_axis</a>(\n    &amp;self,\n    axis: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, 2, 1&gt;&gt;&gt;,\n) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>)</h4></section></summary><div class=\"docblock\"><p>Projects every point of <code>Aabb</code> on an arbitrary axis.</p>\n</div></details></div></details>",0,"rapier2d::geometry::Aabb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Aabb\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry2d/query/clip/clip_aabb_line.rs.html#7\">Source</a><a href=\"#impl-Aabb\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clip_segment\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/query/clip/clip_aabb_line.rs.html#12\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.clip_segment\" class=\"fn\">clip_segment</a>(\n    &amp;self,\n    pa: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;,\n    pb: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"parry2d/shape/segment/struct.Segment.html\" title=\"struct parry2d::shape::segment::Segment\">Segment</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the intersection of a segment with this Aabb.</p>\n<p>Returns <code>None</code> if there is no intersection.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clip_line_parameters\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/query/clip/clip_aabb_line.rs.html#23-27\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.clip_line_parameters\" class=\"fn\">clip_line_parameters</a>(\n    &amp;self,\n    orig: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;,\n    dir: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, 2, 1&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the parameters of the two intersection points between a line and this Aabb.</p>\n<p>The parameters are such that the point are given by <code>orig + dir * parameter</code>.\nReturns <code>None</code> if there is no intersection.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clip_line\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/query/clip/clip_aabb_line.rs.html#35\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.clip_line\" class=\"fn\">clip_line</a>(\n    &amp;self,\n    orig: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;,\n    dir: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, 2, 1&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"parry2d/shape/segment/struct.Segment.html\" title=\"struct parry2d::shape::segment::Segment\">Segment</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the intersection segment between a line and this Aabb.</p>\n<p>Returns <code>None</code> if there is no intersection.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clip_ray_parameters\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/query/clip/clip_aabb_line.rs.html#45\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.clip_ray_parameters\" class=\"fn\">clip_ray_parameters</a>(&amp;self, ray: &amp;<a class=\"struct\" href=\"parry2d/query/ray/ray/struct.Ray.html\" title=\"struct parry2d::query::ray::ray::Ray\">Ray</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the parameters of the two intersection points between a ray and this Aabb.</p>\n<p>The parameters are such that the point are given by <code>ray.orig + ray.dir * parameter</code>.\nReturns <code>None</code> if there is no intersection.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clip_ray\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/query/clip/clip_aabb_line.rs.html#63\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.clip_ray\" class=\"fn\">clip_ray</a>(&amp;self, ray: &amp;<a class=\"struct\" href=\"parry2d/query/ray/ray/struct.Ray.html\" title=\"struct parry2d::query::ray::ray::Ray\">Ray</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"parry2d/shape/segment/struct.Segment.html\" title=\"struct parry2d::shape::segment::Segment\">Segment</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the intersection segment between a ray and this Aabb.</p>\n<p>Returns <code>None</code> if there is no intersection.</p>\n</div></details></div></details>",0,"rapier2d::geometry::Aabb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Aabb\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry2d/query/clip/clip_aabb_polygon.rs.html#4\">Source</a><a href=\"#impl-Aabb\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clip_polygon\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/query/clip/clip_aabb_polygon.rs.html#12\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.clip_polygon\" class=\"fn\">clip_polygon</a>(&amp;self, points: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;&gt;)</h4></section></summary><div class=\"docblock\"><p>Computes the intersections between this Aabb and the given polygon.</p>\n<p>The results is written into <code>points</code> directly. The input points are\nassumed to form a convex polygon where all points lie on the same plane.\nIn order to avoid internal allocations, uses <code>self.clip_polygon_with_workspace</code>\ninstead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clip_polygon_with_workspace\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/query/clip/clip_aabb_polygon.rs.html#22-26\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.clip_polygon_with_workspace\" class=\"fn\">clip_polygon_with_workspace</a>(\n    &amp;self,\n    points: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;&gt;,\n    workspace: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>Computes the intersections between this Aabb and the given polygon.</p>\n<p>The results is written into <code>points</code> directly. The input points are\nassumed to form a convex polygon where all points lie on the same plane.</p>\n</div></details></div></details>",0,"rapier2d::geometry::Aabb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Aabb\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry2d/query/split/split_aabb.rs.html#5\">Source</a><a href=\"#impl-Aabb\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.canonical_split\" class=\"method\"><a class=\"src rightside\" href=\"src/parry2d/query/split/split_aabb.rs.html#16\">Source</a><h4 class=\"code-header\">pub fn <a href=\"parry2d/bounding_volume/aabb/struct.Aabb.html#tymethod.canonical_split\" class=\"fn\">canonical_split</a>(\n    &amp;self,\n    axis: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n    bias: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>,\n    epsilon: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>,\n) -&gt; <a class=\"enum\" href=\"parry2d/query/split/split/enum.SplitResult.html\" title=\"enum parry2d::query::split::split::SplitResult\">SplitResult</a>&lt;<a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Splits this <code>Aabb</code> along the given canonical axis.</p>\n<p>This will split the <code>Aabb</code> by a plane with a normal with itโs <code>axis</code>-th component set to 1.\nThe splitting plane is shifted wrt. the origin by the <code>bias</code> (i.e. it passes through the point\nequal to <code>normal * bias</code>).</p>\n<h5 id=\"result\"><a class=\"doc-anchor\" href=\"#result\">ยง</a>Result</h5>\n<p>Returns the result of the split. The first <code>Aabb</code> returned is the piece lying on the negative\nhalf-space delimited by the splitting plane. The second <code>Aabb</code> returned is the piece lying on the\npositive half-space delimited by the splitting plane.</p>\n</div></details></div></details>",0,"rapier2d::geometry::Aabb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BoundingVolume-for-Aabb\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#545\">Source</a><a href=\"#impl-BoundingVolume-for-Aabb\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rapier2d/geometry/trait.BoundingVolume.html\" title=\"trait rapier2d::geometry::BoundingVolume\">BoundingVolume</a> for <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.center\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#547\">Source</a><a href=\"#method.center\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.BoundingVolume.html#tymethod.center\" class=\"fn\">center</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;</h4></section></summary><div class='docblock'>Returns a point inside of this bounding volume. This is ideally its center.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersects\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#552\">Source</a><a href=\"#method.intersects\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.BoundingVolume.html#tymethod.intersects\" class=\"fn\">intersects</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if this bounding volume intersect with another one.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#557\">Source</a><a href=\"#method.contains\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.BoundingVolume.html#tymethod.contains\" class=\"fn\">contains</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if this bounding volume contains another one.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#562\">Source</a><a href=\"#method.merge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.BoundingVolume.html#tymethod.merge\" class=\"fn\">merge</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a>)</h4></section></summary><div class='docblock'>Merges this bounding volume with another one. The merge is done in-place.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merged\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#568\">Source</a><a href=\"#method.merged\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.BoundingVolume.html#tymethod.merged\" class=\"fn\">merged</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a>) -&gt; <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h4></section></summary><div class='docblock'>Merges this bounding volume with another one.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.loosen\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#576\">Source</a><a href=\"#method.loosen\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.BoundingVolume.html#tymethod.loosen\" class=\"fn\">loosen</a>(&amp;mut self, amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>)</h4></section></summary><div class='docblock'>Enlarges this bounding volume.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.loosened\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#583\">Source</a><a href=\"#method.loosened\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.BoundingVolume.html#tymethod.loosened\" class=\"fn\">loosened</a>(&amp;self, amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h4></section></summary><div class='docblock'>Creates a new, enlarged version, of this bounding volume.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tighten\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#592\">Source</a><a href=\"#method.tighten\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.BoundingVolume.html#tymethod.tighten\" class=\"fn\">tighten</a>(&amp;mut self, amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>)</h4></section></summary><div class='docblock'>Tighten this bounding volume.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tightened\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#603\">Source</a><a href=\"#method.tightened\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.BoundingVolume.html#tymethod.tightened\" class=\"fn\">tightened</a>(&amp;self, amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h4></section></summary><div class='docblock'>Creates a new, tightened version, of this bounding volume.</div></details></div></details>","BoundingVolume","rapier2d::geometry::Aabb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Aabb\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#26\">Source</a><a href=\"#impl-Clone-for-Aabb\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#26\">Source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rapier2d::geometry::Aabb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Aabb\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#26\">Source</a><a href=\"#impl-Debug-for-Aabb\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#26\">Source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rapier2d::geometry::Aabb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Aabb\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#26\">Source</a><a href=\"#impl-PartialEq-for-Aabb\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#26\">Source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","rapier2d::geometry::Aabb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PointQuery-for-Aabb\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry2d/query/point/point_aabb.rs.html#60\">Source</a><a href=\"#impl-PointQuery-for-Aabb\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rapier2d/geometry/trait.PointQuery.html\" title=\"trait rapier2d::geometry::PointQuery\">PointQuery</a> for <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.project_local_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/query/point/point_aabb.rs.html#62\">Source</a><a href=\"#method.project_local_point\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.PointQuery.html#tymethod.project_local_point\" class=\"fn\">project_local_point</a>(\n    &amp;self,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"struct\" href=\"parry2d/query/point/point_query/struct.PointProjection.html\" title=\"struct parry2d::query::point::point_query::PointProjection\">PointProjection</a></h4></section></summary><div class='docblock'>Projects a point on <code>self</code>. <a href=\"rapier2d/geometry/trait.PointQuery.html#tymethod.project_local_point\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.project_local_point_and_get_feature\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/query/point/point_aabb.rs.html#70-73\">Source</a><a href=\"#method.project_local_point_and_get_feature\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.PointQuery.html#tymethod.project_local_point_and_get_feature\" class=\"fn\">project_local_point_and_get_feature</a>(\n    &amp;self,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;,\n) -&gt; (<a class=\"struct\" href=\"parry2d/query/point/point_query/struct.PointProjection.html\" title=\"struct parry2d::query::point::point_query::PointProjection\">PointProjection</a>, <a class=\"enum\" href=\"rapier2d/geometry/enum.FeatureId.html\" title=\"enum rapier2d::geometry::FeatureId\">FeatureId</a>)</h4></section></summary><div class='docblock'>Projects a point on the boundary of <code>self</code> and returns the id of the\nfeature the point was projected on.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.distance_to_local_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/query/point/point_aabb.rs.html#135\">Source</a><a href=\"#method.distance_to_local_point\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.PointQuery.html#method.distance_to_local_point\" class=\"fn\">distance_to_local_point</a>(\n    &amp;self,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Computes the minimal distance between a point and <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.project_local_point_with_max_dist\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/query/point/point_query.rs.html#48-53\">Source</a><a href=\"#method.project_local_point_with_max_dist\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.PointQuery.html#method.project_local_point_with_max_dist\" class=\"fn\">project_local_point_with_max_dist</a>(\n    &amp;self,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,\n    max_dist: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"parry2d/query/point/point_query/struct.PointProjection.html\" title=\"struct parry2d::query::point::point_query::PointProjection\">PointProjection</a>&gt;</h4></section></summary><div class='docblock'>Projects a point on <code>self</code>, unless the projection lies further than the given max distance. <a href=\"rapier2d/geometry/trait.PointQuery.html#method.project_local_point_with_max_dist\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.project_point_with_max_dist\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/query/point/point_query.rs.html#63-69\">Source</a><a href=\"#method.project_point_with_max_dist\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.PointQuery.html#method.project_point_with_max_dist\" class=\"fn\">project_point_with_max_dist</a>(\n    &amp;self,\n    m: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 2&gt;,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,\n    max_dist: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"parry2d/query/point/point_query/struct.PointProjection.html\" title=\"struct parry2d::query::point::point_query::PointProjection\">PointProjection</a>&gt;</h4></section></summary><div class='docblock'>Projects a point on <code>self</code> transformed by <code>m</code>, unless the projection lies further than the given max distance.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_local_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/query/point/point_query.rs.html#97\">Source</a><a href=\"#method.contains_local_point\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.PointQuery.html#method.contains_local_point\" class=\"fn\">contains_local_point</a>(&amp;self, pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests if the given point is inside of <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.project_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/query/point/point_query.rs.html#102\">Source</a><a href=\"#method.project_point\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.PointQuery.html#method.project_point\" class=\"fn\">project_point</a>(\n    &amp;self,\n    m: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 2&gt;,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"struct\" href=\"parry2d/query/point/point_query/struct.PointProjection.html\" title=\"struct parry2d::query::point::point_query::PointProjection\">PointProjection</a></h4></section></summary><div class='docblock'>Projects a point on <code>self</code> transformed by <code>m</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.distance_to_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/query/point/point_query.rs.html#109\">Source</a><a href=\"#method.distance_to_point\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.PointQuery.html#method.distance_to_point\" class=\"fn\">distance_to_point</a>(\n    &amp;self,\n    m: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 2&gt;,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Computes the minimal distance between a point and <code>self</code> transformed by <code>m</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.project_point_and_get_feature\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/query/point/point_query.rs.html#115-119\">Source</a><a href=\"#method.project_point_and_get_feature\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.PointQuery.html#method.project_point_and_get_feature\" class=\"fn\">project_point_and_get_feature</a>(\n    &amp;self,\n    m: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 2&gt;,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;,\n) -&gt; (<a class=\"struct\" href=\"parry2d/query/point/point_query/struct.PointProjection.html\" title=\"struct parry2d::query::point::point_query::PointProjection\">PointProjection</a>, <a class=\"enum\" href=\"rapier2d/geometry/enum.FeatureId.html\" title=\"enum rapier2d::geometry::FeatureId\">FeatureId</a>)</h4></section></summary><div class='docblock'>Projects a point on the boundary of <code>self</code> transformed by <code>m</code> and returns the id of the\nfeature the point was projected on.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/query/point/point_query.rs.html#126\">Source</a><a href=\"#method.contains_point\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.PointQuery.html#method.contains_point\" class=\"fn\">contains_point</a>(\n    &amp;self,\n    m: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 2&gt;,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;2&gt;&gt;,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests if the given point is inside of <code>self</code> transformed by <code>m</code>.</div></details></div></details>","PointQuery","rapier2d::geometry::Aabb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RayCast-for-Aabb\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry2d/query/ray/ray_aabb.rs.html#11\">Source</a><a href=\"#impl-RayCast-for-Aabb\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rapier2d/geometry/trait.RayCast.html\" title=\"trait rapier2d::geometry::RayCast\">RayCast</a> for <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_local_ray\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/query/ray/ray_aabb.rs.html#12\">Source</a><a href=\"#method.cast_local_ray\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.RayCast.html#method.cast_local_ray\" class=\"fn\">cast_local_ray</a>(\n    &amp;self,\n    ray: &amp;<a class=\"struct\" href=\"parry2d/query/ray/ray/struct.Ray.html\" title=\"struct parry2d::query::ray::ray::Ray\">Ray</a>,\n    max_time_of_impact: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Computes the time of impact between this transform shape and a ray.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_local_ray_and_get_normal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/query/ray/ray_aabb.rs.html#52-57\">Source</a><a href=\"#method.cast_local_ray_and_get_normal\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.RayCast.html#tymethod.cast_local_ray_and_get_normal\" class=\"fn\">cast_local_ray_and_get_normal</a>(\n    &amp;self,\n    ray: &amp;<a class=\"struct\" href=\"parry2d/query/ray/ray/struct.Ray.html\" title=\"struct parry2d::query::ray::ray::Ray\">Ray</a>,\n    max_time_of_impact: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"parry2d/query/ray/ray/struct.RayIntersection.html\" title=\"struct parry2d::query::ray::ray::RayIntersection\">RayIntersection</a>&gt;</h4></section></summary><div class='docblock'>Computes the time of impact, and normal between this transformed shape and a ray.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersects_local_ray\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/query/ray/ray.rs.html#140\">Source</a><a href=\"#method.intersects_local_ray\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.RayCast.html#method.intersects_local_ray\" class=\"fn\">intersects_local_ray</a>(&amp;self, ray: &amp;<a class=\"struct\" href=\"parry2d/query/ray/ray/struct.Ray.html\" title=\"struct parry2d::query::ray::ray::Ray\">Ray</a>, max_time_of_impact: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests whether a ray intersects this transformed shape.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_ray\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/query/ray/ray.rs.html#145-151\">Source</a><a href=\"#method.cast_ray\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.RayCast.html#method.cast_ray\" class=\"fn\">cast_ray</a>(\n    &amp;self,\n    m: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 2&gt;,\n    ray: &amp;<a class=\"struct\" href=\"parry2d/query/ray/ray/struct.Ray.html\" title=\"struct parry2d::query::ray::ray::Ray\">Ray</a>,\n    max_time_of_impact: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Computes the time of impact between this transform shape and a ray.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_ray_and_get_normal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/query/ray/ray.rs.html#157-163\">Source</a><a href=\"#method.cast_ray_and_get_normal\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.RayCast.html#method.cast_ray_and_get_normal\" class=\"fn\">cast_ray_and_get_normal</a>(\n    &amp;self,\n    m: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 2&gt;,\n    ray: &amp;<a class=\"struct\" href=\"parry2d/query/ray/ray/struct.Ray.html\" title=\"struct parry2d::query::ray::ray::Ray\">Ray</a>,\n    max_time_of_impact: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"parry2d/query/ray/ray/struct.RayIntersection.html\" title=\"struct parry2d::query::ray::ray::RayIntersection\">RayIntersection</a>&gt;</h4></section></summary><div class='docblock'>Computes the time of impact, and normal between this transformed shape and a ray.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersects_ray\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry2d/query/ray/ray.rs.html#171\">Source</a><a href=\"#method.intersects_ray\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"rapier2d/geometry/trait.RayCast.html#method.intersects_ray\" class=\"fn\">intersects_ray</a>(\n    &amp;self,\n    m: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 2&gt;,\n    ray: &amp;<a class=\"struct\" href=\"parry2d/query/ray/ray/struct.Ray.html\" title=\"struct parry2d::query::ray::ray::Ray\">Ray</a>,\n    max_time_of_impact: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests whether a ray intersects this transformed shape.</div></details></div></details>","RayCast","rapier2d::geometry::Aabb"],["<section id=\"impl-Copy-for-Aabb\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#26\">Source</a><a href=\"#impl-Copy-for-Aabb\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h3></section>","Copy","rapier2d::geometry::Aabb"],["<section id=\"impl-StructuralPartialEq-for-Aabb\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry2d/bounding_volume/aabb.rs.html#26\">Source</a><a href=\"#impl-StructuralPartialEq-for-Aabb\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"parry2d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry2d::bounding_volume::aabb::Aabb\">Aabb</a></h3></section>","StructuralPartialEq","rapier2d::geometry::Aabb"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[82144]}