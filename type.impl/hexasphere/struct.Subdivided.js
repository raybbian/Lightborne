(function() {
    var type_impls = Object.fromEntries([["hexasphere",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Subdivided%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1054\">Source</a><a href=\"#impl-Clone-for-Subdivided%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"hexasphere/trait.BaseShape.html\" title=\"trait hexasphere::BaseShape\">BaseShape</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"hexasphere/struct.Subdivided.html\" title=\"struct hexasphere::Subdivided\">Subdivided</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1054\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"hexasphere/struct.Subdivided.html\" title=\"struct hexasphere::Subdivided\">Subdivided</a>&lt;T, S&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","hexasphere::shapes::IcoSphere","hexasphere::shapes::NormIcoSphere","hexasphere::shapes::TetraSphere","hexasphere::shapes::TrianglePlane","hexasphere::shapes::SquarePlane","hexasphere::shapes::CubeSphere"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Subdivided%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1064-1439\">Source</a><a href=\"#impl-Subdivided%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S: <a class=\"trait\" href=\"hexasphere/trait.BaseShape.html\" title=\"trait hexasphere::BaseShape\">BaseShape</a>&gt; <a class=\"struct\" href=\"hexasphere/struct.Subdivided.html\" title=\"struct hexasphere::Subdivided\">Subdivided</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1070-1075\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.new\" class=\"fn\">new</a>(subdivisions: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, generator: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"struct\" href=\"glam/f32/sse2/vec3a/struct.Vec3A.html\" title=\"struct glam::f32::sse2::vec3a::Vec3A\">Vec3A</a>) -&gt; T) -&gt; Self<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates the base shape from <code>S</code> and subdivides it.</p>\n<p>This is equivalent to\n<code>Subdivided::new_custom_shape(subdivisions, generator, S::default())</code>\nand is convenient when <code>S</code> implements <a href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\"><code>Default</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_custom_shape\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1088-1130\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.new_custom_shape\" class=\"fn\">new_custom_shape</a>(\n    subdivisions: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n    generator: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"struct\" href=\"glam/f32/sse2/vec3a/struct.Vec3A.html\" title=\"struct glam::f32::sse2::vec3a::Vec3A\">Vec3A</a>) -&gt; T,\n    shape: S,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates the base shape from <code>S</code> and subdivides it.</p>\n<ul>\n<li>\n<p><code>subdivisions</code> specifies the number of auxiliary points that will be created\nalong the edges the vertices of the base shape. For example, if <code>subdivisions</code>\nis 0, then the base shape is unaltered; if <code>subdivisions</code> is 3, then each edge\nof the base shape will have 3 added points, forming 4 triangle edges.</p>\n</li>\n<li>\n<p><code>generator</code> is a function run for each vertex once all the subdivisions are\napplied, and its values are stored in an internal <code>Vec</code>,\naccessible from <a href=\"hexasphere/struct.Subdivided.html#method.raw_data\" title=\"method hexasphere::Subdivided::raw_data\"><code>Self::raw_data()</code></a>.</p>\n</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.subdivide\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1138-1157\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.subdivide\" class=\"fn\">subdivide</a>(&amp;mut self, amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Increases the current subdivision count by <code>amount</code>.</p>\n<p>After calling this, you must call <a href=\"hexasphere/struct.Subdivided.html#method.calculate_values\" title=\"method hexasphere::Subdivided::calculate_values\"><code>Self::calculate_values()</code></a>\nto compute new vertex data.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.calculate_values\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1162-1168\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.calculate_values\" class=\"fn\">calculate_values</a>(&amp;mut self, generator: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"struct\" href=\"glam/f32/sse2/vec3a/struct.Vec3A.html\" title=\"struct glam::f32::sse2::vec3a::Vec3A\">Vec3A</a>) -&gt; T)</h4></section></summary><div class=\"docblock\"><p>Recalculate data after <a href=\"hexasphere/struct.Subdivided.html#method.subdivide\" title=\"method hexasphere::Subdivided::subdivide\"><code>Self::subdivide()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.raw_points\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1173-1175\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.raw_points\" class=\"fn\">raw_points</a>(&amp;self) -&gt; &amp;[<a class=\"struct\" href=\"glam/f32/sse2/vec3a/struct.Vec3A.html\" title=\"struct glam::f32::sse2::vec3a::Vec3A\">Vec3A</a>]</h4></section></summary><div class=\"docblock\"><p>The vertex positions created by the subdivision process.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_indices\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1194-1196\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.get_indices\" class=\"fn\">get_indices</a>(&amp;self, triangle: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, buffer: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Appends the indices for the subdivided form of the specified\nmain triangle into <code>buffer</code>.</p>\n<p>The specified <code>triangle</code> is a main triangle on the base\nshape. The range of this should be limited to the number\nof triangles in the base shape.</p>\n<p>Alternatively, use <a href=\"hexasphere/struct.Subdivided.html#method.get_all_indices\" title=\"method hexasphere::Subdivided::get_all_indices\"><code>Self::get_all_indices</code></a> to get all the\nindices.</p>\n<p>Each element put into <code>buffer</code> is an index into <a href=\"hexasphere/struct.Subdivided.html#method.raw_data\" title=\"method hexasphere::Subdivided::raw_data\"><code>Self::raw_data</code></a>\nor <a href=\"hexasphere/struct.Subdivided.html#method.raw_points\" title=\"method hexasphere::Subdivided::raw_points\"><code>Self::raw_points</code></a> specifying the position of a triangle vertex.\nThe first three elements specify the three vertices of a triangle\nto be drawn, and the next three elements specify another triangle,\nand so on.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_all_indices\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1209-1217\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.get_all_indices\" class=\"fn\">get_all_indices</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the indices for the triangles making up the subdivided shape.</p>\n<p>Each element of the returned <a href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec</code></a> is an index into <a href=\"hexasphere/struct.Subdivided.html#method.raw_data\" title=\"method hexasphere::Subdivided::raw_data\"><code>Self::raw_data</code></a>\nor <a href=\"hexasphere/struct.Subdivided.html#method.raw_points\" title=\"method hexasphere::Subdivided::raw_points\"><code>Self::raw_points</code></a> specifying the position of a triangle vertex.\nThe first three elements specify the three vertices of a triangle\nto be drawn, and the next three elements specify another triangle,\nand so on.</p>\n<p>Together, these triangles cover the entire surface of the shape.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_line_indices\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1227-1235\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.get_line_indices\" class=\"fn\">get_line_indices</a>(\n    &amp;self,\n    buffer: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>&gt;,\n    triangle: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n    delta: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n    breaks: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>&gt;),\n)</h4></section></summary><div class=\"docblock\"><p>Appends indices for the wireframe of the subdivided form of\nthe specified main triangle to <code>buffer</code>.</p>\n<p>This is equivalent to <a href=\"hexasphere/struct.Subdivided.html#method.get_all_line_indices\" title=\"method hexasphere::Subdivided::get_all_line_indices\"><code>Self::get_all_line_indices</code></a> except that it\nselects a single main triangle from the base shape. See its documentation\nfor the format of the result, and how to use <code>delta</code> and <code>breaks</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_major_edge_line_indices\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1245-1252\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.get_major_edge_line_indices\" class=\"fn\">get_major_edge_line_indices</a>(\n    &amp;self,\n    edge: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n    buffer: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>&gt;,\n    delta: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n)</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Flawed. Use <code>get_major_edges_line_indices()</code> instead.</span></div></span></summary><div class=\"docblock\"><p>Appends indices for the wireframe of the subdivided form of\nthe specified main triangle edge to <code>buffer</code>.</p>\n<p>The valid range of <code>edge</code> is <code>0..(S::EDGES)</code>.\nSee <a href=\"hexasphere/struct.Subdivided.html#method.get_line_indices\" title=\"method hexasphere::Subdivided::get_line_indices\"><code>Self::get_line_indices</code></a> for more on <code>delta</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_major_edges_line_indices\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1262-1300\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.get_major_edges_line_indices\" class=\"fn\">get_major_edges_line_indices</a>(\n    &amp;self,\n    buffer: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>&gt;,\n    delta: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>,\n    breaks: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>&gt;),\n)</h4></section></summary><div class=\"docblock\"><p>Appends indices for the wireframe of the subdivided form of\nthe base shape’s main triangles’ edges to <code>buffer</code>.</p>\n<p>Compared to <a href=\"hexasphere/struct.Subdivided.html#method.get_all_line_indices\" title=\"method hexasphere::Subdivided::get_all_line_indices\"><code>Self::get_all_line_indices</code></a>, this does not return edges of any of the\ntriangles which were created by subdivision — only edges of the original triangles.\nSee that method’s documentation for how to use <code>delta</code> and <code>breaks</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_all_line_indices\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1322-1339\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.get_all_line_indices\" class=\"fn\">get_all_line_indices</a>(\n    &amp;self,\n    delta: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n    breaks: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>&gt;),\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a vector of indices for the wireframe of the subdivided mesh.</p>\n<p>Each element in the returned <a href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec</code></a> is an index into <a href=\"hexasphere/struct.Subdivided.html#method.raw_data\" title=\"method hexasphere::Subdivided::raw_data\"><code>Self::raw_data</code></a>\nor <a href=\"hexasphere/struct.Subdivided.html#method.raw_points\" title=\"method hexasphere::Subdivided::raw_points\"><code>Self::raw_points</code></a> specifying the position of a triangle vertex.\nThe indices are formatted as “line strips”; that is, each vertex\nshould be connected to the previous by a line, except where a break is\nspecified.</p>\n<p>The <code>breaks</code> function is run every time there is a necessary break in\nthe line strip. Use this to, for example, swap out the buffer using\n<a href=\"https://doc.rust-lang.org/1.85.0/core/mem/fn.take.html\" title=\"fn core::mem::take\"><code>std::mem::take</code></a>, or push a special break-marking index into the buffer.</p>\n<p><code>delta</code> is added to all of the indices pushed into the buffer, and\nis generally intended to be used together with <code>breaks</code> to allow a\nmarker index at zero.\nThis marker index might be used to refer to a vertex with position\nset to NaN, or parsed in some other way by the graphics API the indices\nare fed to.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.subdivisions\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1345-1347\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.subdivisions\" class=\"fn\">subdivisions</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of subdivisions applied when this shape\nwas created.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.raw_data\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1354-1356\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.raw_data\" class=\"fn\">raw_data</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns the custom data for each vertex created by the generator function.</p>\n<p>The length of this slice is equal to the number of vertices in the subdivided shape.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.raw_data_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1363-1365\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.raw_data_mut\" class=\"fn\">raw_data_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns mutable access to the custom data created by the generator function.</p>\n<p>The length of this slice is equal to the number of vertices in the subdivided shape.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.indices_per_main_triangle\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1377-1379\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.indices_per_main_triangle\" class=\"fn\">indices_per_main_triangle</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Calculate the number of indices which each main\ntriangle will add to the vertex buffer.</p>\n<h5 id=\"equation\"><a class=\"doc-anchor\" href=\"#equation\">§</a>Equation</h5><div class=\"example-wrap\"><pre class=\"language-text\"><code>(subdivisions + 1)²</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.vertices_per_main_triangle_shared\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1392-1394\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.vertices_per_main_triangle_shared\" class=\"fn\">vertices_per_main_triangle_shared</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Calculate the number of vertices contained within\neach main triangle including the vertices which are\nshared with another main triangle.</p>\n<h5 id=\"equation-1\"><a class=\"doc-anchor\" href=\"#equation-1\">§</a>Equation</h5><div class=\"example-wrap\"><pre class=\"language-text\"><code>(subdivisions + 1) * (subdivisions + 2) / 2</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.vertices_per_main_triangle_unique\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1411-1416\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.vertices_per_main_triangle_unique\" class=\"fn\">vertices_per_main_triangle_unique</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Calculate the number of vertices contained within each\nmain triangle excluding the ones that are shared with\nother main triangles.</p>\n<h5 id=\"equation-2\"><a class=\"doc-anchor\" href=\"#equation-2\">§</a>Equation</h5><div class=\"example-wrap\"><pre class=\"language-text\"><code>{\n{ subdivisions &lt; 2  : 0\n{\n{ subdivisions &gt;= 2 : (subdivisions - 1) * subdivisions / 2\n{</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shared_vertices\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1429-1431\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.shared_vertices\" class=\"fn\">shared_vertices</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Calculate the number of vertices along the edges\nof the main triangles and the vertices of the main\ntriangles.</p>\n<h5 id=\"equation-3\"><a class=\"doc-anchor\" href=\"#equation-3\">§</a>Equation</h5><div class=\"example-wrap\"><pre class=\"language-text\"><code>subdivisions * EDGES + INITIAL_POINTS</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.linear_distance\" class=\"method\"><a class=\"src rightside\" href=\"src/hexasphere/lib.rs.html#1436-1438\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hexasphere/struct.Subdivided.html#tymethod.linear_distance\" class=\"fn\">linear_distance</a>(&amp;self, p1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>, p2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>, radius: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>Linear distance between two points on this shape.</p>\n</div></details></div></details>",0,"hexasphere::shapes::IcoSphere","hexasphere::shapes::NormIcoSphere","hexasphere::shapes::TetraSphere","hexasphere::shapes::TrianglePlane","hexasphere::shapes::SquarePlane","hexasphere::shapes::CubeSphere"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[26273]}